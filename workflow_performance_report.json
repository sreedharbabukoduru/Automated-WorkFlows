{
  "timestamp": "2025-09-29T06:51:26.575034",
  "total_workflows": 2057,
  "workflow_analyses": [
    {
      "filename": "0057_Activecampaign_Create_Triggered.json",
      "workflow_name": "Receive updates when a new account is added by an admin in ActiveCampaign",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1002_Acuityscheduling_Automate_Triggered.json",
      "workflow_name": "Acuityschedulingtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1085_Affinity_Create_Triggered.json",
      "workflow_name": "Receive updates when a new list is created in Affinity",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0472_Aggregate_Gmail_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0480_Aggregate_Telegram_Automate_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0681_Aggregate_HTTP_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 95,
        "connection_count": 36,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 49,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "0691_Aggregate_Jotform_Create_Triggered.json",
      "workflow_name": "Klicktipp Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0695_Aggregate_Stickynote_Create_Webhook.json",
      "workflow_name": "Klicktipp Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0697_Aggregate_Typeform_Create_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0762_Aggregate_Stickynote_Create_Triggered.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.1875,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0800_Aggregate_Telegram_Automate_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1324_Aggregate_Gmail_Send_Triggered.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1374_Aggregate_Stickynote_Create_Triggered.json",
      "workflow_name": "Openaiassistant Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1404_Aggregate_Telegram_Automation_Triggered.json",
      "workflow_name": "DSP Agent",
      "complexity": {
        "node_count": 29,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1413_Aggregate_Telegram_Automation_Triggered.json",
      "workflow_name": "Dsp agent",
      "complexity": {
        "node_count": 30,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1430_Aggregate_Schedule_Send_Scheduled.json",
      "workflow_name": "Email Summary Agent",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1506_Aggregate_Telegram_Automation_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1544_Aggregate_Schedule_Send_Scheduled.json",
      "workflow_name": "Email Summary Agent",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1576_Aggregate_Stickynote_Automate_Webhook.json",
      "workflow_name": "Ahrefs Keyword Research Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0756_Airtable_Create_Triggered.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1120_Airtable_Mindee_Automate_Webhook.json",
      "workflow_name": "1120_Airtable_Mindee_Automate_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1138_Airtable_Vonage_Automation_Scheduled.json",
      "workflow_name": "Daily Language Learning",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1220_Airtable_Lemlist_Automate.json",
      "workflow_name": "Airtable Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1261_Airtabletool_Stickynote_Automation_Triggered.json",
      "workflow_name": "AI Social Media Caption Creator",
      "complexity": {
        "node_count": 16,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1723_Airtabletool_Stickynote_Automation_Triggered.json",
      "workflow_name": "AI Social Media Caption Creator",
      "complexity": {
        "node_count": 16,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1681_Airtoptool_Slack_Automation_Triggered.json",
      "workflow_name": "Airtop Web Agent",
      "complexity": {
        "node_count": 26,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0138_Amqp_Send_Triggered.json",
      "workflow_name": "Receive messages for an ActiveMQ queue via AMQP Trigger",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1224_Apitemplateio_Typeform_Automation_Triggered.json",
      "workflow_name": "1224_Apitemplateio_Typeform_Automation_Triggered",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0241_Asana_Notion_Create_Triggered.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0967_Asana_Update_Triggered.json",
      "workflow_name": "Receive updates when an event occurs in Asana",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1223_Asana_Webhook_Automate_Webhook.json",
      "workflow_name": "1223_Asana_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1060_Automate_Webhook.json",
      "workflow_name": "POC - Chatbot Order by Sheet Data",
      "complexity": {
        "node_count": 33,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1123_Automate.json",
      "workflow_name": "Function Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1271_Automate.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1326_Automate.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1911_Automate.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1250_Automation.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1265_Automation_Triggered.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1290_Automation.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 5,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 81.0
    },
    {
      "filename": "1497_Automation.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1634_Automation.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "2047_Automation.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1227_Autopilot_Automate.json",
      "workflow_name": "Autopilot Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1228_Autopilot_Airtable_Automate_Triggered.json",
      "workflow_name": "Autopilottrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0150_Awsrekognition_GoogleSheets_Automation_Webhook.json",
      "workflow_name": "0150_Awsrekognition_GoogleSheets_Automation_Webhook",
      "complexity": {
        "node_count": 6,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0149_Awss3_Wait_Automate_Triggered.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0151_Awss3_GoogleDrive_Import_Triggered.json",
      "workflow_name": "Googledrivetrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0593_Awss3_Compression_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0984_Awssns_Automate_Triggered.json",
      "workflow_name": "Awssnstrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0148_Awstextract_Telegram_Automate_Triggered.json",
      "workflow_name": "Awstextract Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.5,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0525_Bannerbear_Discord_Create_Webhook.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1665_Bannerbear_Discord_Automation_Webhook.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1822_Baserow_Stickynote_Automation_Webhook.json",
      "workflow_name": "Baserow markdown to html",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0403_Beeminder_Strava_Create_Triggered.json",
      "workflow_name": "Add a datapoint to Beeminder when new activity is added to Strava",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0999_Bitbucket_Automate_Triggered.json",
      "workflow_name": "Bitbuckettrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0910_Bitly_Datetime_Update_Webhook.json",
      "workflow_name": "Agent Workflow",
      "complexity": {
        "node_count": 175,
        "connection_count": 34,
        "max_depth": 1,
        "branching_factor": 0.8676470588235294,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 97,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 2,
        "file_operations": 5,
        "api_calls": 1,
        "loops": 1,
        "error_handling": 57,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0003_Bitwarden_Automate.json",
      "workflow_name": "Bitwarden Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1031_Box_Automate_Triggered.json",
      "workflow_name": "Boxtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "2058_Calcslive_Engineering_Calculations_Manual.json",
      "workflow_name": "CalcsLive Demo Workflow Template",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0039_Calendly_Notion_Automate_Triggered.json",
      "workflow_name": "Calendlytrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0125_Calendly_Notion_Automate_Triggered.json",
      "workflow_name": "Notion Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0277_Calendly_Mautic_Create_Triggered.json",
      "workflow_name": "Calendlytrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0430_Calendly_Filter_Create_Triggered.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0660_Calendly_Noop_Create_Triggered.json",
      "workflow_name": "Klicktipp Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0661_Calendly_Noop_Create_Triggered.json",
      "workflow_name": "Klicktipp Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1009_Calendly_Automate_Triggered.json",
      "workflow_name": "Calendlytrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0041_Chargebee_Update_Triggered.json",
      "workflow_name": "Receive updates for events in Chargebee",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0047_Clickup_Update_Triggered.json",
      "workflow_name": "Receive updates for events in ClickUp",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0282_Clickup_Notion_Update_Triggered.json",
      "workflow_name": "Notiontrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0469_Clickup_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Respondtowebhook Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0750_Clockify_Webhook_Sync_Webhook.json",
      "workflow_name": "Syncro to Clockify",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1005_Clockify_Automate_Triggered.json",
      "workflow_name": "Clockifytrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1923_Clockify_Stickynote_Create_Triggered.json",
      "workflow_name": "Add new clients from Notion to Clockify",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 0.5,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0034_Code_Filter_Create_Scheduled.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.03125,
        "cyclomatic_complexity": 10,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 79.0
    },
    {
      "filename": "0182_Code_GitHub_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0285714285714285,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 17,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0239_Code_Typeform_Create_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0273_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Zendesk Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0288_Code_Schedule_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0740740740740742,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0296_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0298_Code_Readpdf_Send_Triggered.json",
      "workflow_name": "Readpdf Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0299_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Openai Workflow",
      "complexity": {
        "node_count": 71,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0172413793103448,
        "cyclomatic_complexity": 9,
        "node_type_diversity": 15,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0307_Code_Postgres_Automate_Triggered.json",
      "workflow_name": "Postgrestrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0308_Code_Schedule_Automate_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0309_Code_Filter_Automate_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0341_Code_Filter_Import_Webhook.json",
      "workflow_name": "[1/3 - anomaly detection] [1/2 - KNN classification] Batch upload dataset to Qdrant (crops dataset)",
      "complexity": {
        "node_count": 61,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9777777777777777,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0362_Code_HTTP_Send_Webhook.json",
      "workflow_name": "xSend and check TTS (Text-to-speech) voice calls end email verification",
      "complexity": {
        "node_count": 35,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0365_Code_Manual_Send_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0366_Code_Manual_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0367_Code_Manual_Send_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0370_Code_Schedule_Create_Webhook.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0373_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0416666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0379_Code_Pipedrive_Create_Triggered.json",
      "workflow_name": "Pipedrive Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0380_Code_Manual_Create_Triggered.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.1,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0391_Code_Filter_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0393_Code_Slack_Create_Webhook.json",
      "workflow_name": "Airtable Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0397_Code_Schedule_Import_Scheduled.json",
      "workflow_name": "Itemlists Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0857142857142856,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0401_Code_Filter_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0415_Code_GoogleCalendar_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0437_Code_Filter_Create_Scheduled.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 39,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0416666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0438_Code_Filter_Create_Webhook.json",
      "workflow_name": "Splitinbatches Workflow",
      "complexity": {
        "node_count": 48,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0446_Code_Todoist_Create_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0482_Code_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "[n8n] YouTube Channel Advanced RSS Feeds Generator",
      "complexity": {
        "node_count": 20,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0526315789473684,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0491_Code_Webhook_Monitor_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0506_Code_Filter_Create_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.1538461538461537,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0516_Code_GitHub_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0344827586206897,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0519_Code_Manual_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0546_Code_Schedule_Create_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0548_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 73,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.027027027027027,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 23,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 29,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0553_Code_Schedule_Send_Scheduled.json",
      "workflow_name": "Ftp Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0571_Code_Webhook_Send_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0577_Code_Editimage_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0580_Code_Editimage_Import_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0598_Code_Editimage_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0526315789473684,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0600_Code_Extractfromfile_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 82,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 1.0408163265306123,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 31,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0605_Code_Itemlists_Create_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 47,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0606060606060606,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 3,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 88.5
    },
    {
      "filename": "0628_Code_Schedule_Export_Scheduled.json",
      "workflow_name": "Backup workflows to git repository",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0630_Code_Webhook_Create_Scheduled.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0651_Code_Schedule_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0655_Code_Postgres_Update_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.09375,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 7,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 85
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 87.0
    },
    {
      "filename": "0658_Code_Schedule_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0665_Code_Editimage_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 0.9473684210526315,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0667_Code_GitHub_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0669_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0670_Code_Microsoftoutlook_Create_Webhook.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0671_Code_Converttofile_Create_Webhook.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 50,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0686_Code_Webhook_Update_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 32,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0693_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Agent Workflow",
      "complexity": {
        "node_count": 49,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0696_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Switch Workflow",
      "complexity": {
        "node_count": 96,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 40,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0700_Code_Respondtowebhook_Send_Webhook.json",
      "workflow_name": "Memorybufferwindow Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0701_Code_Strava_Send_Triggered.json",
      "workflow_name": "Stravatrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0706_Code_Schedule_Create_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 68,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "0708_Code_Filter_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0709_Code_HTTP_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 50,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.972972972972973,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0718_Code_GitHub_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0726_Code_Schedule_Update_Scheduled.json",
      "workflow_name": "Ssh Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.9,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0753_Code_Executiondata_Automation_Webhook.json",
      "workflow_name": "Luma AI Dream Machine - Simple v1 - AK",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 0.9166666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0767_Code_Filter_Send_Webhook.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 45,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0773_Code_Manual_Update_Triggered.json",
      "workflow_name": "Automatically Update YouTube Video Descriptions with Inserted Text",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 0.875,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0777_Code_Filter_Automation_Webhook.json",
      "workflow_name": "mails2notion V2",
      "complexity": {
        "node_count": 51,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0781_Code_Schedule_Export_Scheduled.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0784_Code_Form_Automation_Webhook.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 0.9166666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0787_Code_GoogleCalendar_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0794_Code_Schedule_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0808_Code_Form_Send_Webhook.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0844_Code_Ghost_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0848_Code_Filter_Update_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0851_Code_Extractfromfile_Monitor_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0856_Code_Schedule_Update_Scheduled.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1818181818181819,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0863_Code_Schedule_Import_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0891_Code_Manual_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0898_Code_Schedule_Create_Scheduled.json",
      "workflow_name": "Memorybufferwindow Workflow",
      "complexity": {
        "node_count": 95,
        "connection_count": 41,
        "max_depth": 1,
        "branching_factor": 1.0434782608695652,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 45,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "0918_Code_Noop_Send_Triggered.json",
      "workflow_name": "Informationextractor Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0922_Code_Webhook_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0924_Code_Respondtowebhook_Process_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0926_Code_Webhook_Create_Webhook.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 86,
        "connection_count": 54,
        "max_depth": 1,
        "branching_factor": 1.1142857142857143,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0946_Code_Webhook_Send_Webhook.json",
      "workflow_name": "Analyze_email_headers_for_IPs_and_spoofing__3",
      "complexity": {
        "node_count": 64,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.037037037037037,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0980_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "Google Page Entity Extraction Template",
      "complexity": {
        "node_count": 25,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1109_Code_Schedule_Automation_Scheduled.json",
      "workflow_name": "YouTube to Airtable Anonym",
      "complexity": {
        "node_count": 24,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1161_Code_Slack_Send_Webhook.json",
      "workflow_name": "Receive_and_analyze_emails_with_rules_in_Sublime_Security",
      "complexity": {
        "node_count": 31,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1178_Code_HTTP_Automation_Webhook.json",
      "workflow_name": "Publish Videos & Images - Blotato",
      "complexity": {
        "node_count": 108,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0952380952380953,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 12,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 73,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 12 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1257_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "Switch Workflow",
      "complexity": {
        "node_count": 96,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 40,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1259_Code_Strava_Automation_Triggered.json",
      "workflow_name": "Stravatrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1264_Code_HTTP_Automation_Webhook.json",
      "workflow_name": "Complete Youtube",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1278_Code_Schedule_Monitor_Webhook.json",
      "workflow_name": "AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack",
      "complexity": {
        "node_count": 49,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1281_Code_Schedule_Monitor_Webhook.json",
      "workflow_name": "AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack",
      "complexity": {
        "node_count": 49,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1286_Code_Manual_Automation_Triggered.json",
      "workflow_name": "Podcast Digest",
      "complexity": {
        "node_count": 27,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1292_Code_GitHub_Automate_Webhook.json",
      "workflow_name": "Code Review workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1299_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 73,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.027027027027027,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 23,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 29,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1301_Code_Extractfromfile_Automation_Triggered.json",
      "workflow_name": "Amazon Ads AI Optimization",
      "complexity": {
        "node_count": 32,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1307_Code_Converttofile_Send_Webhook.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 50,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1308_Code_Microsoftoutlook_Send_Webhook.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1313_Code_HTTP_Automation_Webhook.json",
      "workflow_name": "\ud83c\udfa5 Analyze YouTube Video for Summaries, Transcripts & Content + Google Gemini AI",
      "complexity": {
        "node_count": 57,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.096774193548387,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1317_Code_Schedule_Export_Scheduled.json",
      "workflow_name": "\ud83e\uddf9 Archive (delete) duplicate items from a Notion database",
      "complexity": {
        "node_count": 16,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1320_Code_Schedule_Automate_Webhook.json",
      "workflow_name": "Blog Automation TEMPLATE",
      "complexity": {
        "node_count": 53,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 0.9428571428571428,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 11,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1331_Code_Schedule_Automate_Webhook.json",
      "workflow_name": "Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API",
      "complexity": {
        "node_count": 26,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1337_Code_Schedule_Automate_Webhook.json",
      "workflow_name": "Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API",
      "complexity": {
        "node_count": 26,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1356_Code_Webhook_Import_Webhook.json",
      "workflow_name": "Bitrix24 Task Form Widget Application Workflow example with Webhook Integration",
      "complexity": {
        "node_count": 73,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.0303030303030303,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 46,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1378_Code_Filter_Automation_Triggered.json",
      "workflow_name": "Chat with Google Sheet",
      "complexity": {
        "node_count": 26,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1391_Code_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Memorybufferwindow Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1401_Code_Webhook_Automate_Webhook.json",
      "workflow_name": "Workflow stats",
      "complexity": {
        "node_count": 62,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0816326530612246,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1402_Code_Manual_Automation_Webhook.json",
      "workflow_name": "LinkedIn Web Scraping with Bright Data MCP Server & Google Gemini",
      "complexity": {
        "node_count": 40,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.103448275862069,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1423_Code_Editimage_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1426_Code_Schedule_Export_Webhook.json",
      "workflow_name": "Backup workflows to git repository on Gitea",
      "complexity": {
        "node_count": 43,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 0.9705882352941176,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1428_Code_Schedule_Send_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1429_Code_Schedule_Send_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1435_Code_Slack_Automation_Webhook.json",
      "workflow_name": "piepdrive-test",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1446_Code_Schedule_Automate_Scheduled.json",
      "workflow_name": "My workflow 2",
      "complexity": {
        "node_count": 57,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1460_Code_Schedule_Automation_Scheduled.json",
      "workflow_name": "INSEE Enrichment for Agile CRM",
      "complexity": {
        "node_count": 31,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1461_Code_Manual_Automation_Webhook.json",
      "workflow_name": "YouTube Video Analyzer with AI",
      "complexity": {
        "node_count": 38,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1478_Code_Todoist_Automate_Scheduled.json",
      "workflow_name": "My workflow 4",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1500_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "puq-docker-minio-deploy",
      "complexity": {
        "node_count": 56,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.0149253731343284,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 9,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1514_Code_HTTP_Create_Webhook.json",
      "workflow_name": "Dynamically create tables in Airtable for your Webflow form submissions",
      "complexity": {
        "node_count": 34,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1518_Code_Manual_Process_Webhook.json",
      "workflow_name": "Convert image from jpg/png to webp",
      "complexity": {
        "node_count": 38,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1586_Code_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Youtube Discord Bot",
      "complexity": {
        "node_count": 25,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1594_Code_Schedule_Automation_Webhook.json",
      "workflow_name": "Matomo Analytics Report",
      "complexity": {
        "node_count": 27,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1605_Code_Editimage_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 0.9473684210526315,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1619_Code_Pipedrive_Automation_Triggered.json",
      "workflow_name": "Pipedrive Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1630_Code_Form_Automation_Triggered.json",
      "workflow_name": "Form with Dynamic Dropdown Field",
      "complexity": {
        "node_count": 23,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1644_Code_Schedule_Automation_Scheduled.json",
      "workflow_name": "UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1646_Code_Schedule_Create_Scheduled.json",
      "workflow_name": "News Extraction",
      "complexity": {
        "node_count": 55,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.1290322580645162,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1653_Code_Webhook_Send_Webhook.json",
      "workflow_name": "Openai Workflow",
      "complexity": {
        "node_count": 71,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0172413793103448,
        "cyclomatic_complexity": 9,
        "node_type_diversity": 15,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1656_Code_Readpdf_Send_Triggered.json",
      "workflow_name": "Readpdf Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1664_Code_HTTP_Send_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 50,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.972972972972973,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1666_Code_Manual_Automation_Webhook.json",
      "workflow_name": "Spot Workplace Discrimination Patterns with AI",
      "complexity": {
        "node_count": 70,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0638297872340425,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1670_Code_Schedule_Automation_Webhook.json",
      "workflow_name": "SERPBear analytics template",
      "complexity": {
        "node_count": 27,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1671_Code_Schedule_Automation_Webhook.json",
      "workflow_name": "Umami analytics template",
      "complexity": {
        "node_count": 52,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1699_Code_Editimage_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1710_Code_Schedule_Automation_Scheduled.json",
      "workflow_name": "UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1713_Code_Webhook_Automate_Webhook.json",
      "workflow_name": "Workflow dashboard with mermaid.js",
      "complexity": {
        "node_count": 35,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1724_Code_Schedule_Automation_Scheduled.json",
      "workflow_name": "Todoist Weekly Review Template",
      "complexity": {
        "node_count": 23,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1726_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "Docsify example",
      "complexity": {
        "node_count": 106,
        "connection_count": 55,
        "max_depth": 1,
        "branching_factor": 1.1612903225806452,
        "cyclomatic_complexity": 8,
        "node_type_diversity": 21,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 41,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1728_Code_Filter_Import_Webhook.json",
      "workflow_name": "[1/3 - anomaly detection] [1/2 - KNN classification] Batch upload dataset to Qdrant (crops dataset)",
      "complexity": {
        "node_count": 61,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9777777777777777,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1756_Code_HTTP_Automation_Webhook.json",
      "workflow_name": "Auto Knowledge Base Article Generator",
      "complexity": {
        "node_count": 36,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.12,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1758_Code_HTTP_Automation_Webhook.json",
      "workflow_name": "Complete Youtube",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1759_Code_Filter_Monitor_Triggered.json",
      "workflow_name": "Monitor Competitor Pricing",
      "complexity": {
        "node_count": 17,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.2222222222222223,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1761_Code_Extractfromfile_Automate_Triggered.json",
      "workflow_name": "Automated Image Metadata Tagging",
      "complexity": {
        "node_count": 20,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1765_Code_Filter_Process_Triggered.json",
      "workflow_name": "Colombian Invoices Processing",
      "complexity": {
        "node_count": 34,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0384615384615385,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1789_Code_Webhook_Automate_Webhook.json",
      "workflow_name": "(G) LineChatBot + Google Sheets (as a memory)",
      "complexity": {
        "node_count": 37,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1796_Code_Slack_Automation_Webhook.json",
      "workflow_name": "piepdrive-test",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1802_Code_Manual_Import_Webhook.json",
      "workflow_name": "Tiktok Downloader",
      "complexity": {
        "node_count": 29,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1809_Code_Schedule_Automate_Webhook.json",
      "workflow_name": "Blog Automation TEMPLATE",
      "complexity": {
        "node_count": 53,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 0.9428571428571428,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 11,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1813_Code_GoogleCalendar_Automation_Triggered.json",
      "workflow_name": "Inverview Scheduler",
      "complexity": {
        "node_count": 34,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 0.9473684210526315,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1814_Code_Extractfromfile_Automate_Webhook.json",
      "workflow_name": "n8n workflow deployer",
      "complexity": {
        "node_count": 48,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1815_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "puq-docker-influxdb-deploy",
      "complexity": {
        "node_count": 56,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.0149253731343284,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 9,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1818_Code_Converttofile_Automate_Webhook.json",
      "workflow_name": "My workflow 3",
      "complexity": {
        "node_count": 67,
        "connection_count": 40,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 21,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1819_Code_Discord_Send_Triggered.json",
      "workflow_name": "Send Discord message from Webflow form submission",
      "complexity": {
        "node_count": 22,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1825_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "puq-docker-n8n-deploy",
      "complexity": {
        "node_count": 57,
        "connection_count": 34,
        "max_depth": 1,
        "branching_factor": 1.0294117647058822,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 9,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1832_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "PUQ Docker NextCloud deploy",
      "complexity": {
        "node_count": 85,
        "connection_count": 44,
        "max_depth": 1,
        "branching_factor": 1.0693069306930694,
        "cyclomatic_complexity": 10,
        "node_type_diversity": 10,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1836_Code_Googledocs_Automation_Webhook.json",
      "workflow_name": "Tech Radar",
      "complexity": {
        "node_count": 78,
        "connection_count": 41,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 26,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 5,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 85
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.5
    },
    {
      "filename": "1837_Code_Ghost_Automation_Triggered.json",
      "workflow_name": "\ud83d\udcc4\ud83d\udee0\ufe0fPDF2Blog",
      "complexity": {
        "node_count": 19,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1839_Code_Manual_Automation_Webhook.json",
      "workflow_name": "OCR receipts from Google Drive",
      "complexity": {
        "node_count": 26,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.105263157894737,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1844_Code_Schedule_Export_Webhook.json",
      "workflow_name": "Backup Squarespace code Injections to Github",
      "complexity": {
        "node_count": 28,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1850_Code_Schedule_Automation_Webhook.json",
      "workflow_name": "Umami analytics template",
      "complexity": {
        "node_count": 52,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1861_Code_Form_Automation_Triggered.json",
      "workflow_name": "Streamline data from an n8n form into Google Sheet and Airtable",
      "complexity": {
        "node_count": 16,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1862_Code_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "Calculate the Centroid of a Set of Vectors",
      "complexity": {
        "node_count": 19,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1864_Code_Executecommand_Create_Webhook.json",
      "workflow_name": "AutoClip \u2013 Automatically Generate Video Clips and Upload to YouTube",
      "complexity": {
        "node_count": 52,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.0465116279069768,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1865_Code_HTTP_Create_Webhook.json",
      "workflow_name": "YT New Video Upload",
      "complexity": {
        "node_count": 31,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1875_Code_Schedule_Automate_Scheduled.json",
      "workflow_name": "My workflow",
      "complexity": {
        "node_count": 49,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1906_Code_Extractfromfile_Automate_Triggered.json",
      "workflow_name": "Google Drive Automation",
      "complexity": {
        "node_count": 25,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1910_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "Lead Qualification with BatchData",
      "complexity": {
        "node_count": 41,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1921_Code_Filter_Automation_Webhook.json",
      "workflow_name": "mails2notion V2",
      "complexity": {
        "node_count": 51,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1924_Code_Webhook_Export_Webhook.json",
      "workflow_name": "Line Save File to Google Drive and Log File's URL",
      "complexity": {
        "node_count": 57,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0392156862745099,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 9,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1958_Code_Slack_Send_Triggered.json",
      "workflow_name": "Send Slack message from Webflow form submission",
      "complexity": {
        "node_count": 22,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1965_Code_Schedule_Automation_Webhook.json",
      "workflow_name": "SERPBear analytics template",
      "complexity": {
        "node_count": 27,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1966_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "puq-docker-immich-deploy",
      "complexity": {
        "node_count": 58,
        "connection_count": 35,
        "max_depth": 1,
        "branching_factor": 1.0140845070422535,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 9,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1969_Code_Stickynote_Automation_Triggered.json",
      "workflow_name": "Zip multiple files",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1984_Code_Executecommand_Automation_Webhook.json",
      "workflow_name": "Credentials Transfer",
      "complexity": {
        "node_count": 35,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1994_Code_Manual_Automation_Webhook.json",
      "workflow_name": "Spot Workplace Discrimination Patterns with AI",
      "complexity": {
        "node_count": 70,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0638297872340425,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2008_Code_Webhook_Automate_Webhook.json",
      "workflow_name": "Automated Work Attendance with Location Triggers",
      "complexity": {
        "node_count": 24,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2011_Code_Manual_Import_Webhook.json",
      "workflow_name": "Import multiple Manufacturers from Google Sheets to Shopware 6",
      "complexity": {
        "node_count": 30,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 0.9565217391304348,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2012_Code_Schedule_Create_Scheduled.json",
      "workflow_name": "News Extraction",
      "complexity": {
        "node_count": 55,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.1290322580645162,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2020_Code_Noop_Create_Triggered.json",
      "workflow_name": "Addon for Workflow Nodes Update Check Template",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "2026_Code_Manual_Automation_Webhook.json",
      "workflow_name": "Use XMLRPC via HttpRequest-node to post on Wordpress.com",
      "complexity": {
        "node_count": 18,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "2033_Code_Extractfromfile_Automate_Webhook.json",
      "workflow_name": "AI-Powered WhatsApp Chatbot for Text, Voice, Images & PDFs",
      "complexity": {
        "node_count": 60,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 23,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2034_Code_Webhook_Automate_Webhook.json",
      "workflow_name": "OIDC client workflow",
      "complexity": {
        "node_count": 50,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "2046_Code_Webhook_Automation_Webhook.json",
      "workflow_name": "Docsify example",
      "complexity": {
        "node_count": 106,
        "connection_count": 55,
        "max_depth": 1,
        "branching_factor": 1.1612903225806452,
        "cyclomatic_complexity": 8,
        "node_type_diversity": 21,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 41,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0177_Coingecko_Cron_Update_Scheduled.json",
      "workflow_name": "Update Crypto Values",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0623_Comparedatasets_Manual_Create_Triggered.json",
      "workflow_name": "Comparedatasets Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1294_Compression_Manual_Automation_Webhook.json",
      "workflow_name": "SQL agent with memory",
      "complexity": {
        "node_count": 27,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1683_Compression_Manual_Automation_Webhook.json",
      "workflow_name": "SQL agent with memory",
      "complexity": {
        "node_count": 27,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0723_Convertkit_Create_Triggered.json",
      "workflow_name": "Receive updates when a subscriber is added through a form in ConvertKit",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0508_Converttofile_Manual_Process_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0889_Converttofile_HTTP_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 48,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0285714285714285,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1985_Converttofile_HTTP_Automation_Webhook.json",
      "workflow_name": "n8n Graphic Design Team",
      "complexity": {
        "node_count": 87,
        "connection_count": 43,
        "max_depth": 1,
        "branching_factor": 0.972972972972973,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 45,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1006_Copper_Automate_Triggered.json",
      "workflow_name": "Coppertrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0972_Cortex_Emailreadimap_Send.json",
      "workflow_name": "Email",
      "complexity": {
        "node_count": 25,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.1176470588235294,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1124_Create.json",
      "workflow_name": "Function Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1125_Create.json",
      "workflow_name": "Function Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0822_Cron_Postgres_Automation_Scheduled.json",
      "workflow_name": "Postgres Data Ingestion",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0042_Crypto_Airtable_Update_Webhook.json",
      "workflow_name": "0042_Crypto_Airtable_Update_Webhook",
      "complexity": {
        "node_count": 26,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 35,
      "overall_score": 66.5
    },
    {
      "filename": "0164_Crypto_Webhook_Automate_Webhook.json",
      "workflow_name": "0164_Crypto_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0738_Customerio_Update_Triggered.json",
      "workflow_name": "Receive updates when a subscriber unsubscribes in Customer.io",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0087_Datetime_Slack_Automate_Scheduled.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0159_Datetime_Functionitem_Create_Webhook.json",
      "workflow_name": "0159_Datetime_Functionitem_Create_Webhook",
      "complexity": {
        "node_count": 12,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 25,
      "overall_score": 64.0
    },
    {
      "filename": "0168_Datetime_GoogleCalendar_Send_Scheduled.json",
      "workflow_name": "Datetime Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0311_Datetime_Schedule_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0316_Datetime_Schedule_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0348_Datetime_GoogleCalendar_Automation_Scheduled.json",
      "workflow_name": "Google Cal to Zoom meeting",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0396_Datetime_Schedule_Automation_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0444_Datetime_Todoist_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0682_Datetime_Schedule_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1092_Datetime_Schedule_Sync_Scheduled.json",
      "workflow_name": "Two Way Sync Pipedrive and MySQL",
      "complexity": {
        "node_count": 20,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9285714285714286,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1272_Datetime_Webhook_Create_Webhook.json",
      "workflow_name": "AI-Generated Summary Block for WordPress Posts - with OpenAI, WordPress, Google Sheets & Slack",
      "complexity": {
        "node_count": 54,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 0.9487179487179487,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1273_Datetime_Webhook_Create_Webhook.json",
      "workflow_name": "AI-Generated Summary Block for WordPress Posts - with OpenAI, WordPress, Google Sheets & Slack",
      "complexity": {
        "node_count": 54,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 0.9487179487179487,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1296_Datetime_Splitout_Process.json",
      "workflow_name": "Parse DMARC reports",
      "complexity": {
        "node_count": 37,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.08,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1510_Datetime_Code_Automation_Webhook.json",
      "workflow_name": "Intelligent Web Query and Semantic Re-Ranking Flow",
      "complexity": {
        "node_count": 52,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1523_Datetime_Code_Automation_Scheduled.json",
      "workflow_name": "Daylight Saving Time Notification",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1755_Datetime_Code_Automation_Webhook.json",
      "workflow_name": "Testing Mulitple Local LLM with LM Studio",
      "complexity": {
        "node_count": 34,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2003_Datetime_Code_Automation_Webhook.json",
      "workflow_name": "Intelligent Web Query and Semantic Re-Ranking Flow",
      "complexity": {
        "node_count": 52,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2050_Datetime_Code_Automation_Webhook.json",
      "workflow_name": "Testing Mulitple Local LLM with LM Studio",
      "complexity": {
        "node_count": 34,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1184_Debughelper_HTTP_Create_Webhook.json",
      "workflow_name": "Build your first AI MCP Server",
      "complexity": {
        "node_count": 48,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2054_Deep_Research_Report_Generation_With_Open_Router_Google_Search_Webhook_Telegram_and_Notion.json",
      "workflow_name": "Deep Research Report Generation Using Open Router, Google Search, Webhook/Telegram and Notion",
      "complexity": {
        "node_count": 89,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 0.987012987012987,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 46,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "generate-collaborative-handbooks-with-gpt4o-multi-agent-orchestration-human-review.json",
      "workflow_name": "Pyragogy AI Village - Orchestrazione Master (Architettura Profonda V2)",
      "complexity": {
        "node_count": 35,
        "connection_count": 34,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 69.0
    },
    {
      "filename": "0360_Discord_Cron_Automation_Scheduled.json",
      "workflow_name": "cheems",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "2028_Discord_Hunter_Automate_Triggered.json",
      "workflow_name": "My workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1242_Discordtool_Stickynote_Automation_Triggered.json",
      "workflow_name": "Discord Agent",
      "complexity": {
        "node_count": 22,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1913_Discordtool_Stickynote_Automation_Webhook.json",
      "workflow_name": "Discord MCP Server",
      "complexity": {
        "node_count": 35,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0969_Dropbox_Manual_Automate_Webhook.json",
      "workflow_name": "Workflow management",
      "complexity": {
        "node_count": 19,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 55,
      "overall_score": 76.0
    },
    {
      "filename": "0575_Editimage_Manual_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1369_Editimage_Manual_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0616_Elasticsearch_Cron_Create_Webhook.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0134_Emailreadimap_Nextcloud_Send.json",
      "workflow_name": "Emailreadimap Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 90.5
    },
    {
      "filename": "1050_Emailreadimap_Send.json",
      "workflow_name": "Emailreadimap Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1277_Emailreadimap_Manual_Send_Webhook.json",
      "workflow_name": "Email AI Auto-responder. Summerize and send email",
      "complexity": {
        "node_count": 61,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.024390243902439,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1284_Emailreadimap_Markdown_Send.json",
      "workflow_name": "AI Email processing autoresponder with approval (Yes/No)",
      "complexity": {
        "node_count": 35,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1427_Emailreadimap_Manual_Send_Webhook.json",
      "workflow_name": "Effortless Email Management with AI",
      "complexity": {
        "node_count": 63,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.025,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1588_Emailreadimap_Markdown_Send.json",
      "workflow_name": "AI Email processing autoresponder with approval (Yes/No)",
      "complexity": {
        "node_count": 35,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1936_Emailreadimap_Manual_Send_Webhook.json",
      "workflow_name": "Effortless Email Management with AI",
      "complexity": {
        "node_count": 63,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.025,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1962_Emailreadimap_Manual_Send_Webhook.json",
      "workflow_name": "Email AI Auto-responder. Summerize and send email",
      "complexity": {
        "node_count": 61,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.024390243902439,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0113_Emailsend_GoogleDrive_Send_Triggered.json",
      "workflow_name": "Googledrivetrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1628_Emailsend_Code_Automation_Webhook.json",
      "workflow_name": "Property Lead Contact Enrichment from CRM",
      "complexity": {
        "node_count": 31,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0952380952380953,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1214_Emelia_Automate.json",
      "workflow_name": "Emelia Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0126_Error_Slack_Automate_Triggered.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0395_Error_Mondaycom_Update_Triggered.json",
      "workflow_name": "Mondaycom Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0447_Error_Slack_Send_Triggered.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0454_Error_Telegram_Send_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0456_Error_Gmail_Send_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0518_Error_Code_Update_Scheduled.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0545_Error_N8N_Import_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0945_Error_Code_Send_Triggered.json",
      "workflow_name": "Error Alert and Summarizer",
      "complexity": {
        "node_count": 19,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1036_Error_Twilio_Send_Triggered.json",
      "workflow_name": "Send an SMS when a workflow fails",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1099_Error_Gmail_Send_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1179_Error_Mailgun_Automate_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1237_Error_Telegram_Automation_Webhook.json",
      "workflow_name": "google drive to instagram, tiktok and youtube",
      "complexity": {
        "node_count": 44,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1715_Error_Telegram_Automation_Webhook.json",
      "workflow_name": "template in store",
      "complexity": {
        "node_count": 36,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.037037037037037,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1777_Error_Postgres_Send_Triggered.json",
      "workflow_name": "Log errors and avoid sending too many emails",
      "complexity": {
        "node_count": 31,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1849_Error_Stickynote_Automation_Webhook.json",
      "workflow_name": "n8n Error Report to Line",
      "complexity": {
        "node_count": 15,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1948_Error_Telegram_Send_Triggered.json",
      "workflow_name": "Error Handler send Telegram",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1991_Error_Code_Automation_Triggered.json",
      "workflow_name": "CV Evaluation - Error Handling",
      "complexity": {
        "node_count": 18,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1007_Eventbrite_Automate_Triggered.json",
      "workflow_name": "Eventbritetrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0097_Executecommand_Mailgun_Automation_Webhook.json",
      "workflow_name": "Steam + CF Report",
      "complexity": {
        "node_count": 9,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0190_Executecommand_Functionitem_Automate.json",
      "workflow_name": "Executecommand Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 2.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0534_Executecommand_Localfile_Process_Triggered.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1190_Executecommand_Readbinaryfile_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1587_Executecommand_Localfile_Automation_Triggered.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0371_Executeworkflow_Summarize_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0372_Executeworkflow_Hackernews_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0406_Executeworkflow_Slack_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0569_Executeworkflow_Telegram_Update_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 90.0
    },
    {
      "filename": "0872_Executeworkflow_Executecommandtool_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0947_Executeworkflow_Stickynote_Automate_Triggered.json",
      "workflow_name": "Workflow Results to Markdown Notes in Your Obsidian Vault, via Google Drive",
      "complexity": {
        "node_count": 24,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.9,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1793_Executeworkflow_Airtabletool_Automation_Triggered.json",
      "workflow_name": "\ud83e\udd16Contact Agent",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1794_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "\ud83e\udd16Content Creator Agent",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1918_Executeworkflow_Automation_Triggered.json",
      "workflow_name": "Format US Phone Number",
      "complexity": {
        "node_count": 13,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 0.9090909090909091,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1754_Executiondata_Slack_Automate_Webhook.json",
      "workflow_name": "ClockifyBlockiaWorkflow",
      "complexity": {
        "node_count": 68,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0204081632653061,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 7,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 46,
        "caching_opportunities": 0,
        "performance_score": 86
      },
      "optimization_opportunities": [
        "Consider parallelizing 7 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.8
    },
    {
      "filename": "1972_Executiondata_Stickynote_Automation_Webhook.json",
      "workflow_name": "Luma AI - Webhook Response v1 - AK",
      "complexity": {
        "node_count": 19,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1597_Export.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0601_Extractfromfile_Manual_Create_Webhook.json",
      "workflow_name": "Whatsapptrigger Workflow",
      "complexity": {
        "node_count": 44,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0646_Extractfromfile_Form_Export_Webhook.json",
      "workflow_name": "Extractfromfile Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0694_Extractfromfile_Manual_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0741_Extractfromfile_Stickynote_Automation_Triggered.json",
      "workflow_name": "RAG AI Agent with Milvus and Cohere",
      "complexity": {
        "node_count": 23,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0828_Extractfromfile_Gmail_Send_Triggered.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1246_Extractfromfile_HTTP_Automation_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 55,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1254_Extractfromfile_Form_Automate_Triggered.json",
      "workflow_name": "HR-focused automation pipeline with AI",
      "complexity": {
        "node_count": 27,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1364_Extractfromfile_Manual_Create_Webhook.json",
      "workflow_name": "Whatsapptrigger Workflow",
      "complexity": {
        "node_count": 44,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1365_Extractfromfile_Manual_Create_Webhook.json",
      "workflow_name": "Whatsapptrigger Workflow",
      "complexity": {
        "node_count": 44,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1438_Extractfromfile_Manual_Process_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1444_Extractfromfile_Converttofile_Automation_Webhook.json",
      "workflow_name": "Extract text from PDF and image using Vertex AI (Gemini) into CSV",
      "complexity": {
        "node_count": 36,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1472_Extractfromfile_Converttofile_Create_Triggered.json",
      "workflow_name": "Generate SQL queries from schema only - AI-powered",
      "complexity": {
        "node_count": 39,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1488_Extractfromfile_Form_Automation_Triggered.json",
      "workflow_name": "HR Job Posting and Evaluation with AI",
      "complexity": {
        "node_count": 55,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1493_Extractfromfile_Form_Automation_Webhook.json",
      "workflow_name": "Extractfromfile Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1501_Extractfromfile_Form_Automate_Triggered.json",
      "workflow_name": "Automated Resume Review System Using OpenAI + Google Sheets",
      "complexity": {
        "node_count": 26,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1590_Extractfromfile_Converttofile_Create_Triggered.json",
      "workflow_name": "Generate SQL queries from schema only - AI-powered",
      "complexity": {
        "node_count": 39,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1641_Extractfromfile_Manual_Automation_Webhook.json",
      "workflow_name": "youtube chapter generator",
      "complexity": {
        "node_count": 32,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1764_Extractfromfile_HTTP_Automation_Webhook.json",
      "workflow_name": "Attachments Gmail to drive and google sheets",
      "complexity": {
        "node_count": 34,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1847_Extractfromfile_Form_Automation_Triggered.json",
      "workflow_name": "HR Job Posting and Evaluation with AI",
      "complexity": {
        "node_count": 55,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1978_Extractfromfile_Converttofile_Automation_Webhook.json",
      "workflow_name": "Extract text from PDF and image using Vertex AI (Gemini) into CSV",
      "complexity": {
        "node_count": 36,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1981_Extractfromfile_Form_Automate_Triggered.json",
      "workflow_name": "HR-focused automation pipeline with AI",
      "complexity": {
        "node_count": 27,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0123_Facebook_Mattermost_Update_Triggered.json",
      "workflow_name": "Receive a Mattermost message when a user updates their profile on Facebook",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0896_Facebookleadads_Stickynote_Automate_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1069_Figma_Stickynote_Update_Triggered.json",
      "workflow_name": "Automate Figma Versioning and Jira Updates with n8n Webhook Integration",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0335_Filter_Telegram_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0411_Filter_Form_Send_Triggered.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0431_Filter_Convertkit_Create_Triggered.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 50,
      "overall_score": 72.5
    },
    {
      "filename": "0451_Filter_Slack_Update_Webhook.json",
      "workflow_name": "Lineartrigger Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0572_Filter_Schedule_Send_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0595_Filter_Manual_Send_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 50,
      "overall_score": 72.5
    },
    {
      "filename": "0612_Filter_Slack_Send_Scheduled.json",
      "workflow_name": "Filter Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0801_Filter_Schedule_Import_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9523809523809523,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0830_Filter_Summarize_Send_Scheduled.json",
      "workflow_name": "Googlesheetstool Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0849_Filter_Extractfromfile_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.9411764705882353,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0879_Filter_HTTP_Update_Webhook.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 49,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0917_Filter_Whatsapp_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0948_Filter_Schedule_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1321_Filter_Manual_Send_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 50,
      "overall_score": 72.5
    },
    {
      "filename": "1383_Filter_Slack_Create_Webhook.json",
      "workflow_name": "Lineartrigger Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1414_Filter_Summarize_Automation_Triggered.json",
      "workflow_name": "Store Notion's Pages as Vector Documents into Supabase with OpenAI",
      "complexity": {
        "node_count": 15,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1562_Filter_Manual_Import_Webhook.json",
      "workflow_name": "Import CSV from URL to GoogleSheet",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1570_Filter_Summarize_Automation_Triggered.json",
      "workflow_name": "Prod: Notion to Vector Store - Dimension 768",
      "complexity": {
        "node_count": 15,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1667_Filter_Summarize_Automation_Triggered.json",
      "workflow_name": "Store Notion's Pages as Vector Documents into Supabase with OpenAI",
      "complexity": {
        "node_count": 15,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1751_Filter_Schedule_Automation_Scheduled.json",
      "workflow_name": "Weekly_Shodan_Query___Report_Accidents__no_function_node_",
      "complexity": {
        "node_count": 32,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1772_Filter_Rssfeedread_Monitor_Scheduled.json",
      "workflow_name": "Monitor_security_advisories",
      "complexity": {
        "node_count": 22,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.1,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1791_Filter_Summarize_Create_Triggered.json",
      "workflow_name": "Generate AI-Ready llms.txt Files from Screaming Frog Website Crawls",
      "complexity": {
        "node_count": 31,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2006_Filter_Manual_Automation_Webhook.json",
      "workflow_name": "ProspectLens company research",
      "complexity": {
        "node_count": 20,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 0.9375,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0133_Flow_Update_Triggered.json",
      "workflow_name": "Receive updates for specified tasks in Flow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0484_Form_Stickynote_Automation_Webhook.json",
      "workflow_name": "Dynamic credentials using expressions",
      "complexity": {
        "node_count": 18,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0633_Form_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0454545454545454,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0648_Form_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Form Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0732_Form_Youtube_Update_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0733_Form_Code_Create_Triggered.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0805_Form_Html_Create_Triggered.json",
      "workflow_name": "Brightdata Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0890_Form_Stickynote_Send_Triggered.json",
      "workflow_name": "Hubspot Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1316_Form_Stickynote_Automation_Webhook.json",
      "workflow_name": "Simple OpenAI Image Generator",
      "complexity": {
        "node_count": 17,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1348_Form_Automation_Triggered.json",
      "workflow_name": "Image to license plate number",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1371_Form_S3_Import_Triggered.json",
      "workflow_name": "DigialOceanUpload",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1420_Form_Extractfromfile_Automate_Triggered.json",
      "workflow_name": "AI CV Screening Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1441_Form_Automation_Triggered.json",
      "workflow_name": "Image to license plate number",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1537_Form_GoogleSheets_Automation_Triggered.json",
      "workflow_name": "Contact Form Text Classifier for eCommerce",
      "complexity": {
        "node_count": 50,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1554_Form_GoogleSheets_Automation_Triggered.json",
      "workflow_name": "Contact Form Text Classifier for eCommerce",
      "complexity": {
        "node_count": 50,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1611_Form_Stickynote_Automate_Triggered.json",
      "workflow_name": "Automated Form Submission Data Storage in Airtable",
      "complexity": {
        "node_count": 9,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1649_Form_Extractfromfile_Automate_Triggered.json",
      "workflow_name": "AI CV Screening Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1762_Form_Aggregate_Automation_Triggered.json",
      "workflow_name": "SEO Blog Generator with GPT-4o, Perplexity, and Telegram Integration",
      "complexity": {
        "node_count": 33,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1767_Form_HTTP_Automation_Webhook.json",
      "workflow_name": "Youtube Video Transcript Extraction",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1873_Form_HTTP_Automation_Webhook.json",
      "workflow_name": "\ud83e\udd13 Conversion Rate Optimizer",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.9,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1886_Form_Markdown_Automation_Webhook.json",
      "workflow_name": "\ud83e\udd16 On-Page SEO Audit",
      "complexity": {
        "node_count": 25,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1908_Form_Asana_Automate_Triggered.json",
      "workflow_name": "Automate Your Customer Service With WhatsApp Business Cloud & Asana",
      "complexity": {
        "node_count": 12,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 2.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1957_Form_Stickynote_Automation_Triggered.json",
      "workflow_name": "Post on X",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1968_Form_Stickynote_Automation_Webhook.json",
      "workflow_name": "Social Media Publisher",
      "complexity": {
        "node_count": 31,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0031_Functionitem_Dropbox_Automation_Webhook.json",
      "workflow_name": "screenshot",
      "complexity": {
        "node_count": 10,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0068_Functionitem_Manual_Import_Scheduled.json",
      "workflow_name": "0068_Functionitem_Manual_Import_Scheduled",
      "complexity": {
        "node_count": 9,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0146_Functionitem_Telegram_Create_Webhook.json",
      "workflow_name": "0146_Functionitem_Telegram_Create_Webhook",
      "complexity": {
        "node_count": 8,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0178_Functionitem_Executecommand_Automation_Webhook.json",
      "workflow_name": "extract_swifts",
      "complexity": {
        "node_count": 23,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 70.5
    },
    {
      "filename": "0184_Functionitem_Itemlists_Automate.json",
      "workflow_name": "Itemlists Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0246_Functionitem_Pipedrive_Create_Scheduled.json",
      "workflow_name": "Stripe Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0247_Functionitem_HTTP_Create_Webhook.json",
      "workflow_name": "Pipedrivetrigger Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0255_Functionitem_Manual_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0266_Functionitem_Zendesk_Create_Webhook.json",
      "workflow_name": "Functionitem Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0869565217391304,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0267_Functionitem_Zendesk_Create_Scheduled.json",
      "workflow_name": "Noop Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0740740740740742,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1067_Functionitem_Manual_Export_Webhook.json",
      "workflow_name": "Example - Backup n8n to Nextcloud",
      "complexity": {
        "node_count": 9,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 69.5
    },
    {
      "filename": "1140_Functionitem_Raindrop_Automation_Scheduled.json",
      "workflow_name": "YouTube to Raindrop",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1157_Functionitem_Executecommand_Update_Webhook.json",
      "workflow_name": "1157_Functionitem_Executecommand_Update_Webhook",
      "complexity": {
        "node_count": 25,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 35,
      "overall_score": 65.0
    },
    {
      "filename": "1202_Getresponse_Airtable_Import_Triggered.json",
      "workflow_name": "Airtable Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0135_GitHub_Cron_Create_Scheduled.json",
      "workflow_name": "Github Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0264_GitHub_Stickynote_Create_Triggered.json",
      "workflow_name": "Notion Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0289_GitHub_Stickynote_Update_Triggered.json",
      "workflow_name": "Githubtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0876_GitHub_Aggregate_Create_Webhook.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0973_GitHub_Slack_Create_Triggered.json",
      "workflow_name": "Githubtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0997_GitHub_Automate_Triggered.json",
      "workflow_name": "Githubtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1068_GitHub_Slack_Automation_Triggered.json",
      "workflow_name": "Extranet Releases",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1149_GitHub_Manual_Create_Scheduled.json",
      "workflow_name": "1149_GitHub_Manual_Create_Scheduled",
      "complexity": {
        "node_count": 16,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "1988_GitHub_Manual_Automate_Triggered.json",
      "workflow_name": "[OPS] Restore workflows from GitHub to n8n",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.1818181818181819,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0557_Gitlab_Filter_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0561_Gitlab_Code_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0998_Gitlab_Automate_Triggered.json",
      "workflow_name": "Gitlabtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1895_Gitlab_Code_Automation_Webhook.json",
      "workflow_name": "GitLab MR Auto-Review & Risk Assessment",
      "complexity": {
        "node_count": 40,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0036_Gmail_GoogleDrive_Import.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0221_Gmail_Movebinarydata_Send.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0319_Gmail_Googlecalendartool_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0544_Gmail_GoogleDrive_Create_Triggered.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 90.5
    },
    {
      "filename": "0852_Gmail_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Outputparserstructured Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1479_Gmail_Stickynote_Create_Triggered.json",
      "workflow_name": "Gmail AI auto-responder: create draft replies to incoming emails",
      "complexity": {
        "node_count": 19,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1565_Gmail_Stickynote_Create_Triggered.json",
      "workflow_name": "Save New Sales Opportunities",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1914_Gmail_Stickynote_Send_Triggered.json",
      "workflow_name": "(G) - Email Classification",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 0.8571428571428571,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0677_Gmailtool_Splitout_Create_Webhook.json",
      "workflow_name": "Agent Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9473684210526315,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1142_Gmailtool_Stickynote_Automation_Triggered.json",
      "workflow_name": "DeepSeek v3.1",
      "complexity": {
        "node_count": 15,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1248_Gmailtool_Splitout_Automation_Webhook.json",
      "workflow_name": "Agent Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9473684210526315,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1613_Gmailtool_Stickynote_Automation_Triggered.json",
      "workflow_name": "Gmail MCP Server",
      "complexity": {
        "node_count": 32,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1795_Gmailtool_Executeworkflow_Send_Triggered.json",
      "workflow_name": "\ud83e\udd16Email Agent",
      "complexity": {
        "node_count": 19,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1909_Gmailtool_Automation_Triggered.json",
      "workflow_name": "MCP_GMAIL",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0475_Googleanalytics_Code_Automate_Scheduled.json",
      "workflow_name": "Automate Google Analytics Reporting - AlexK1919",
      "complexity": {
        "node_count": 34,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1480_Googleanalytics_Code_Automation_Webhook.json",
      "workflow_name": "Google analytics template",
      "complexity": {
        "node_count": 51,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1529_Googleanalytics_Code_Automation_Webhook.json",
      "workflow_name": "Google analytics template",
      "complexity": {
        "node_count": 51,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1652_Googleanalytics_Code_Automation_Webhook.json",
      "workflow_name": "Google analytics template",
      "complexity": {
        "node_count": 51,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0806_Googlebigquery_Stickynote_Automate_Triggered.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0647_GoogleCalendar_Form_Create_Triggered.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0783_GoogleCalendar_Schedule_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1116_GoogleCalendar_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1346_GoogleCalendar_GoogleSheets_Automate_Triggered.json",
      "workflow_name": "Automate Event Creation in Google Calendar from Google Sheets",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 90.5
    },
    {
      "filename": "1361_GoogleCalendar_Webhook_Create_Webhook.json",
      "workflow_name": "Build a Chatbot, Voice Agent and Phone Agent with Voiceflow, Google Calendar and RAG",
      "complexity": {
        "node_count": 101,
        "connection_count": 40,
        "max_depth": 1,
        "branching_factor": 1.0133333333333334,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 62,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1573_GoogleCalendar_Slack_Create_Webhook.json",
      "workflow_name": "Generate google meet links in slack",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1620_GoogleCalendar_Form_Automation_Triggered.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1668_GoogleCalendar_Filter_Automation_Triggered.json",
      "workflow_name": "Calendar_scheduling",
      "complexity": {
        "node_count": 29,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1071_Googlecalendartool_Stickynote_Create_Triggered.json",
      "workflow_name": "Build an MCP Server with Google Calendar",
      "complexity": {
        "node_count": 33,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1247_Googlecalendartool_Stickynote_Automation_Triggered.json",
      "workflow_name": "AI Agent : Google calendar assistant using OpenAI",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 0.8,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1792_Googlecalendartool_Executeworkflow_Automation_Triggered.json",
      "workflow_name": "\ud83e\udd16Calendar Agent",
      "complexity": {
        "node_count": 22,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1872_Googlecalendartool_Automation_Triggered.json",
      "workflow_name": "MCP_CALENDAR",
      "complexity": {
        "node_count": 19,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1928_Googlecalendartool_Stickynote_Automation_Triggered.json",
      "workflow_name": "Reservation Medcin",
      "complexity": {
        "node_count": 21,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 0.8333333333333334,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1239_Googlecontacts_Schedule_Send_Scheduled.json",
      "workflow_name": "Send Daily Birthday Reminders from Google Contacts to Slack",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0524_Googledocs_Webhook_Create_Webhook.json",
      "workflow_name": "Extractfromfile Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1134_Googledocs_Code_Create_Webhook.json",
      "workflow_name": "Generate Exam Questions",
      "complexity": {
        "node_count": 66,
        "connection_count": 44,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 21,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1279_Googledocs_Manual_Automate_Triggered.json",
      "workflow_name": "RAG Workflow For Stock Earnings Report Analysis",
      "complexity": {
        "node_count": 30,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 0.9285714285714286,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1287_Googledocs_Googledrivetool_Monitor_Triggered.json",
      "workflow_name": "AI Agent - Cv Resume - Automated Screening , Sorting , Rating and Tracker System",
      "complexity": {
        "node_count": 33,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1335_Googledocs_Webhook_Process_Webhook.json",
      "workflow_name": "Extractfromfile Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1858_Googledocs_Manual_Automate_Triggered.json",
      "workflow_name": "RAG Workflow For Stock Earnings Report Analysis",
      "complexity": {
        "node_count": 30,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 0.9285714285714286,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0839_GoogleDrive_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 2,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1673_GoogleDrive_GoogleSheets_Automation_Triggered.json",
      "workflow_name": "Google Doc Summarizer to Google Sheets",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1806_GoogleDrive_GoogleSheets_Import_Triggered.json",
      "workflow_name": "Fetch the Most Recent Document from Google Drive",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0875_Googledrivetool_Extractfromfile_Import_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.9375,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0004_GoogleSheets_Typeform_Automate_Triggered.json",
      "workflow_name": "typeform feedback workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0035_GoogleSheets_Webhook_Automate_Webhook.json",
      "workflow_name": "0035_GoogleSheets_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0082_GoogleSheets_Interval_Process_Scheduled.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0222_GoogleSheets_Readbinaryfile_Automate.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0234_GoogleSheets_Cron_Create_Scheduled.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0235_GoogleSheets_Cron_Automation_Scheduled.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0237_GoogleSheets_Spreadsheetfile_Create_Webhook.json",
      "workflow_name": "0237_GoogleSheets_Spreadsheetfile_Create_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0238_GoogleSheets_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "0238_GoogleSheets_Respondtowebhook_Automate_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0256_GoogleSheets_Readbinaryfile_Automate.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0314_GoogleSheets_Discord_Create_Triggered.json",
      "workflow_name": "Googlesheetstrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0496_GoogleSheets_Webhook_Automate_Webhook.json",
      "workflow_name": "0496_GoogleSheets_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0635_GoogleSheets_Webflow_Create_Triggered.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0736_GoogleSheets_Slack_Send_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0812_GoogleSheets_GoogleDrive_Automate_Triggered.json",
      "workflow_name": "Googlesheetstrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 90.5
    },
    {
      "filename": "0814_GoogleSheets_Gmail_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0818_GoogleSheets_Respondtowebhook_Import_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0837_GoogleSheets_Gmail_Create_Triggered.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9545454545454546,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0927_GoogleSheets_Slack_Send_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0950_GoogleSheets_Slack_Send_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0974_GoogleSheets_Telegram_Export_Triggered.json",
      "workflow_name": "Save Telegram reply to journal spreadsheet",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1106_GoogleSheets_Cron_Automate_Scheduled.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.5,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1153_GoogleSheets_Orbit_Automation.json",
      "workflow_name": "Moving metrics from Google Sheets to Orbit",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1188_GoogleSheets_Emailreadimap_Create.json",
      "workflow_name": "Extract expenses from emails and add to Google Sheet",
      "complexity": {
        "node_count": 16,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1661_GoogleSheets_Stickynote_Monitor_Triggered.json",
      "workflow_name": "AI agent: expense tracker in Google Sheets and n8n chat",
      "complexity": {
        "node_count": 18,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1833_GoogleSheets_Gmail_Create_Triggered.json",
      "workflow_name": "Add new incoming emails to a Google Sheets spreadsheet as a new row.",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1860_GoogleSheets_Gmail_Automation_Webhook.json",
      "workflow_name": "WordPress Contact Form (CF7) Responses and Classification",
      "complexity": {
        "node_count": 42,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1133_Googlesheetstool_Automation_Triggered.json",
      "workflow_name": "Customer and Sales Support",
      "complexity": {
        "node_count": 17,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 0.8333333333333334,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0095_Googleslides_Slack_Automate_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0754_Googleslides_Noop_Automation_Triggered.json",
      "workflow_name": "DSP Certificate w/ Google Forms",
      "complexity": {
        "node_count": 26,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1845_Googleslides_Extractfromfile_Create_Triggered.json",
      "workflow_name": "Create Custom Presentations per Lead",
      "complexity": {
        "node_count": 29,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0881_Googletasks_HTTP_Update_Webhook.json",
      "workflow_name": "Splitinbatches Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0454545454545454,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2031_Googletasks_Gmail_Create_Triggered.json",
      "workflow_name": "\ud83d\udce6 New Email \u2794 Create Google Task",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1103_Googletaskstool_Telegram_Automation_Webhook.json",
      "workflow_name": "agente",
      "complexity": {
        "node_count": 77,
        "connection_count": 42,
        "max_depth": 1,
        "branching_factor": 0.9803921568627451,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 2,
        "file_operations": 1,
        "api_calls": 3,
        "loops": 0,
        "error_handling": 34,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0788_Googletranslate_Noop_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0740740740740742,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1213_Gotowebinar_Automate.json",
      "workflow_name": "Gotowebinar Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0116_Graphql_Discord_Automate_Scheduled.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0461_Graphql_Webhook_Automate_Webhook.json",
      "workflow_name": "0461_Graphql_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0479_Grist_Stickynote_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0843_Gumroad_Update_Triggered.json",
      "workflow_name": "Receive updates when a sale is made in Gumroad",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1079_Helpscout_Create_Triggered.json",
      "workflow_name": "Receive updates when a customer is created in HelpScout",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0015_HTTP_Cron_Update_Webhook.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in ActiveMQ",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0021_HTTP_Awssqs_Automation_Scheduled.json",
      "workflow_name": "0021_HTTP_Awssqs_Automation_Scheduled",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0023_HTTP_Googlebigquery_Automation_Scheduled.json",
      "workflow_name": "0023_HTTP_Googlebigquery_Automation_Scheduled",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0033_HTTP_Mqtt_Automation_Webhook.json",
      "workflow_name": "0033_HTTP_Mqtt_Automation_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0048_HTTP_Htmlextract_Create_Webhook.json",
      "workflow_name": "0048_HTTP_Htmlextract_Create_Webhook",
      "complexity": {
        "node_count": 7,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0077_HTTP_Noop_Sync_Webhook.json",
      "workflow_name": "Syncro Alert to OpsGenie",
      "complexity": {
        "node_count": 7,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0084_HTTP_Cron_Automation_Webhook.json",
      "workflow_name": "What To Eat",
      "complexity": {
        "node_count": 9,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0093_HTTP_GitHub_Create_Scheduled.json",
      "workflow_name": "0093_HTTP_GitHub_Create_Scheduled",
      "complexity": {
        "node_count": 11,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.2222222222222223,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0136_HTTP_Googlefirebaserealtimedatabase_Update_Webhook.json",
      "workflow_name": "Receive updates for the position of the ISS every minute and push it to a database",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0139_HTTP_Mysql_Automation_Webhook.json",
      "workflow_name": "0139_HTTP_Mysql_Automation_Webhook",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0143_HTTP_Gitlab_Automation_Webhook.json",
      "workflow_name": "0143_HTTP_Gitlab_Automation_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0144_HTTP_Twitter_Automation_Scheduled.json",
      "workflow_name": "0144_HTTP_Twitter_Automation_Scheduled",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0153_HTTP_Dropbox_Update_Webhook.json",
      "workflow_name": "0153_HTTP_Dropbox_Update_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0154_HTTP_Mattermost_Automation_Webhook.json",
      "workflow_name": "Mattermost Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0156_HTTP_Awsrekognition_Automation_Webhook.json",
      "workflow_name": "0156_HTTP_Awsrekognition_Automation_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0162_HTTP_Telegram_Send_Webhook.json",
      "workflow_name": "0162_HTTP_Telegram_Send_Webhook",
      "complexity": {
        "node_count": 15,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0167_HTTP_Slack_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0223_HTTP_GoogleSheets_Automation_Webhook.json",
      "workflow_name": "0223_HTTP_GoogleSheets_Automation_Webhook",
      "complexity": {
        "node_count": 6,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.5,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0224_HTTP_GoogleSheets_Send_Webhook.json",
      "workflow_name": "0224_HTTP_GoogleSheets_Send_Webhook",
      "complexity": {
        "node_count": 14,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0245_HTTP_Stripe_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0252_HTTP_GitHub_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0253_HTTP_GitHub_Send_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0287_HTTP_Rabbitmq_Update_Scheduled.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in RabbitMQ",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0306_HTTP_Respondtowebhook_Import_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0310_HTTP_Manual_Automation_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0313_HTTP_Schedule_Create_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0344_HTTP_Emailreadimap_Create_Webhook.json",
      "workflow_name": "Create Nextcloud Deck card from email",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0347_HTTP_GoogleSheets_Sync_Webhook.json",
      "workflow_name": "Dialpad to Syncro",
      "complexity": {
        "node_count": 22,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 70.5
    },
    {
      "filename": "0350_HTTP_Emailreadimap_Send_Webhook.json",
      "workflow_name": "ImapEmail, XmlToJson, POST-HTTP-Request",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0358_HTTP_Discord_Monitor_Scheduled.json",
      "workflow_name": "Website check",
      "complexity": {
        "node_count": 5,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.75,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 71.0
    },
    {
      "filename": "0363_HTTP_Executeworkflow_Automate_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0364_HTTP_Twilio_Automate_Webhook.json",
      "workflow_name": "BillBot",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0384_HTTP_Manual_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 172,
        "connection_count": 40,
        "max_depth": 1,
        "branching_factor": 1.0571428571428572,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 20,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 120,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 20 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 72.0
    },
    {
      "filename": "0390_HTTP_Manual_Automation_Webhook.json",
      "workflow_name": "Html Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0394_HTTP_Spreadsheetfile_Create_Webhook.json",
      "workflow_name": "Airtable Workflow",
      "complexity": {
        "node_count": 53,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0405_HTTP_Executeworkflow_Send_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0440_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0441_HTTP_GoogleSheets_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0450_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 45,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0463_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0470_HTTP_GoogleSheets_Update_Webhook.json",
      "workflow_name": "Googlesheetstrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0471_HTTP_Form_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0485_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 39,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0492_HTTP_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0493_HTTP_Keap_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0494_HTTP_Htmlextract_Send_Webhook.json",
      "workflow_name": "0494_HTTP_Htmlextract_Send_Webhook",
      "complexity": {
        "node_count": 7,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0505_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 63,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 74.4
    },
    {
      "filename": "0510_HTTP_Schedule_Automation_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0517_HTTP_Stickynote_Process_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0549_HTTP_Filter_Monitor_Webhook.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0550_HTTP_Slack_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 47,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0551_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0559_HTTP_Webhook_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0566_HTTP_Stickynote_Automate_Webhook.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0588_HTTP_Schedule_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.032258064516129,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0594_HTTP_Telegram_Create_Webhook.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 48,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0606_HTTP_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0611_HTTP_Filter_Automation_Scheduled.json",
      "workflow_name": "Filter Workflow",
      "complexity": {
        "node_count": 46,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0622_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0624_HTTP_Schedule_Send_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0626_HTTP_Schedule_Create_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0636_HTTP_Stickynote_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0637_HTTP_Schedule_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0641_HTTP_Rssfeedread_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0642_HTTP_Extractfromfile_Process_Webhook.json",
      "workflow_name": "Extractfromfile Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0687_HTTP_Form_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0688_HTTP_Webhook_Process_Webhook.json",
      "workflow_name": "Transform Image to Lego Style Using Line and Dall-E",
      "complexity": {
        "node_count": 31,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0707_HTTP_Stripe_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1071428571428572,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0717_HTTP_Schedule_Create_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0739_HTTP_Form_Automate_Webhook.json",
      "workflow_name": "Streamline Your Zoom Meetings with Secure, Automated Stripe Payments",
      "complexity": {
        "node_count": 40,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0344827586206897,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0745_HTTP_Telegram_Automation_Webhook.json",
      "workflow_name": "Daily Text Affirmations",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0752_HTTP_Rssfeedread_Automation_Scheduled.json",
      "workflow_name": "post to mattermost v2",
      "complexity": {
        "node_count": 6,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 69.5
    },
    {
      "filename": "0771_HTTP_Telegram_Create_Webhook.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9629629629629629,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0775_HTTP_Executecommand_Automate_Webhook.json",
      "workflow_name": "N8N Espa\u00f1ol - NocodeBot",
      "complexity": {
        "node_count": 7,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0778_HTTP_Stickynote_Import_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 88,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 10,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 62,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 10 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "0825_HTTP_Manual_Send_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0870_HTTP_Schedule_Update_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0878_HTTP_Aggregate_Import_Webhook.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 49,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0901_HTTP_GoogleSheets_Automate_Webhook.json",
      "workflow_name": "AccountCraft WhatsApp Automation - Infridet",
      "complexity": {
        "node_count": 42,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0294117647058822,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0934_HTTP_Code_Automate_Webhook.json",
      "workflow_name": "Automated PDF to HTML Conversion",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0935_HTTP_GoogleSheets_Sync_Webhook.json",
      "workflow_name": "Clockify to Syncro",
      "complexity": {
        "node_count": 13,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 55,
      "overall_score": 76.0
    },
    {
      "filename": "0936_HTTP_Lingvanex_Automation_Webhook.json",
      "workflow_name": "Daily poems in Telegram",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0937_HTTP_Editimage_Update_Webhook.json",
      "workflow_name": "0937_HTTP_Editimage_Update_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0939_HTTP_Cron_Automation_Webhook.json",
      "workflow_name": "NameCheap Dynamic DNS (DDNS)",
      "complexity": {
        "node_count": 7,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 35,
      "overall_score": 69.5
    },
    {
      "filename": "0952_HTTP_Medium_Automation_Webhook.json",
      "workflow_name": "0952_HTTP_Medium_Automation_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 2.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0955_HTTP_Automation_Webhook.json",
      "workflow_name": "0955_HTTP_Automation_Webhook",
      "complexity": {
        "node_count": 1,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0956_HTTP_Readbinaryfile_Automation_Webhook.json",
      "workflow_name": "0956_HTTP_Readbinaryfile_Automation_Webhook",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0964_HTTP_Bannerbear_Automation_Scheduled.json",
      "workflow_name": "Cocktail Recipe Sharing",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0966_HTTP_Discord_Import_Scheduled.json",
      "workflow_name": "0966_HTTP_Discord_Import_Scheduled",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0970_HTTP_Schedule_Create_Webhook.json",
      "workflow_name": "Daily AI News Translation & Summary with GPT-4 and Telegram Delivery",
      "complexity": {
        "node_count": 31,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1030_HTTP_Typeform_Monitor_Webhook.json",
      "workflow_name": "Expense Tracker App",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1043_HTTP_Telegram_Send_Webhook.json",
      "workflow_name": "Send a cocktail recipe every day via a Telegram",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1052_HTTP_Telegram_Update_Webhook.json",
      "workflow_name": "Receive updates from Telegram and send an image of a cocktail",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1064_HTTP_Clockify_Update_Webhook.json",
      "workflow_name": "Syncro Status Update Clockify",
      "complexity": {
        "node_count": 6,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "1072_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "Perplexity Researcher",
      "complexity": {
        "node_count": 16,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1107_HTTP_GitHub_Automation_Webhook.json",
      "workflow_name": "Dashboard",
      "complexity": {
        "node_count": 24,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 2.3,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 17,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 70
      },
      "optimization_opportunities": [
        "Consider parallelizing 17 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 63.0
    },
    {
      "filename": "1110_HTTP_Mqtt_Monitor_Webhook.json",
      "workflow_name": "Remote IOT Sensor monitoring via MQTT and InfluxDB",
      "complexity": {
        "node_count": 17,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1111_HTTP_Schedule_Automation_Webhook.json",
      "workflow_name": "Automating Betting Data Retrieval with TheOddsAPI and Airtable",
      "complexity": {
        "node_count": 27,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1112_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "AI Agent with charts capabilities using OpenAI Structured Output",
      "complexity": {
        "node_count": 23,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1131_HTTP_Stickynote_Import_Webhook.json",
      "workflow_name": "get_a_web_page",
      "complexity": {
        "node_count": 15,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1152_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "OpenAI ImageGen1 Template",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.9090909090909091,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1171_HTTP_Cron_Automation_Scheduled.json",
      "workflow_name": "1171_HTTP_Cron_Automation_Scheduled",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "1187_HTTP_Dropbox_Automation_Webhook.json",
      "workflow_name": "1187_HTTP_Dropbox_Automation_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1192_HTTP_Timescaledb_Automation_Scheduled.json",
      "workflow_name": "1192_HTTP_Timescaledb_Automation_Scheduled",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1226_HTTP_Kafka_Update_Webhook.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in Kafka",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1233_HTTP_Deepl_Automation_Webhook.json",
      "workflow_name": "1233_HTTP_Deepl_Automation_Webhook",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1267_HTTP_Markdown_Automation_Webhook.json",
      "workflow_name": "Agent with custom HTTP Request",
      "complexity": {
        "node_count": 32,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1334_HTTP_Manual_Automation_Webhook.json",
      "workflow_name": "Analyze Screenshots with AI",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1340_HTTP_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "complexity": {
        "node_count": 46,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1349_HTTP_Slack_Automation_Webhook.json",
      "workflow_name": "Weather via Slack",
      "complexity": {
        "node_count": 36,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1354_HTTP_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Bitrix24 Chatbot Application Workflow example with Webhook Integration",
      "complexity": {
        "node_count": 55,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.9107142857142857,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1367_HTTP_Schedule_Automate_Webhook.json",
      "workflow_name": "\ud83d\udca5workflow n8n d'Auto-Post sur les r\u00e9seaux sociaux - vide",
      "complexity": {
        "node_count": 82,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.1194029850746268,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 10,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 62,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 10 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1370_HTTP_Extractfromfile_Automation_Webhook.json",
      "workflow_name": "Extractfromfile Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1419_HTTP_Schedule_Automation_Scheduled.json",
      "workflow_name": "Scans von PDF zu Nextcloud",
      "complexity": {
        "node_count": 22,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1440_HTTP_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 72,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 38,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1447_HTTP_Schedule_Automation_Webhook.json",
      "workflow_name": "URL Pinger",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1458_HTTP_Stickynote_Import_Webhook.json",
      "workflow_name": "Optimise images uploaded to GDrive",
      "complexity": {
        "node_count": 30,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1462_HTTP_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "complexity": {
        "node_count": 46,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1464_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "AI-Powered Research with Jina AI Deep Search",
      "complexity": {
        "node_count": 13,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 0.8571428571428571,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1473_HTTP_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1481_HTTP_Form_Send_Webhook.json",
      "workflow_name": "Send TTS (Text-to-speech) voice calls",
      "complexity": {
        "node_count": 16,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1519_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "\ud83d\udc0bDeepSeek V3 Chat & R1 Reasoning Quick Start",
      "complexity": {
        "node_count": 33,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1520_HTTP_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "YouTube Video Transcriber",
      "complexity": {
        "node_count": 32,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1530_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1535_HTTP_Form_Automate_Webhook.json",
      "workflow_name": "\ud83d\udca5\ud83d\udee0\ufe0fAutomate Blog Content Creation with GPT-4, Perplexity & WordPress",
      "complexity": {
        "node_count": 29,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1538_HTTP_Googlecalendartool_Automation_Webhook.json",
      "workflow_name": "LINE Assistant with Google Calendar and Gmail Integration",
      "complexity": {
        "node_count": 42,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1558_HTTP_Stickynote_Automate_Webhook.json",
      "workflow_name": "\u2728\ud83d\udccaMulti-AI Agent Chatbot for Postgres/Supabase DB and QuickCharts + Tool Router",
      "complexity": {
        "node_count": 54,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 0.8888888888888888,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 4,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1580_HTTP_Stickynote_Automate_Webhook.json",
      "workflow_name": "Open Deep Research - AI-Powered Autonomous Research Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1593_HTTP_Schedule_Import_Webhook.json",
      "workflow_name": "Automated Daily Weather Data Fetcher and Storage",
      "complexity": {
        "node_count": 16,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1598_HTTP_Schedule_Automation_Scheduled.json",
      "workflow_name": "AirQuality Scheduler",
      "complexity": {
        "node_count": 30,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 0.9473684210526315,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1615_HTTP_Emailreadimap_Send_Webhook.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "complexity": {
        "node_count": 29,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1617_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "\ud83d\udd0d\ud83d\udee0\ufe0f Tavily Search & Extract - Template",
      "complexity": {
        "node_count": 47,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1631_HTTP_Telegram_Automation_Webhook.json",
      "workflow_name": "NeurochainAI Basic API Integration",
      "complexity": {
        "node_count": 64,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1632_HTTP_Telegram_Monitor_Webhook.json",
      "workflow_name": "Telegram Tron Wallet Blacklist Checker",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1640_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "Push Multiple Files to Github Repo via Github REST API",
      "complexity": {
        "node_count": 33,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1651_HTTP_Schedule_Automation_Webhook.json",
      "workflow_name": "Gratitude Jar Reminder",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1654_HTTP_Telegram_Send_Webhook.json",
      "workflow_name": "1654_HTTP_Telegram_Send_Webhook",
      "complexity": {
        "node_count": 15,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "1655_HTTP_Schedule_Send_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1672_HTTP_Form_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1674_HTTP_Emailreadimap_Send_Webhook.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "complexity": {
        "node_count": 29,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1675_HTTP_Emailreadimap_Send_Webhook.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "complexity": {
        "node_count": 29,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1684_HTTP_Telegram_Automation_Webhook.json",
      "workflow_name": "NeurochainAI Basic API Integration",
      "complexity": {
        "node_count": 64,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1687_HTTP_Telegram_Automate_Webhook.json",
      "workflow_name": "Telegram AI Langchain bot",
      "complexity": {
        "node_count": 28,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9444444444444444,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1688_HTTP_Telegram_Automate_Webhook.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 48,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1700_HTTP_Webhook_Process_Webhook.json",
      "workflow_name": "Transform Image to Lego Style Using Line and Dall-E",
      "complexity": {
        "node_count": 31,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1720_HTTP_Stickynote_Import_Webhook.json",
      "workflow_name": "get_a_web_page",
      "complexity": {
        "node_count": 15,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1725_HTTP_Code_Process_Webhook.json",
      "workflow_name": "Convert Parquet, Avro, ORC & Feather via ParquetReader to JSON",
      "complexity": {
        "node_count": 15,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1729_HTTP_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "complexity": {
        "node_count": 35,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1730_HTTP_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "complexity": {
        "node_count": 35,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1732_HTTP_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "complexity": {
        "node_count": 46,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1737_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1747_HTTP_Stickynote_Automate_Webhook.json",
      "workflow_name": "Open Deep Research - AI-Powered Autonomous Research Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1773_HTTP_Stripe_Sync_Webhook.json",
      "workflow_name": "Stripe Payment Order Sync \u2013 Auto Retrieve Customer & Product Purchased",
      "complexity": {
        "node_count": 15,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1778_HTTP_Googlecalendartool_Automation_Webhook.json",
      "workflow_name": "LINE Assistant with Google Calendar and Gmail Integration",
      "complexity": {
        "node_count": 42,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1799_HTTP_Manual_Send_Webhook.json",
      "workflow_name": "line message api demo",
      "complexity": {
        "node_count": 31,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1800_HTTP_Telegram_Automation_Webhook.json",
      "workflow_name": "GROQ LLAVA V1.5 7B",
      "complexity": {
        "node_count": 23,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1808_HTTP_Telegram_Automate_Webhook.json",
      "workflow_name": "Telegram AI Langchain bot",
      "complexity": {
        "node_count": 28,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9444444444444444,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1811_HTTP_GoogleSheets_Automate_Webhook.json",
      "workflow_name": "Line_Chatbot_Extract_Text_from_Pay_Slip_with_Gemini",
      "complexity": {
        "node_count": 49,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.9722222222222222,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1827_HTTP_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Bitrix24 Chatbot Application Workflow example with Webhook Integration",
      "complexity": {
        "node_count": 55,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.9107142857142857,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1852_HTTP_Stickynote_Automate_Webhook.json",
      "workflow_name": "Connect Airtable Contacts to telli for Automated AI Voice Call Scheduling",
      "complexity": {
        "node_count": 24,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1868_HTTP_Stickynote_Automate_Webhook.json",
      "workflow_name": "Chatbot AI",
      "complexity": {
        "node_count": 44,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1871_HTTP_Executeworkflow_Import_Webhook.json",
      "workflow_name": "getBible Query v1.0",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1876_HTTP_Manual_Automation_Webhook.json",
      "workflow_name": "\ud83c\udfa5 Gemini AI Video Analysis",
      "complexity": {
        "node_count": 33,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1883_HTTP_Form_Import_Webhook.json",
      "workflow_name": "Get PDF with JSReport",
      "complexity": {
        "node_count": 16,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1885_HTTP_Extractfromfile_Automation_Webhook.json",
      "workflow_name": "Chinese Translator",
      "complexity": {
        "node_count": 81,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 55,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "1890_HTTP_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "complexity": {
        "node_count": 35,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1893_HTTP_Gmail_Automate_Webhook.json",
      "workflow_name": "My workflow 3",
      "complexity": {
        "node_count": 18,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1920_HTTP_Telegram_Automate_Webhook.json",
      "workflow_name": "My workflow 4",
      "complexity": {
        "node_count": 22,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1959_HTTP_Schedule_Automate_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 0.9,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1964_HTTP_Aggregate_Automation_Webhook.json",
      "workflow_name": "Google Maps FULL",
      "complexity": {
        "node_count": 43,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1973_HTTP_Manual_Import_Webhook.json",
      "workflow_name": "upload-post images",
      "complexity": {
        "node_count": 29,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0869565217391304,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1976_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "React to PDFMonkey Callback",
      "complexity": {
        "node_count": 21,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1989_HTTP_Schedule_Create_Webhook.json",
      "workflow_name": "Search news using Perplexity AI and post to X (Twitter)",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.9090909090909091,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1996_HTTP_Manual_Automation_Webhook.json",
      "workflow_name": "Analyze Screenshots with AI",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "2019_HTTP_Stickynote_Automate_Webhook.json",
      "workflow_name": "Line Chatbot Handling AI Responses with Groq and Llama3",
      "complexity": {
        "node_count": 32,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2043_HTTP_Stickynote_Automation_Webhook.json",
      "workflow_name": "\ud83d\udc0bDeepSeek V3 Chat & R1 Reasoning Quick Start",
      "complexity": {
        "node_count": 33,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0115_HubSpot_Clearbit_Update_Triggered.json",
      "workflow_name": "Clearbit Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0129_HubSpot_Cron_Update_Scheduled.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.6,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0130_HubSpot_Cron_Automate_Scheduled.json",
      "workflow_name": "Hubspot Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.25,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0243_HubSpot_Mailchimp_Create_Scheduled.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0244_HubSpot_Mailchimp_Create_Scheduled.json",
      "workflow_name": "Functionitem Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0920_HubSpot_Splitout_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 55,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1081_HubSpot_Automate_Triggered.json",
      "workflow_name": "Hubspottrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0043_Humanticai_Calendly_Automate_Triggered.json",
      "workflow_name": "Notion Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0361_Hunter_Noop_Send_Triggered.json",
      "workflow_name": "Email form",
      "complexity": {
        "node_count": 12,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0420_Hunter_Form_Create_Triggered.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0424_Hunter_Form_Send_Webhook.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0426_Hunter_Form_Send_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0436_Hunter_Pipedrive_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0413_Intercom_Code_Create_Webhook.json",
      "workflow_name": "Noop Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0211_Interval_Amqp_Automation_Scheduled.json",
      "workflow_name": "Smart Factory Data Generator",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1004_Invoiceninja_Automate_Triggered.json",
      "workflow_name": "Invoiceninjatrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1035_Jira_Automate_Triggered.json",
      "workflow_name": "Jiratrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1769_Jira_Stickynote_Sync_Triggered.json",
      "workflow_name": "Sync Jira issues with subsequent comments to Notion database",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0604_Jiratool_Schedule_Create_Scheduled.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 47,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1328_Jiratool_Schedule_Automate_Scheduled.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 47,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1010_Jotform_Automate_Triggered.json",
      "workflow_name": "Jotformtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1023_Keap_Automate_Triggered.json",
      "workflow_name": "Keaptrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0283_Lemlist_Slack_Create_Webhook.json",
      "workflow_name": "Lemlist Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.105263157894737,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0504_Lemlist_Slack_Create_Webhook.json",
      "workflow_name": "Markdown Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1382_Lemlist_Slack_Automate_Webhook.json",
      "workflow_name": "Markdown Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0473_Limit_Code_Create_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0673_Limit_Code_Create_Webhook.json",
      "workflow_name": "Microsoftoutlooktrigger Workflow",
      "complexity": {
        "node_count": 76,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.0294117647058822,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 13,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0674_Limit_Webhook_Automation_Webhook.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 36,
        "max_depth": 1,
        "branching_factor": 1.0327868852459017,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 13,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0675_Limit_Code_Automation_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0685_Limit_Webhook_Send_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 68,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 34,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0880_Limit_Code_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0897_Limit_Code_Send_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9565217391304348,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0932_Limit_Code_Create_Webhook.json",
      "workflow_name": "Extract And Decode Google News RSS URLs to Clean Article Links",
      "complexity": {
        "node_count": 37,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0971_Limit_Splitout_Automation_Webhook.json",
      "workflow_name": "\u26a1AI-Powered YouTube Playlist & Video Summarization and Analysis v2",
      "complexity": {
        "node_count": 106,
        "connection_count": 72,
        "max_depth": 1,
        "branching_factor": 1.0142857142857142,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 24,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 29,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1262_Limit_Webhook_Automation_Webhook.json",
      "workflow_name": "AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs",
      "complexity": {
        "node_count": 40,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1289_Limit_Webhook_Automation_Webhook.json",
      "workflow_name": "AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs",
      "complexity": {
        "node_count": 40,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1386_Limit_Code_Automation_Scheduled.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1483_Limit_Code_Automation_Webhook.json",
      "workflow_name": "Linkedin Chrome Extensions",
      "complexity": {
        "node_count": 22,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1527_Limit_Schedule_Automation_Scheduled.json",
      "workflow_name": "RAG on living data",
      "complexity": {
        "node_count": 41,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1645_Limit_Splitout_Automation_Webhook.json",
      "workflow_name": "Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI",
      "complexity": {
        "node_count": 42,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1695_Limit_Code_Automation_Scheduled.json",
      "workflow_name": "Github Releases",
      "complexity": {
        "node_count": 32,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1711_Limit_Code_Automate_Webhook.json",
      "workflow_name": "Selenium Ultimate Scraper Workflow",
      "complexity": {
        "node_count": 274,
        "connection_count": 86,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 9,
        "node_type_diversity": 14,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 23,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 206,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 23 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 78.5
    },
    {
      "filename": "1716_Limit_Schedule_Automation_Scheduled.json",
      "workflow_name": "RAG on living data",
      "complexity": {
        "node_count": 41,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1810_Limit_Splitout_Automate_Webhook.json",
      "workflow_name": "\ud83d\udd25\ud83d\udcc8\ud83e\udd16 AI Agent  for n8n Creators Leaderboard - Find Popular Workflows",
      "complexity": {
        "node_count": 63,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0571428571428572,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1900_Limit_Code_Automate_Webhook.json",
      "workflow_name": "Selenium Ultimate Scraper Workflow",
      "complexity": {
        "node_count": 274,
        "connection_count": 86,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 9,
        "node_type_diversity": 14,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 23,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 206,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 23 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 78.5
    },
    {
      "filename": "1995_Limit_Splitout_Automation_Webhook.json",
      "workflow_name": "Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI",
      "complexity": {
        "node_count": 42,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2049_Limit_Splitout_Automate_Webhook.json",
      "workflow_name": "\ud83d\udd25\ud83d\udcc8\ud83e\udd16 AI Agent for n8n Creators Leaderboard - Find Popular Workflows",
      "complexity": {
        "node_count": 63,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0571428571428572,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0847_Linkedin_Splitout_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1121_Linkedin_Wait_Create_Webhook.json",
      "workflow_name": "Hacker News to Video Template - AlexK1919",
      "complexity": {
        "node_count": 147,
        "connection_count": 55,
        "max_depth": 1,
        "branching_factor": 0.9923076923076923,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 15,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 94,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 15 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1280_Linkedin_Telegram_Automation_Scheduled.json",
      "workflow_name": "Social Media AI Agent - Telegram",
      "complexity": {
        "node_count": 45,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1330_Linkedin_Schedule_Automate_Webhook.json",
      "workflow_name": "Automate LinkedIn Posts with AI",
      "complexity": {
        "node_count": 23,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1342_Linkedin_Telegram_Automate_Webhook.json",
      "workflow_name": "\u2728\ud83e\ude77Automated Social Media Content Publishing Factory + System Prompt Composition",
      "complexity": {
        "node_count": 159,
        "connection_count": 67,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 24,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 3,
        "loops": 0,
        "error_handling": 54,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1491_Linkedin_Wait_Create_Webhook.json",
      "workflow_name": "Hacker News to Video Template - AlexK1919",
      "complexity": {
        "node_count": 147,
        "connection_count": 55,
        "max_depth": 1,
        "branching_factor": 0.9923076923076923,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 15,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 94,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 15 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1709_Linkedin_Wordpress_Automation_Webhook.json",
      "workflow_name": "AI Social Media Publisher from WordPress",
      "complexity": {
        "node_count": 44,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.103448275862069,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1782_Linkedin_Telegram_Automation_Scheduled.json",
      "workflow_name": "Social Media AI Agent - Telegram",
      "complexity": {
        "node_count": 45,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1807_Linkedin_Googledocs_Automate_Webhook.json",
      "workflow_name": "\u2728\ud83e\ude77Automated Social Media Content Publishing Factory + System Prompt Composition",
      "complexity": {
        "node_count": 103,
        "connection_count": 60,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 2,
        "loops": 0,
        "error_handling": 42,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1922_Linkedin_Schedule_Automate_Webhook.json",
      "workflow_name": "Automate LinkedIn Posts with AI",
      "complexity": {
        "node_count": 23,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1939_Linkedin_Code_Automation_Webhook.json",
      "workflow_name": "Notion to Linkedin",
      "complexity": {
        "node_count": 24,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1951_Linkedin_Webhook_Automate_Webhook.json",
      "workflow_name": "Training Feedback Automation",
      "complexity": {
        "node_count": 66,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 45,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2024_Linkedin_Telegram_Automate_Webhook.json",
      "workflow_name": "Linkedin Automation",
      "complexity": {
        "node_count": 45,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0535_Localfile_Manual_Create_Webhook.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 60,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0536_Localfile_Splitout_Send_Triggered.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0537_Localfile_Wait_Create_Triggered.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 41,
        "max_depth": 1,
        "branching_factor": 1.0303030303030303,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 23,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 7,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1357_Localfile_Wait_Automation_Triggered.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 41,
        "max_depth": 1,
        "branching_factor": 1.0303030303030303,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 23,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 7,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1358_Localfile_Manual_Create_Webhook.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 60,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1635_Localfile_Splitout_Automation_Triggered.json",
      "workflow_name": "Localfiletrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0026_Mailcheck_Airtable_Monitor.json",
      "workflow_name": "Airtable Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0345_Mailchimp_Cron_Create_Scheduled.json",
      "workflow_name": "Create entry in Mailchimp from Airtable",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0989_Mailchimp_Automate_Triggered.json",
      "workflow_name": "Mailchimptrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1874_Mailerlite_Gumroad_Automation_Webhook.json",
      "workflow_name": "Gumroad sale trigger",
      "complexity": {
        "node_count": 20,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0994_Mailjet_Automate_Triggered.json",
      "workflow_name": "Mailjettrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1956_Mailjet_Gmail_Create_Triggered.json",
      "workflow_name": "Forward Netflix emails to multiple email addresses with GMail and Mailjet",
      "complexity": {
        "node_count": 12,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0002_Manual_Totp_Automation_Triggered.json",
      "workflow_name": "Complete Guide to Setting Up and Generating TOTP Codes in n8n \ud83d\udd10",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0005_Manual_Twitter_Create_Triggered.json",
      "workflow_name": "New tweets",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0007_Manual_Todoist_Create_Triggered.json",
      "workflow_name": "Create a new task in Todoist",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0011_Manual_Copper_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0012_Manual_Copper_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0013_Manual_Noop_Import_Triggered.json",
      "workflow_name": "Loading data into a spreadsheet",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0014_Manual_Coda_Create_Triggered.json",
      "workflow_name": "Insert data into a new row for a table in Coda",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0016_Manual_Googleslides_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0018_Manual_Chargebee_Create_Triggered.json",
      "workflow_name": "Create a new customer in Chargebee",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0019_Manual_Uproc_Send_Triggered.json",
      "workflow_name": "verify email",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0022_Manual_Webflow_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0024_Manual_Clearbit_Send_Triggered.json",
      "workflow_name": "Look up a person using their email in Clearbit",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0025_Manual_Uproc_Automation_Triggered.json",
      "workflow_name": "location_by_ip",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0029_Manual_Orbit_Create_Triggered.json",
      "workflow_name": "Create a new member, update the information of the member, create a note and a post for the membe...",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0030_Manual_Clickup_Create_Triggered.json",
      "workflow_name": "Create a task in ClickUp",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0032_Manual_Filemaker_Automate_Triggered.json",
      "workflow_name": "Filemaker Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0037_Manual_Googlebooks_Create_Triggered.json",
      "workflow_name": "Get a volume and add it to your bookshelf",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0038_Manual_Ical_Send_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0045_Manual_Telegram_Import_Triggered.json",
      "workflow_name": "Get SSL Certificate",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0046_Manual_Storyblok_Import_Triggered.json",
      "workflow_name": "Get all the stories starting with `release` and publish them",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0049_Manual_Awss3_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0051_Manual_Microsofttodo_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0052_Manual_Git_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0054_Manual_Writebinaryfile_Automate_Triggered.json",
      "workflow_name": "Standup Bot - Initialize",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0056_Manual_Uproc_Import_Triggered.json",
      "workflow_name": "Get Company by Name",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0058_Manual_Readbinaryfile_Automate_Triggered.json",
      "workflow_name": "Standup Bot - Read Config",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0059_Manual_Twitter_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0062_Manual_Pipedrive_Create_Triggered.json",
      "workflow_name": "Create an deal in Pipedrive",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0063_Manual_Uproc_Import_Triggered.json",
      "workflow_name": "Get DNS entries",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0064_Manual_Writebinaryfile_Automate_Triggered.json",
      "workflow_name": "Standup Bot - Override Config",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0067_Manual_Uproc_Automation_Triggered.json",
      "workflow_name": "Verify phone numbers",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0069_Manual_Gmail_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0073_Manual_Rssfeedread_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0074_Manual_HTTP_Monitor_Webhook.json",
      "workflow_name": "0074_Manual_HTTP_Monitor_Webhook",
      "complexity": {
        "node_count": 8,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0075_Manual_Noop_Update_Triggered.json",
      "workflow_name": "Get all the contacts from GetResponse and update them",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0078_Manual_Slack_Monitor_Webhook.json",
      "workflow_name": "Google Calendar to Slack Status & Philips Hue",
      "complexity": {
        "node_count": 9,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 0.875,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0079_Manual_Strapi_Create_Triggered.json",
      "workflow_name": "Create, update, and get an entry in Strapi",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 3,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0080_Manual_Disqus_Import_Triggered.json",
      "workflow_name": "Get details of a forum in Disqus",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0088_Manual_Harvest_Create_Triggered.json",
      "workflow_name": "Create a client in Harvest",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0098_Manual_Segment_Monitor_Triggered.json",
      "workflow_name": "Track an event in Segment",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0100_Manual_Zendesk_Create_Triggered.json",
      "workflow_name": "Create a ticket in Zendesk",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0102_Manual_HTTP_Create_Webhook.json",
      "workflow_name": "0102_Manual_HTTP_Create_Webhook",
      "complexity": {
        "node_count": 8,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0106_Manual_Drift_Create_Triggered.json",
      "workflow_name": "Create a contact in Drift",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0107_Manual_Zulip_Send_Triggered.json",
      "workflow_name": "Send a private message on Zulip",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0110_Manual_Humanticai_Create_Webhook.json",
      "workflow_name": "Create, update, and get a profile in Humantic AI",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0111_Manual_Vero_Create_Triggered.json",
      "workflow_name": "Create a user profile in Vero",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0112_Manual_Awstextract_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0114_Manual_Salesmate_Create_Triggered.json",
      "workflow_name": "Create a company in Salesmate",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0117_Manual_Uplead_Import_Triggered.json",
      "workflow_name": "Get information about a company with UpLead",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0119_Manual_Cron_Create_Webhook.json",
      "workflow_name": "Find a New Book",
      "complexity": {
        "node_count": 13,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 55,
      "overall_score": 76.0
    },
    {
      "filename": "0120_Manual_GoogleSheets_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0122_Manual_Flow_Import_Triggered.json",
      "workflow_name": "Get all the tasks in Flow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0127_Manual_Noop_Monitor_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0128_Manual_N8Ntrainingcustomerdatastore_Automation_Webhook.json",
      "workflow_name": "0128_Manual_N8Ntrainingcustomerdatastore_Automation_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0131_Manual_Start_Automation_Webhook.json",
      "workflow_name": "0131_Manual_Start_Automation_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0137_Manual_Editimage_Create_Webhook.json",
      "workflow_name": "0137_Manual_Editimage_Create_Webhook",
      "complexity": {
        "node_count": 12,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0145_Manual_Send_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0157_Manual_Import_Triggered.json",
      "workflow_name": "Get today's date and day using the Function node",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0160_Manual_Automation_Triggered.json",
      "workflow_name": "Assign values to variables using the Set node",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0166_Manual_Lingvanex_Automation_Webhook.json",
      "workflow_name": "Translate cocktail instructions using LingvaNex",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0173_Manual_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0175_Manual_Sendy_Create_Triggered.json",
      "workflow_name": "Add a subscriber to a list and create and send a campaign",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0179_Manual_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0181_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "0181_Manual_HTTP_Automation_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0189_Manual_Quickbase_Create_Triggered.json",
      "workflow_name": "Create, update and get records in Quick Base",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0191_Manual_Slack_Automation_Webhook.json",
      "workflow_name": "0191_Manual_Slack_Automation_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0192_Manual_Openthesaurus_Import_Triggered.json",
      "workflow_name": "Get synonyms of a German word",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0195_Manual_Pagerduty_Create_Triggered.json",
      "workflow_name": "Create, update, and get an incident on PagerDuty",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0198_Manual_Thehive_Create_Triggered.json",
      "workflow_name": "Create, update and get a case in TheHive",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0199_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Bubble Data Access",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0200_Manual_Executecommand_Export_Scheduled.json",
      "workflow_name": "Tools / Backup Gitlab",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0202_Manual_Cortex_Import_Triggered.json",
      "workflow_name": "Analyze a URL and get the job details using the Cortex node",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0203_Manual_Writebinaryfile_Automation_Webhook.json",
      "workflow_name": "Write a file to the host machine",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 71.0
    },
    {
      "filename": "0204_Manual_Questdb_Create_Triggered.json",
      "workflow_name": "Create a table and insert data into it",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0206_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "0206_Manual_Stickynote_Automation_Webhook",
      "complexity": {
        "node_count": 6,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0207_Manual_Slack_Create_Webhook.json",
      "workflow_name": "Create a channel, invite users to the channel, post a message, and upload a file",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0208_Manual_Iterable_Create_Triggered.json",
      "workflow_name": "Create, update and get a user from Iterable",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0210_Manual_Yourls_Create_Triggered.json",
      "workflow_name": "Create a short URL and get the statistics of the URL",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0213_Manual_Markdown_Create_Webhook.json",
      "workflow_name": "0213_Manual_Markdown_Create_Webhook",
      "complexity": {
        "node_count": 10,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0214_Manual_Markdown_Create_Webhook.json",
      "workflow_name": "0214_Manual_Markdown_Create_Webhook",
      "complexity": {
        "node_count": 10,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0216_Manual_N8Ntrainingcustomerdatastore_Automation_Triggered.json",
      "workflow_name": "Very quick quickstart",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0217_Manual_Ghost_Create_Triggered.json",
      "workflow_name": "Create, update, and get a post in Ghost",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0218_Manual_Airtable_Update_Triggered.json",
      "workflow_name": "Insert and update data in Airtable",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0219_Manual_Snowflake_Create_Triggered.json",
      "workflow_name": "Create a table, and insert and update data in the table in Snowflake",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0225_Manual_Twist_Create_Triggered.json",
      "workflow_name": "Create and update a channel, and send a message on Twist",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0226_Manual_Stickynote_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0227_Manual_N8Ntrainingcustomerdatastore_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 2.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0228_Manual_Stickynote_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.7142857142857142,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 50,
      "overall_score": 72.5
    },
    {
      "filename": "0229_Manual_HTTP_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0233_Manual_N8Ntrainingcustomerdatastore_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0236_Manual_GoogleSheets_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0240_Manual_Gmail_Create_Triggered.json",
      "workflow_name": "Get messages with a certain label, remove the label, and add a new one",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0242_Manual_Brandfetch_Import_Triggered.json",
      "workflow_name": "Get the logo, icon, and information of a company and store it in Airtable",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0250_Manual_Baserow_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0254_Manual_Mattermost_Create_Triggered.json",
      "workflow_name": "Create a channel, add a member, and post a message to the channel",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0257_Manual_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0259_Manual_HTTP_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.2105263157894737,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0261_Manual_Googlefirebasecloudfirestore_Create_Triggered.json",
      "workflow_name": "Create, update, and get a document in Google Cloud Firestore",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0271_Manual_HTTP_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0284_Manual_Readbinaryfile_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0292_Manual_Stickynote_Export_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0293_Manual_Woocommerce_Create_Triggered.json",
      "workflow_name": "Create, update and get a product from WooCommerce",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0297_Manual_Openai_Export_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0300_Manual_Egoi_Create_Triggered.json",
      "workflow_name": "Create, update, and get a subscriber using the e-goi node",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0302_Manual_N8Ntrainingcustomerdatastore_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0303_Manual_Stickynote_Export_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0304_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0305_Manual_Telegram_Create_Triggered.json",
      "workflow_name": "Create a screenshot of a website and send it to a telegram channel",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0312_Manual_HTTP_Create_Webhook.json",
      "workflow_name": "Create, add an attachment, and send a draft using the Microsoft Outlook node",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0315_Manual_Comparedatasets_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0317_Manual_Movebinarydata_Process_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0321_Manual_Stickynote_Automate_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0323_Manual_Stickynote_Process_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0324_Manual_Stickynote_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0326_Manual_Stickynote_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0328_Manual_GoogleDrive_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0329_Manual_Send_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0336_Manual_Snowflake_Automation_Webhook.json",
      "workflow_name": "Snowflake CSV",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0337_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Structured Data Extract, Data Mining with Bright Data & Google Gemini",
      "complexity": {
        "node_count": 52,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0789473684210527,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 29,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0338_Manual_Stickynote_Export_Webhook.json",
      "workflow_name": "Capture Website Screenshots with Bright Data Web Unlocker and Save to Disk",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0342_Manual_GoogleCalendar_Create_Triggered.json",
      "workflow_name": "Add a event to Calender",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0343_Manual_Editimage_Create_Webhook.json",
      "workflow_name": "Add text to an image downloaded from the internet",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 71.0
    },
    {
      "filename": "0349_Manual_GoogleSheets_Automation_Scheduled.json",
      "workflow_name": "Google Sheet to Mailchimp",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0353_Manual_Twilio_Send_Triggered.json",
      "workflow_name": "Send SMS to numbers stored in Airtable with Twilio",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0355_Manual_Twake_Send_Triggered.json",
      "workflow_name": "Send a message on Twake",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0356_Manual_Twitter_Automate_Scheduled.json",
      "workflow_name": "TwitterWorkflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 0.8,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0359_Manual_Wordpress_Automation_Triggered.json",
      "workflow_name": "Wordpress-to-csv",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0369_Manual_Airtable_Automation_Triggered.json",
      "workflow_name": "Store the output of a phantom in Airtable",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0374_Manual_Stickynote_Send_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0377_Manual_Stickynote_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0389_Manual_Googleanalytics_Import_Triggered.json",
      "workflow_name": "Get analytics of a website and store it Airtable",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0399_Manual_Stickynote_Automate_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0400_Manual_Code_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0408_Manual_Sendgrid_Create_Triggered.json",
      "workflow_name": "Create, update and get a contact using the SendGrid node",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0409_Manual_Googlecontacts_Create_Triggered.json",
      "workflow_name": "Create, update and get a contact in Google Contacts",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0439_Manual_Schedule_Create_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0455_Manual_Gsuiteadmin_Create_Triggered.json",
      "workflow_name": "Create, update, and get a user using the G Suite Admin node",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0458_Manual_Code_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0476_Manual_Youtube_Create_Triggered.json",
      "workflow_name": "Upload video, create playlist and add video to playlist",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0477_Manual_Youtube_Create_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0489_Manual_Debughelper_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0495_Manual_HTTP_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0501_Manual_Extractfromfile_Send_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0507_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0509_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0513_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0514_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0515_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0521_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0522_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0531_Manual_HTTP_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 48,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0540_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0541_Manual_Stickynote_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0543_Manual_N8N_Export_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0558_Manual_Stickynote_Automation_Triggered.json",
      "workflow_name": "TOTP VALIDATION (WITHOUT CREATING CREDENTIAL)",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0568_Manual_Zendesk_Automation_Scheduled.json",
      "workflow_name": "Zendesk-to-slack",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0589_Manual_Filter_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0617_Manual_Noop_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 39,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0653_Manual_Convertkit_Create_Triggered.json",
      "workflow_name": "Add subscriber to form, create tag and subscriber to the tag",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0662_Manual_Schedule_Automation_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0678_Manual_Stickynote_Automate_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 0.8,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0703_Manual_Sentryio_Create_Triggered.json",
      "workflow_name": "Create a release and get all releases",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0710_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0713_Manual_HTTP_Update_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0728_Manual_GoogleSheets_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 0.9,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0734_Manual_HTTP_Create_Webhook.json",
      "workflow_name": "Generate Image Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0737_Manual_Executecommand_Automation_Triggered.json",
      "workflow_name": "N8N Espa\u00f1ol - Ejemplos",
      "complexity": {
        "node_count": 12,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0744_Manual_Googletasks_Create_Triggered.json",
      "workflow_name": "Add task to tasklist",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0746_Manual_Discord_Automation_Triggered.json",
      "workflow_name": "Discord Intro",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0757_Manual_Wordpress_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0770_Manual_Stickynote_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0776_Manual_Mailerlite_Create_Triggered.json",
      "workflow_name": "Receive updates when a subscriber is added to a group and strore the information in Airtable",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0779_Manual_HTTP_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0803_Manual_Customerio_Create_Triggered.json",
      "workflow_name": "Create a customer and add them to a segment in Customer.io",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0821_Manual_Noop_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9166666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0827_Manual_Functionitem_Send_Triggered.json",
      "workflow_name": "Email body parser by aprenden8n.com",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0838_Manual_GoogleSheets_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0853_Manual_Executecommand_Automate_Triggered.json",
      "workflow_name": "Executecommand Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 90.5
    },
    {
      "filename": "0861_Manual_Stickynote_Update_Triggered.json",
      "workflow_name": "Quickchart Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0886_Manual_Stickynote_Import_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0887_Manual_Stickynote_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0906_Manual_GoogleSheets_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0908_Manual_Stickynote_Automate_Triggered.json",
      "workflow_name": "Html2Pdf Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0909_Manual_Stickynote_Process_Triggered.json",
      "workflow_name": "Html2Pdf Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0928_Manual_N8N_Automate_Triggered.json",
      "workflow_name": "N8N Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0930_Manual_Spreadsheetfile_Export_Triggered.json",
      "workflow_name": "PostgreSQL export to CSV",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0933_Manual_Stickynote_Create_Webhook.json",
      "workflow_name": "Create AI-Ready Vector Datasets for LLMs with Bright Data, Gemini & Pinecone",
      "complexity": {
        "node_count": 48,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0938_Manual_Mailchimp_Automation_Triggered.json",
      "workflow_name": "Mailchimp",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0943_Manual_Xml_Automation_Triggered.json",
      "workflow_name": "XML Conversion",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0949_Manual_Twilio_Automate_Triggered.json",
      "workflow_name": "A workflow with the Twilio node",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0951_Manual_Activecampaign_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0954_Manual_Htmlextract_Automation_Webhook.json",
      "workflow_name": "0954_Manual_Htmlextract_Automation_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0957_Manual_Paypal_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0959_Manual_Signl4_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0960_Manual_Freshdesk_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0962_Manual_Postgres_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0975_Manual_Zulip_Automation_Scheduled.json",
      "workflow_name": "Zammad Open Tickets",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0976_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "post to wallabag",
      "complexity": {
        "node_count": 10,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 69.5
    },
    {
      "filename": "0981_Manual_Awssns_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0982_Manual_Mongodb_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0983_Manual_Awsses_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0985_Manual_Awslambda_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0986_Manual_Msg91_Send_Triggered.json",
      "workflow_name": "Send an SMS using MSG91",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0987_Manual_Facebookgraphapi_Automation_Triggered.json",
      "workflow_name": "0987_Manual_Facebookgraphapi_Automation_Triggered",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0988_Manual_Writebinaryfile_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0990_Manual_Cockpit_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0991_Manual_Hunter_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0993_Manual_Mailjet_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0995_Manual_Mailgun_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0996_Manual_Hackernews_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1000_Manual_Travisci_Create_Triggered.json",
      "workflow_name": "Trigger a build using the TravisCI node",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 0.5,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1003_Manual_Invoiceninja_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1008_Manual_Rundeck_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1011_Manual_Xero_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1012_Manual_Bannerbear_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1013_Manual_Bannerbear_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1014_Manual_Wordpress_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1016_Manual_Shopify_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1017_Manual_Mautic_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1019_Manual_Paddle_Create_Triggered.json",
      "workflow_name": "Create a coupon on Paddle",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 0.5,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1021_Manual_Zohocrm_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1022_Manual_Keap_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1024_Manual_Mondaycom_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1025_Manual_Redis_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1026_Manual_Graphql_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1027_Manual_Box_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1028_Manual_Trello_Automation_Triggered.json",
      "workflow_name": "CFP Selection 2",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1029_Manual_Xml_Process_Webhook.json",
      "workflow_name": "Convert the JSON data received from the CocktailDB API in XML",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 71.0
    },
    {
      "filename": "1032_Manual_Microsoftonedrive_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1033_Manual_Microsoftexcel_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1034_Manual_Helpscout_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1037_Manual_Mandrill_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1038_Manual_Crypto_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1039_Manual_Datetime_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1040_Manual_Editimage_Update_Webhook.json",
      "workflow_name": "1040_Manual_Editimage_Update_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "1041_Manual_Readbinaryfile_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1042_Manual_Readbinaryfiles_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1044_Manual_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1045_Manual_Renamekeys_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1046_Manual_Rssfeedread_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1047_Manual_Emailsend_Send_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1048_Manual_Readpdf_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1049_Manual_Readbinaryfile_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1051_Manual_Executeworkflow_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1053_Manual_Philipshue_Automation_Triggered.json",
      "workflow_name": "Turn on a light and set its brightness",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1054_Manual_Cratedb_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1055_Manual_Mysql_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1056_Manual_Postgres_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1057_Manual_Mocean_Send_Triggered.json",
      "workflow_name": "Send an SMS using the Mocean node",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1062_Manual_GoogleSheets_Update_Triggered.json",
      "workflow_name": "Append, lookup, update, and read data from a Google Sheets spreadsheet",
      "complexity": {
        "node_count": 12,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1066_Manual_GitHub_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1073_Manual_GoogleSheets_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1074_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "1074_Manual_HTTP_Automation_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "1075_Manual_Wordpress_Create_Triggered.json",
      "workflow_name": "Create a post and update the post in WordPress",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1076_Manual_Cron_Automation_Scheduled.json",
      "workflow_name": "n8n_mysql_purge_history_greater_than_10_days",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1078_Manual_Dropbox_Automation_Webhook.json",
      "workflow_name": "1078_Manual_Dropbox_Automation_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1080_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "1080_Manual_HTTP_Automation_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1086_Manual_Contentful_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1087_Manual_Unleashedsoftware_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1088_Manual_S3_Import_Webhook.json",
      "workflow_name": "Upload a file and get a list of all the files in a bucket",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1089_Manual_Writebinaryfile_Automation_Webhook.json",
      "workflow_name": "Store the data received from the CocktailDB API in JSON",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 35,
      "overall_score": 71.0
    },
    {
      "filename": "1090_Manual_Code_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1093_Manual_Ftp_Automation_Webhook.json",
      "workflow_name": "1093_Manual_Ftp_Automation_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1094_Manual_Salesforce_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1095_Manual_Teams_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1096_Manual_Linkedin_Automation_Webhook.json",
      "workflow_name": "1096_Manual_Linkedin_Automation_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1097_Manual_Noop_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1098_Manual_Import_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1100_Manual_Taiga_Create_Triggered.json",
      "workflow_name": "Create, update, and get an issue on Taiga",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1102_Manual_Openai_Automation_Triggered.json",
      "workflow_name": "Prepare CSV files with GPT-4",
      "complexity": {
        "node_count": 19,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1105_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Text to Speech (OpenAI)",
      "complexity": {
        "node_count": 19,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1115_Manual_Wekan_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1122_Manual_Rssfeedread_Automation_Triggered.json",
      "workflow_name": "Read RSS feed from two different sources",
      "complexity": {
        "node_count": 9,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 0.8,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1126_Manual_Clockify_Create_Triggered.json",
      "workflow_name": "Create a project, tag, and time entry, and update the time entry in Clockify",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 3,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1128_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Extract information from an image of a receipt",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1136_Manual_HubSpot_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1139_Manual_Medium_Automation_Triggered.json",
      "workflow_name": "Publish post to a publication",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1154_Manual_Automizy_Create_Triggered.json",
      "workflow_name": "Create a new list, add a new contact to the list, update the contact, and get all contacts in the...",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1158_Manual_Matrix_Create_Triggered.json",
      "workflow_name": "Create a room, invite members from a different room, and send a message in the room we created",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1159_Manual_Zoom_Automation_Triggered.json",
      "workflow_name": "Creating a meeting with the Zoom node",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 0.5,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1162_Manual_Circleci_Import_Triggered.json",
      "workflow_name": "Get a pipeline in CircleCI",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1166_Manual_Messagebird_Send_Triggered.json",
      "workflow_name": "Sending an SMS with MessageBird",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1170_Manual_Jira_Create_Triggered.json",
      "workflow_name": "Create a new issue in Jira",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1173_Manual_Openweathermap_Import_Triggered.json",
      "workflow_name": "Get the current weather data for a city",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 0.5,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1174_Manual_Readbinaryfile_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1175_Manual_Trello_Create_Triggered.json",
      "workflow_name": "Create a new card in Trello",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1181_Manual_Spotify_Automation_Triggered.json",
      "workflow_name": "Sample Spotify",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1183_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Enhance Chat Responses with Real-Time Search Data via Bright Data & Gemini AI",
      "complexity": {
        "node_count": 30,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1189_Manual_Rocketchat_Send_Triggered.json",
      "workflow_name": "Post a message to a channel in RocketChat",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1193_Manual_Intercom_Create_Triggered.json",
      "workflow_name": "Create a new user in Intercom",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1196_Manual_Securityscorecard_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1197_Manual_Reddit_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1199_Manual_Sms77_Send_Triggered.json",
      "workflow_name": "Sending an SMS using sms77",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1200_Manual_Googletranslate_Automation_Triggered.json",
      "workflow_name": "Translate text from English to German",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1201_Manual_Discourse_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1203_Manual_Stackby_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1204_Manual_Peekalink_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1205_Manual_Tapfiliate_Automate_Triggered.json",
      "workflow_name": "Tapfiliate Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1206_Manual_Strava_Create_Triggered.json",
      "workflow_name": "Create, update, and get activity in Strava",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1210_Manual_Affinity_Create_Triggered.json",
      "workflow_name": "Create an organization in Affinity",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1216_Manual_Schedule_Automate_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1218_Manual_Mailerlite_Create_Triggered.json",
      "workflow_name": "Create, update and get a subscriber using the MailerLite node",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1219_Manual_Agilecrm_Create_Triggered.json",
      "workflow_name": "Create a new contact in Agile CRM",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1225_Manual_Asana_Create_Triggered.json",
      "workflow_name": "Create a new task in Asana",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1231_Manual_Splitinbatches_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1232_Manual_Splitinbatches_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1234_Manual_Microsoftsql_Automation_Triggered.json",
      "workflow_name": "Execute an SQL query in Microsoft SQL",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1235_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Google Trend Data Extract, Summarization with Bright Data & Google Gemini",
      "complexity": {
        "node_count": 43,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1238_Manual_Code_Automation_Webhook.json",
      "workflow_name": "3D Figurine Orthographic Views with Midjourney and GPT-4o-Image API",
      "complexity": {
        "node_count": 34,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1241_Manual_HTTP_Process_Webhook.json",
      "workflow_name": "Convert YouTube Videos into SEO Blog Posts",
      "complexity": {
        "node_count": 39,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1285_Manual_Stickynote_Import_Triggered.json",
      "workflow_name": "LangChain - Example - Workflow Retriever",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1303_Manual_Stickynote_Create_Triggered.json",
      "workflow_name": "Build an OpenAI Assistant with Google Drive Integration",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1314_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Extract & Summarize Bing Copilot Search Results with Gemini AI and Bright Data",
      "complexity": {
        "node_count": 56,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0232558139534884,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 32,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1319_Manual_Stickynote_Automation_Triggered.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1322_Manual_Wordpress_Automation_Triggered.json",
      "workflow_name": "Auto categorize wordpress template",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1339_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Fine-tuning with OpenAI models",
      "complexity": {
        "node_count": 23,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1351_Manual_Splitout_Automation_Webhook.json",
      "workflow_name": "Scrape Today's Github Trend 13 Top Repositories",
      "complexity": {
        "node_count": 19,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1360_Manual_Stickynote_Create_Triggered.json",
      "workflow_name": "Build an OpenAI Assistant with Google Drive Integration",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1373_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Chat with GitHub OpenAPI Specification using RAG (Pinecone and OpenAI)",
      "complexity": {
        "node_count": 32,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1376_Manual_GoogleDrive_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1390_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Text to Speech (OpenAI)",
      "complexity": {
        "node_count": 19,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1393_Manual_Editimage_Create_Webhook.json",
      "workflow_name": "1393_Manual_Editimage_Create_Webhook",
      "complexity": {
        "node_count": 12,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "1394_Manual_Humanticai_Create_Webhook.json",
      "workflow_name": "Create, update, and get a profile in Humantic AI",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1397_Manual_Stickynote_Automation_Triggered.json",
      "workflow_name": "LangChain - Example - Code Node Example",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1422_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Lead Generation System (Template)",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1436_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 48,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1445_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Extract Amazon Best Seller Electronic Information with Bright Data and Google Gemini",
      "complexity": {
        "node_count": 26,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1449_Manual_Webhook_Automate_Webhook.json",
      "workflow_name": "NetSuite Rest API workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 0.8888888888888888,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1457_Manual_Stickynote_Process_Triggered.json",
      "workflow_name": "[AI/LangChain] Output Parser 4",
      "complexity": {
        "node_count": 18,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1467_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Google Search Engine Results Page Extraction with Bright Data",
      "complexity": {
        "node_count": 32,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9523809523809523,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1475_Manual_Stickynote_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1503_Manual_HTTP_Export_Webhook.json",
      "workflow_name": "Export Zammad Objects Users, Roles, Groups and Organizations to Excel",
      "complexity": {
        "node_count": 40,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.1,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1505_Manual_Stickynote_Send_Webhook.json",
      "workflow_name": "[hiroshidigital.com] Send Message In Larksuite",
      "complexity": {
        "node_count": 23,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1511_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1516_Manual_Stickynote_Send_Webhook.json",
      "workflow_name": "Email verification with Icypeas (single)",
      "complexity": {
        "node_count": 17,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1517_Manual_Code_Automation_Webhook.json",
      "workflow_name": "Perform a domain search (single) with Icypeas",
      "complexity": {
        "node_count": 17,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1528_Manual_Gmail_Send_Triggered.json",
      "workflow_name": "Summarize Google Drive Documents with Mistral AI and Send via Gmail",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1532_Manual_Wait_Automation_Webhook.json",
      "workflow_name": "(Not published) Three-View Orthographic Projection to Dynamic Video Conversion",
      "complexity": {
        "node_count": 43,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1543_Manual_Openai_Automation_Triggered.json",
      "workflow_name": "Summarize Google Sheets form feedback via OpenAI's GPT-4",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1545_Manual_Code_Automation_Triggered.json",
      "workflow_name": "pdf to text",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1546_Manual_Splitout_Automation_Webhook.json",
      "workflow_name": "Scrape Latest 20 TechCrunch Articles",
      "complexity": {
        "node_count": 27,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1547_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Merge PDFs",
      "complexity": {
        "node_count": 27,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1552_Manual_Summarize_Automation_Triggered.json",
      "workflow_name": "SearchApi Youtube Video Summary",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1581_Manual_Stickynote_Create_Triggered.json",
      "workflow_name": "OpenAI Assistant workflow: uploa file, create an Assistant, chat with it!",
      "complexity": {
        "node_count": 19,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1584_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "1584_Manual_HTTP_Automation_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1604_Manual_Openai_Automation_Triggered.json",
      "workflow_name": "Prepare CSV files with GPT-4",
      "complexity": {
        "node_count": 19,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1616_Manual_Stickynote_Send_Webhook.json",
      "workflow_name": "The Easiest Way to Send SMS Worldwide",
      "complexity": {
        "node_count": 16,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1621_Manual_Stickynote_Automate_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1622_Manual_N8N_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1633_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "dub.co URL Shortener",
      "complexity": {
        "node_count": 27,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1636_Manual_Openai_Automation_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1650_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Search & Summarize Web Data with Perplexity, Gemini AI & Bright Data to Webhooks",
      "complexity": {
        "node_count": 48,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1669_Manual_Openai_Automation_Triggered.json",
      "workflow_name": "Summarize Google Sheets form feedback via OpenAI's GPT-4",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1676_Manual_Wait_Automation_Webhook.json",
      "workflow_name": "Summarize Glassdoor Company Info with Google Gemini and Bright Data Web Scraper",
      "complexity": {
        "node_count": 44,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1702_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1704_Manual_Schedule_Automation_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1707_Manual_Stickynote_Automate_Webhook.json",
      "workflow_name": "Scrape Web Data with Bright Data, Google Gemini and MCP Automated AI Agent",
      "complexity": {
        "node_count": 38,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0454545454545454,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1714_Manual_Start_Update_Webhook.json",
      "workflow_name": "1714_Manual_Start_Update_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1735_Manual_Airtop_Automation_Triggered.json",
      "workflow_name": "Sell a Used Car",
      "complexity": {
        "node_count": 20,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1739_Manual_GoogleSheets_Create_Triggered.json",
      "workflow_name": "List Builder",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1766_Manual_GoogleSheets_Automation_Triggered.json",
      "workflow_name": "Analyze Reddit Posts with AI to Identify Business Opportunities",
      "complexity": {
        "node_count": 32,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.1578947368421053,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1776_Manual_Ftp_Automation_Triggered.json",
      "workflow_name": "Qdrant Vector Database Embedding Pipeline",
      "complexity": {
        "node_count": 19,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 0.8571428571428571,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1817_Manual_HTTP_Update_Webhook.json",
      "workflow_name": "Update all Zammad Roles to default values",
      "complexity": {
        "node_count": 29,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 0.9565217391304348,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1821_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Extract & Summarize Yelp Business Review with Bright Data and Google Gemini",
      "complexity": {
        "node_count": 31,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1826_Manual_Wordpress_Automation_Triggered.json",
      "workflow_name": "Auto categorize wordpress template",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1828_Manual_Totp_Automation_Triggered.json",
      "workflow_name": "Complete Guide to Setting Up and Generating TOTP Codes in n8n \ud83d\udd10",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1835_Manual_Slack_Automation_Triggered.json",
      "workflow_name": "Splitinbatches Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 0.875,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1842_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Merge",
      "complexity": {
        "node_count": 30,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1851_Manual_Comparedatasets_Automation_Triggered.json",
      "workflow_name": "Compare 2 SQL datasets",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.25,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1853_Manual_N8N_Create_Triggered.json",
      "workflow_name": "Create Google Creds",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1863_Manual_HTTP_Automation_Webhook.json",
      "workflow_name": "Fine-tuning with OpenAI models",
      "complexity": {
        "node_count": 23,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1866_Manual_Supabase_Automation_Triggered.json",
      "workflow_name": "Supabase Setup Postgres",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1869_Manual_N8Ntrainingcustomerdatastore_Automation_Triggered.json",
      "workflow_name": "itemMatching() example",
      "complexity": {
        "node_count": 13,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1882_Manual_Markdown_Automation_Webhook.json",
      "workflow_name": "Extract & Summarize Indeed Company Info with Bright Data and Google Gemini",
      "complexity": {
        "node_count": 47,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0294117647058822,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1884_Manual_Stickynote_Import_Webhook.json",
      "workflow_name": "Get Long Lived Facebook User or Page Access Token",
      "complexity": {
        "node_count": 22,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1901_Manual_Filter_Automate_Scheduled.json",
      "workflow_name": "Auto - Resume Disabled Workflows",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1912_Manual_GoogleSheets_Automation_Triggered.json",
      "workflow_name": "LinkedIn Profile Discovery",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1960_Manual_Stickynote_Create_Webhook.json",
      "workflow_name": "Generate Company Stories from LinkedIn with Bright Data & Google Gemini",
      "complexity": {
        "node_count": 56,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0227272727272727,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 32,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1961_Manual_Readbinaryfile_Import_Triggered.json",
      "workflow_name": "How to automatically import CSV files into postgres",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1971_Manual_HTTP_Automate_Webhook.json",
      "workflow_name": "My workflow 6",
      "complexity": {
        "node_count": 15,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1979_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Extract & Summarize Wikipedia Data with Bright Data and Gemini AI",
      "complexity": {
        "node_count": 31,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1999_Manual_HTTP_Import_Webhook.json",
      "workflow_name": "Upload video to drive via google script",
      "complexity": {
        "node_count": 16,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2001_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "Brand Content Extract, Summarize & Sentiment Analysis with Bright Data",
      "complexity": {
        "node_count": 58,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0731707317073171,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2002_Manual_Code_Automation_Webhook.json",
      "workflow_name": "Turn YouTube Videos into Summaries, Transcripts, and Visual Insights",
      "complexity": {
        "node_count": 37,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0434782608695652,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "2013_Manual_Stickynote_Create_Webhook.json",
      "workflow_name": "Generate 360\u00b0 Virtual Try-on Videos for Clothing with Kling API",
      "complexity": {
        "node_count": 35,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "2017_Manual_Stickynote_Import_Webhook.json",
      "workflow_name": "Import CSV from URL to Excel",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "2021_Manual_GoogleSheets_Automation_Triggered.json",
      "workflow_name": "ICP Company Scoring",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2022_Manual_Extractfromfile_Update_Webhook.json",
      "workflow_name": "Update Roles by Excel",
      "complexity": {
        "node_count": 33,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0384615384615385,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2032_Manual_HTTP_Send_Webhook.json",
      "workflow_name": "Perform an email search with Icypeas (single)",
      "complexity": {
        "node_count": 17,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2035_Manual_GoogleSheets_Automation_Webhook.json",
      "workflow_name": "n8n-\u8fb2\u7522\u54c1",
      "complexity": {
        "node_count": 17,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2037_Manual_N8N_Automation_Triggered.json",
      "workflow_name": "v1 helper - Find params with affected expressions",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1240_Markdown_Stickynote_Send.json",
      "workflow_name": "Very simple Human in the loop system email with AI e IMAP",
      "complexity": {
        "node_count": 38,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.96,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1540_Markdown_Stickynote_Automation_Webhook.json",
      "workflow_name": "Airtable markdown to html",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1571_Markdown_Stickynote_Send.json",
      "workflow_name": "Very simple Human in the loop system email with AI e IMAP",
      "complexity": {
        "node_count": 38,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.96,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1236_Matrix_Cron_Automate_Scheduled.json",
      "workflow_name": "Coffee Bot (Matrix)",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0017_Mattermost_Emelia_Automate_Triggered.json",
      "workflow_name": "Mattermost Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0020_Mattermost_Emelia_Automate_Triggered.json",
      "workflow_name": "Mattermost Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0027_Mattermost_N8N_Automate_Triggered.json",
      "workflow_name": "N8Ntrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0028_Mattermost_Workflow_Automate_Webhook.json",
      "workflow_name": "0028_Mattermost_Workflow_Automate_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0040_Mattermost_Noop_Automate_Triggered.json",
      "workflow_name": "Notiontrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0132_Mattermost_Googlecloudnaturallanguage_Send_Triggered.json",
      "workflow_name": "Analyze the sentiment of feedback and send a message on Mattermost",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0169_Mattermost_Profitwell_Send_Scheduled.json",
      "workflow_name": "Send financial metrics monthly to Mattermost",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0180_Mattermost_Airtable_Create_Triggered.json",
      "workflow_name": "Receive a Mattermost message when new data gets added to Airtable",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0294_Mattermost_Woocommerce_Create_Triggered.json",
      "workflow_name": "Send a message on Mattermost when an order is created in WooCommerce",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0301_Mattermost_Noop_Automation_Webhook.json",
      "workflow_name": "Gender Inclusive Language",
      "complexity": {
        "node_count": 4,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0357_Mattermost_Twitter_Automation_Scheduled.json",
      "workflow_name": "Twitter notifications",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0850_Mattermost_Pagerduty_Automate_Webhook.json",
      "workflow_name": "0850_Mattermost_Pagerduty_Automate_Webhook",
      "complexity": {
        "node_count": 14,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.2222222222222223,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0855_Mattermost_Pagerduty_Automate_Webhook.json",
      "workflow_name": "0855_Mattermost_Pagerduty_Automate_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0857_Mattermost_Webhook_Automate_Webhook.json",
      "workflow_name": "0857_Mattermost_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0865_Mattermost_Twilio_Automate_Triggered.json",
      "workflow_name": "Twilio Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0941_Mattermost_GoogleSheets_Automation_Scheduled.json",
      "workflow_name": "StatsInstagram",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1077_Mattermost_Webhook_Automate_Webhook.json",
      "workflow_name": "1077_Mattermost_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1117_Mattermost_GoogleSheets_Automate_Scheduled.json",
      "workflow_name": "Cron Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1137_Mattermost_Cron_Automate_Scheduled.json",
      "workflow_name": "Coffee Bot (Mattermost)",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.25,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1167_Mattermost_GoogleSheets_Create_Scheduled.json",
      "workflow_name": "Mattermost Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1215_Mattermost_Typeform_Automate_Triggered.json",
      "workflow_name": "Mattermost Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1221_Mattermost_Lemlist_Automate_Triggered.json",
      "workflow_name": "Lemlisttrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1309_Mattermost_Googlecloudnaturallanguage_Send_Triggered.json",
      "workflow_name": "Analyze the sentiment of feedback and send a message on Mattermost",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1310_Mattermost_Typeform_Send_Triggered.json",
      "workflow_name": "Mattermost Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0155_Mautic_Twilio_Update_Triggered.json",
      "workflow_name": "Receive updates when a form is submitted in Mautic, and send a confirmation SMS",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0275_Mautic_Mondaycom_Create_Triggered.json",
      "workflow_name": "Mondaycom Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0490_Mautic_Gmail_Send_Triggered.json",
      "workflow_name": "Unsubscribe Mautic contacts from automated unsubscribe emails",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.375,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0963_Mautic_Webhook_Update_Webhook.json",
      "workflow_name": "0963_Mautic_Webhook_Update_Webhook",
      "complexity": {
        "node_count": 17,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "1083_Mautic_GoogleSheets_Automate_Scheduled.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1160_Mautic_Woocommerce_Create_Triggered.json",
      "workflow_name": "New WooCommerce Customer to Mautic",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1168_Mautic_Slack_Send_Triggered.json",
      "workflow_name": "Check for valid Mautic contact email",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 0.8333333333333334,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "1526_Mautic_Webhook_Automation_Webhook.json",
      "workflow_name": "Shopify + Mautic",
      "complexity": {
        "node_count": 37,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0416666666666667,
        "cyclomatic_complexity": 8,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 90.0
    },
    {
      "filename": "0258_Microsoftexcel_Manual_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.3636363636363635,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0276_Microsoftonedrive_Readbinaryfile_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.3,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0835_Microsoftoutlook_Schedule_Automation_Scheduled.json",
      "workflow_name": "Mysql Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.8333333333333334,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1870_Microsoftoutlook_GoogleCalendar_Automation_Triggered.json",
      "workflow_name": "Google calendar to Outlook",
      "complexity": {
        "node_count": 15,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1925_Microsoftoutlook_Microsoftoutlooktool_Automation_Triggered.json",
      "workflow_name": "Outlook",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1944_Microsoftoutlook_Telegram_Send_Triggered.json",
      "workflow_name": "send file to kindle through telegram bot",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1494_Microsofttodo_Webhook_Automation_Webhook.json",
      "workflow_name": "MiniBear Webhook",
      "complexity": {
        "node_count": 122,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 11,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 72,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 11 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1551_Mondaycom_Schedule_Send_Scheduled.json",
      "workflow_name": "Microsoft Outlook AI Email Assistant",
      "complexity": {
        "node_count": 34,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.1,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1553_Mondaycom_Splitout_Automation_Webhook.json",
      "workflow_name": "TEMPLATES",
      "complexity": {
        "node_count": 27,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.3125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1781_Mondaycom_Splitout_Import_Triggered.json",
      "workflow_name": "MONDAY GET FULL ITEM",
      "complexity": {
        "node_count": 31,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.2105263157894737,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1974_Mondaycom_Schedule_Send_Scheduled.json",
      "workflow_name": "Microsoft Outlook AI Email Assistant",
      "complexity": {
        "node_count": 34,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.1,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0511_Mongodbtool_Stickynote_Automation_Triggered.json",
      "workflow_name": "MongoDB Agent",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1555_Mongodbtool_Stickynote_Automation_Triggered.json",
      "workflow_name": "MongoDB Agent",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0992_Mqtt_Send_Triggered.json",
      "workflow_name": "Receive messages for a MQTT queue",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1350_Mysqltool_Stickynote_Automate_Webhook.json",
      "workflow_name": "modelo do chatbot",
      "complexity": {
        "node_count": 31,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1372_Mysqltool_Stickynote_Automate_Webhook.json",
      "workflow_name": "modelo do chatbot",
      "complexity": {
        "node_count": 31,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0230_N8Ntrainingcustomermessenger_Wait_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0103_Netlify_Airtable_Automate_Triggered.json",
      "workflow_name": "Netlifytrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0104_Netlify_Webhook_Automate_Webhook.json",
      "workflow_name": "0104_Netlify_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0105_Netlify_Slack_Automate_Triggered.json",
      "workflow_name": "Netlifytrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0193_Nocodb_Telegram_Create_Webhook.json",
      "workflow_name": "0193_Nocodb_Telegram_Create_Webhook",
      "complexity": {
        "node_count": 18,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0061_Noop_GitHub_Automate_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0083_Noop_HTTP_Automation_Webhook.json",
      "workflow_name": "Plex Automatic Throttler",
      "complexity": {
        "node_count": 21,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 78
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 25,
      "overall_score": 58.9
    },
    {
      "filename": "0089_Noop_Telegram_Automate_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0094_Noop_Gmail_Create_Triggered.json",
      "workflow_name": "Hubspot Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0096_Noop_GitHub_Automate_Triggered.json",
      "workflow_name": "Automate assigning GitHub issues",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0108_Noop_GitHub_Create_Triggered.json",
      "workflow_name": "Githubtrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0172_Noop_GoogleSheets_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0174_Noop_Emailsend_Automation_Scheduled.json",
      "workflow_name": "Activity Encouragement",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0209_Noop_Kafka_Send_Triggered.json",
      "workflow_name": "Receive messages from a topic and send an SMS",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0212_Noop_Cratedb_Automation_Triggered.json",
      "workflow_name": "Smart Factory Use Case",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0291_Noop_Rabbitmq_Send_Triggered.json",
      "workflow_name": "Receive messages from a queue via RabbitMQ and send an SMS",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0327_Noop_Slack_Send_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0416_Noop_HubSpot_Create_Webhook.json",
      "workflow_name": "Noop Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0610_Noop_Twilio_Automate_Scheduled.json",
      "workflow_name": "Congratulations Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0748_Noop_Telegram_Automation_Scheduled.json",
      "workflow_name": "RSS to Telegram",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0809_Noop_Slack_Send_Scheduled.json",
      "workflow_name": "Check To Do on Notion and send message on Slack",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0929_Noop_Extractfromfile_Automation.json",
      "workflow_name": "OpenAI e-mail classification - application",
      "complexity": {
        "node_count": 23,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1091_Noop_Trello_Import_Triggered.json",
      "workflow_name": "Get Product Feedback",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1130_Noop_Twilio_Send_Scheduled.json",
      "workflow_name": "Get the price of BTC in EUR and send an SMS when the price is larger than EUR 9000",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1150_Noop_Executecommand_Automation_Scheduled.json",
      "workflow_name": "Execute a command that gives the hard disk memory used on the host machine",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1442_Noop_Stickynote_Automation_Triggered.json",
      "workflow_name": "Extract personal data with a self-hosted LLM Mistral NeMo",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1486_Noop_Stickynote_Automation_Triggered.json",
      "workflow_name": "Extract personal data with a self-hosted LLM Mistral NeMo",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1838_Noop_Stickynote_Automation_Triggered.json",
      "workflow_name": "Dynamically switch between LLMs Template",
      "complexity": {
        "node_count": 31,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1892_Noop_Mautic_Automation_Webhook.json",
      "workflow_name": "Wordpress Form to Mautic",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.9166666666666666,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0141_Notion_Webhook_Create_Webhook.json",
      "workflow_name": "0141_Notion_Webhook_Create_Webhook",
      "complexity": {
        "node_count": 12,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0142_Notion_Webhook_Create_Webhook.json",
      "workflow_name": "0142_Notion_Webhook_Create_Webhook",
      "complexity": {
        "node_count": 23,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.2272727272727273,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 35,
      "overall_score": 66.5
    },
    {
      "filename": "0272_Notion_GoogleDrive_Create_Triggered.json",
      "workflow_name": "Googledrivetrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0977_Odoo_Code_Import_Scheduled.json",
      "workflow_name": "Import Odoo Product Images from Google Drive",
      "complexity": {
        "node_count": 34,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.08,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1929_Odoo_Schedule_Automate_Scheduled.json",
      "workflow_name": "ERP AI chatbot for Odoo sales module",
      "complexity": {
        "node_count": 27,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0187_Onfleet_GoogleDrive_Create_Triggered.json",
      "workflow_name": "Create an Onfleet task when a file in Google Drive is updated",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0248_Openai_Telegram_Automate_Triggered.json",
      "workflow_name": "Telegram AI-bot",
      "complexity": {
        "node_count": 29,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0334_Openai_Form_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0464_Openai_Form_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0785_Openai_Twitter_Create.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1177_Openai_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Qualify new leads in Google Sheets via OpenAI's GPT-4",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1256_Openai_Form_Automation_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1618_Openai_GoogleSheets_Create_Triggered.json",
      "workflow_name": "Qualify new leads in Google Sheets via OpenAI's GPT-4",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1685_Openai_Telegram_Automate_Triggered.json",
      "workflow_name": "Telegram AI-bot",
      "complexity": {
        "node_count": 29,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0006_Openweathermap_Cron_Automate_Scheduled.json",
      "workflow_name": "Plivo Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0065_Openweathermap_Line_Update_Scheduled.json",
      "workflow_name": "Send daily weather updates via a message in Line",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0072_Openweathermap_Cron_Update_Scheduled.json",
      "workflow_name": "Send daily weather updates via a message using the Gotify node",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0161_Openweathermap_Spontit_Update_Scheduled.json",
      "workflow_name": "Send daily weather updates via a push notification using Spontit",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0196_Openweathermap_Webhook_Automation_Webhook.json",
      "workflow_name": "Receive the weather information of any city",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "0751_Openweathermap_Telegram_Automate_Triggered.json",
      "workflow_name": "Telegram Weather Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1101_Openweathermap_Twilio_Automate_Scheduled.json",
      "workflow_name": "Creating your first workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1118_Openweathermap_Webhook_Automate_Webhook.json",
      "workflow_name": "1118_Openweathermap_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 3,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1119_Openweathermap_Twilio_Automate_Webhook.json",
      "workflow_name": "1119_Openweathermap_Twilio_Automate_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "1156_Openweathermap_Cron_Update_Scheduled.json",
      "workflow_name": "Send daily weather updates via a push notification using the Pushcut node",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1163_Openweathermap_Cron_Update_Scheduled.json",
      "workflow_name": "Send daily weather updates to a phone number using the Vonage node",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1195_Openweathermap_Pushover_Update_Scheduled.json",
      "workflow_name": "Send daily weather updates via a push notification",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1222_Openweathermap_Webhook_Create_Webhook.json",
      "workflow_name": "1222_Openweathermap_Webhook_Create_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0965_Paypal_Update_Triggered.json",
      "workflow_name": "Receive updates when a billing plan is activated in PayPal",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0071_Pipedrive_Update_Triggered.json",
      "workflow_name": "Receive updates for all changes in Pipedrive",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0249_Pipedrive_Stickynote_Create_Webhook.json",
      "workflow_name": "0249_Pipedrive_Stickynote_Create_Webhook",
      "complexity": {
        "node_count": 11,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.2857142857142858,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0251_Pipedrive_Spreadsheetfile_Create_Triggered.json",
      "workflow_name": "Googledrivetrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0263_Postgres_Code_Automation_Webhook.json",
      "workflow_name": "Auto WordPress Blog Generator (GPT + Postgres + WP Media)",
      "complexity": {
        "node_count": 77,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.065217391304348,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0460_Postgres_Filter_Import_Scheduled.json",
      "workflow_name": "Postgres Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0666_Postgres_Webhook_Create_Webhook.json",
      "workflow_name": "Openai Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.8928571428571429,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1108_Postgres_Googlecloudnaturallanguage_Automation_Scheduled.json",
      "workflow_name": "ETL pipeline",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1144_Postgres_Code_Automation_Triggered.json",
      "workflow_name": "SHEETS RAG",
      "complexity": {
        "node_count": 31,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 6,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 85
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 87.0
    },
    {
      "filename": "1245_Postgres_Extractfromfile_Automation_Triggered.json",
      "workflow_name": "Translate questions about e-mails into SQL queries and run them",
      "complexity": {
        "node_count": 33,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1249_Postgres_Webhook_Automation_Webhook.json",
      "workflow_name": "Openai Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.8928571428571429,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1421_Postgres_Googlecloudnaturallanguage_Automation_Scheduled.json",
      "workflow_name": "ETL pipeline",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1752_Postgres_Wordpress_Automation_Webhook.json",
      "workflow_name": "RAG & GenAI App With WordPress Content",
      "complexity": {
        "node_count": 80,
        "connection_count": 48,
        "max_depth": 1,
        "branching_factor": 1.0357142857142858,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 24,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 5,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 85
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 73.5
    },
    {
      "filename": "1788_Postgres_Code_Automation_Webhook.json",
      "workflow_name": "Youtube Searcher",
      "complexity": {
        "node_count": 32,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 0.9583333333333334,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 6,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 85
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 87.0
    },
    {
      "filename": "1942_Postgres_Wordpress_Automation_Webhook.json",
      "workflow_name": "RAG & GenAI App With WordPress Content",
      "complexity": {
        "node_count": 80,
        "connection_count": 48,
        "max_depth": 1,
        "branching_factor": 1.0357142857142858,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 24,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 5,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 85
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 73.5
    },
    {
      "filename": "2014_Postgres_Webhook_Automation_Webhook.json",
      "workflow_name": "Suspicious_login_detection",
      "complexity": {
        "node_count": 85,
        "connection_count": 34,
        "max_depth": 1,
        "branching_factor": 1.0405405405405406,
        "cyclomatic_complexity": 9,
        "node_type_diversity": 15,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0404_Postgrestool_Stickynote_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0656_Postgrestool_Stickynote_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1251_Postgrestool_Stickynote_Automation_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1377_Postgrestool_Stickynote_Automation_Triggered.json",
      "workflow_name": "Chat with Postgresql Database",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1848_Postgrestool_Stickynote_Automation_Triggered.json",
      "workflow_name": "Chat with Postgresql Database",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1217_Posthog_Webhook_Automate_Webhook.json",
      "workflow_name": "1217_Posthog_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 75.0
    },
    {
      "filename": "0968_Postmark_Update_Triggered.json",
      "workflow_name": "Receive updates when an email is bounced or opened",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 0.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0009_Process.json",
      "workflow_name": "Function Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0186_Quickbooks_Onfleet_Create_Triggered.json",
      "workflow_name": "Create a QuickBooks invoice on a new Onfleet Task creation",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1208_Quickbooks_Automate.json",
      "workflow_name": "Quickbooks Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1209_Raindrop_Automate.json",
      "workflow_name": "Raindrop Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0118_Readbinaryfile_Onfleet_Create.json",
      "workflow_name": "Create Onfleet tasks from Spreadsheets",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0220_Readbinaryfile_Manual_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0351_Readbinaryfile_Manual_Automate_Triggered.json",
      "workflow_name": "My workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0352_Readbinaryfile_Spreadsheetfile_Create.json",
      "workflow_name": "Readbinaryfile Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0749_Readbinaryfile_Movebinarydata_Send_Scheduled.json",
      "workflow_name": "SIGNL4 Alert",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0171_Readbinaryfiles_Code_Automation_Webhook.json",
      "workflow_name": "OpenAI-model-examples",
      "complexity": {
        "node_count": 54,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.1515151515151516,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1583_Readbinaryfiles_Code_Automation_Webhook.json",
      "workflow_name": "OpenAI-model-examples",
      "complexity": {
        "node_count": 54,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.1515151515151516,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2036_Readbinaryfiles_Filter_Import_Triggered.json",
      "workflow_name": "Import multiple CSV to GoogleSheet",
      "complexity": {
        "node_count": 18,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0387_Redis_Code_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 46,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0606060606060606,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0497_Redis_Schedule_Import_Scheduled.json",
      "workflow_name": "Executeworkflow Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1933_Redis_Code_Create_Webhook.json",
      "workflow_name": "New Ticket Alerts to Teams",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1854_Removeduplicates_Converttofile_Automation_Webhook.json",
      "workflow_name": "Query List of Sign-in IPs",
      "complexity": {
        "node_count": 44,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0277777777777777,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0121_Respondtowebhook_Webhook_Automate_Webhook.json",
      "workflow_name": "0121_Respondtowebhook_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 2,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0163_Respondtowebhook_Spreadsheetfile_Automate_Webhook.json",
      "workflow_name": "0163_Respondtowebhook_Spreadsheetfile_Automate_Webhook",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0194_Respondtowebhook_Webhook_Import_Webhook.json",
      "workflow_name": "0194_Respondtowebhook_Webhook_Import_Webhook",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 67.0
    },
    {
      "filename": "0232_Respondtowebhook_Stickynote_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0576_Respondtowebhook_Form_Automation_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0586_Respondtowebhook_Stickynote_Automate_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0590_Respondtowebhook_Stickynote_Send_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 66,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0597_Respondtowebhook_Stickynote_Automate_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0811_Respondtowebhook_Webhook_Automate_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0900_Respondtowebhook_Stickynote_Automate_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1266_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "InstaTest",
      "complexity": {
        "node_count": 29,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1311_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "chrome extension backend with AI",
      "complexity": {
        "node_count": 23,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1387_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "Image Generation API",
      "complexity": {
        "node_count": 19,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1455_Respondtowebhook_Form_Automation_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1466_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "TEMPLATE - Multi Methods API Endpoint",
      "complexity": {
        "node_count": 65,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 42,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1474_Respondtowebhook_Stickynote_Create_Webhook.json",
      "workflow_name": "Generate audio from text using OpenAI - text-to-speech Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1476_Respondtowebhook_Stickynote_Import_Webhook.json",
      "workflow_name": "Get Airtable data in Obsidian Notes",
      "complexity": {
        "node_count": 25,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1577_Respondtowebhook_Stickynote_Create_Webhook.json",
      "workflow_name": "Generate audio from text using OpenAI - text-to-speech Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1608_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "chrome extension backend with AI",
      "complexity": {
        "node_count": 23,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1662_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1692_Respondtowebhook_Stickynote_Automate_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1693_Respondtowebhook_Stickynote_Automate_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1803_Respondtowebhook_Stickynote_Import_Webhook.json",
      "workflow_name": "Get Airtable data in Obsidian Notes",
      "complexity": {
        "node_count": 25,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1953_Respondtowebhook_Stickynote_Monitor_Webhook.json",
      "workflow_name": "Track Working Time and Pauses",
      "complexity": {
        "node_count": 47,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 90.0
    },
    {
      "filename": "1967_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "InstaTest",
      "complexity": {
        "node_count": 29,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1997_Respondtowebhook_Stickynote_Automation_Webhook.json",
      "workflow_name": "Image Generation API",
      "complexity": {
        "node_count": 19,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0188_Rssfeedread_Telegram_Create_Scheduled.json",
      "workflow_name": "Rssfeedread Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1176_Rssfeedread_Slack_Automation_Scheduled.json",
      "workflow_name": "Post RSS feed items from yesterday to Slack",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1180_Rssfeedread_Htmlextract_Create_Scheduled.json",
      "workflow_name": "Get only new RSS with Photo",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 0.8,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1186_Rssfeedread_Telegram_Create_Triggered.json",
      "workflow_name": "Crypto News & Sentiment",
      "complexity": {
        "node_count": 39,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.3636363636363635,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 9,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1536_Rssfeedread_Extractfromfile_Automation_Webhook.json",
      "workflow_name": "YouTube Videos with AI Summaries on Discord",
      "complexity": {
        "node_count": 28,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1659_Rssfeedread_Extractfromfile_Automation_Webhook.json",
      "workflow_name": "YouTube Videos with AI Summaries on Discord",
      "complexity": {
        "node_count": 28,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0382_Schedule_Spotify_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0402_Schedule_Filter_Update_Scheduled.json",
      "workflow_name": "Filter Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0412_Schedule_HTTP_Update_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0417_Schedule_Gmail_Send_Scheduled.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0422_Schedule_HTTP_Send_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0432_Schedule_Filter_Create_Scheduled.json",
      "workflow_name": "Hubspot Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0443_Schedule_Filter_Automation_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0448_Schedule_HTTP_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0474_Schedule_GoogleSheets_Automation_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0478_Schedule_HTTP_Create_Webhook.json",
      "workflow_name": "Googlesheets Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1176470588235294,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0486_Schedule_Telegram_Create_Scheduled.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.1538461538461537,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0487_Schedule_Telegram_Create_Scheduled.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0526_Schedule_Slack_Create_Scheduled.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0527_Schedule_Manual_Update_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 1,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0529_Schedule_Slack_Update_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.1363636363636365,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0539_Schedule_Twilio_Create_Webhook.json",
      "workflow_name": "Twiliotrigger Workflow",
      "complexity": {
        "node_count": 80,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 39,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "0563_Schedule_Filter_Update_Scheduled.json",
      "workflow_name": "Todoist Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0631_Schedule_Wordpress_Automate_Scheduled.json",
      "workflow_name": "Zoom Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0711_Schedule_Slack_Create_Scheduled.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1538461538461537,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0720_Schedule_Filter_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9375,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0729_Schedule_Stickynote_Send_Scheduled.json",
      "workflow_name": "Emailsend Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.1818181818181819,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0758_Schedule_Manual_Monitor_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0795_Schedule_Mailchimp_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.75,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0817_Schedule_Removeduplicates_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0907_Schedule_Removeduplicates_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0911_Schedule_Removeduplicates_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0912_Schedule_Removeduplicates_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1270_Schedule_Manual_Automation_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 1,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1275_Schedule_Telegram_Automation_Scheduled.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1276_Schedule_Telegram_Automation_Scheduled.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.1538461538461537,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1345_Schedule_Discord_Automation_Scheduled.json",
      "workflow_name": "YouTube to X Post- AlexK1919",
      "complexity": {
        "node_count": 39,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 0.8571428571428571,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1399_Schedule_Slack_Automation_Scheduled.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1406_Schedule_Slack_Automation_Scheduled.json",
      "workflow_name": "Daily meetings summarization with Gemini AI",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1418_Schedule_Nocodb_Automation_Scheduled.json",
      "workflow_name": "Noco Kanban Board with AI Prioritization",
      "complexity": {
        "node_count": 54,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1492_Schedule_Twilio_Automation_Webhook.json",
      "workflow_name": "Twiliotrigger Workflow",
      "complexity": {
        "node_count": 80,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 39,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1524_Schedule_Manual_Automation_Scheduled.json",
      "workflow_name": "Retry Execution Hourly",
      "complexity": {
        "node_count": 30,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 0.9565217391304348,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1574_Schedule_Youtube_Create_Scheduled.json",
      "workflow_name": "Post New YouTube Videos to X",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1602_Schedule_Youtube_Create_Scheduled.json",
      "workflow_name": "Post New YouTube Videos to X",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1607_Schedule_Notion_Sync_Scheduled.json",
      "workflow_name": "Sync Todoist tasks to Notion",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1614_Schedule_HTTP_Send_Webhook.json",
      "workflow_name": "SSL Expiry Alert",
      "complexity": {
        "node_count": 25,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1629_Schedule_Stickynote_Automation_Scheduled.json",
      "workflow_name": "Reschedule overdue Asana tasks and clean up completed tasks",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1697_Schedule_HTTP_Monitor_Scheduled.json",
      "workflow_name": "Amazon Product Price Tracker",
      "complexity": {
        "node_count": 35,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.967741935483871,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1718_Schedule_Filter_Automation_Scheduled.json",
      "workflow_name": "Todoist Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1738_Schedule_Comparedatasets_Automation_Scheduled.json",
      "workflow_name": "GoogleSheets MySQL Integration",
      "complexity": {
        "node_count": 22,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1750_Schedule_Extractfromfile_Import_Scheduled.json",
      "workflow_name": "Vector DB Loader from Google Drive",
      "complexity": {
        "node_count": 27,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 0.9523809523809523,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1820_Schedule_N8N_Automate_Scheduled.json",
      "workflow_name": "\ud83d\udcbb Schedule workflow activity time",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.6,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1859_Schedule_Slack_Monitor_Scheduled.json",
      "workflow_name": "Monitor ProductHunt",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1867_Schedule_Filter_Sync_Scheduled.json",
      "workflow_name": "Spotify Sync Liked Songs to Playlist",
      "complexity": {
        "node_count": 45,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 8,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 50,
      "overall_score": 71.0
    },
    {
      "filename": "1891_Schedule_Slack_Automation_Scheduled.json",
      "workflow_name": "Daily meetings summarization with Gemini AI",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1932_Schedule_Telegram_Send_Scheduled.json",
      "workflow_name": "Automatically Send Daily Meeting List to Telegram",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1952_Schedule_HTTP_Monitor_Webhook.json",
      "workflow_name": "Web Server Monitor.",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2045_Schedule_HTTP_Create_Scheduled.json",
      "workflow_name": "Html Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0320_Send_Triggered.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0804_Send_Triggered.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1409_Send.json",
      "workflow_name": "Unnamed Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 1,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0085_Shopify_Twitter_Create_Triggered.json",
      "workflow_name": "Twitter Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 2.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0152_Shopify_Onfleet_Create_Triggered.json",
      "workflow_name": "Creating an Onfleet Task for a new Shopify Fulfillment",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0185_Shopify_Onfleet_Automation_Triggered.json",
      "workflow_name": "Updating Shopify tags on Onfleet events",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0265_Shopify_HubSpot_Create_Triggered.json",
      "workflow_name": "Shopifytrigger Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0268_Shopify_Zendesk_Create_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0269_Shopify_Zendesk_Create_Triggered.json",
      "workflow_name": "Shopifytrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0278_Shopify_Mautic_Create_Triggered.json",
      "workflow_name": "Shopifytrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0961_Shopify_Filter_Create_Triggered.json",
      "workflow_name": "Sync New Shopify Products to Odoo Product",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1015_Shopify_Automate_Triggered.json",
      "workflow_name": "Shopifytrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1786_Shopify_Filter_Create_Triggered.json",
      "workflow_name": "Sync New Shopify Customers to Odoo Contacts",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0055_Signl4_Interval_Create_Scheduled.json",
      "workflow_name": "0055_Signl4_Interval_Create_Scheduled",
      "complexity": {
        "node_count": 13,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0008_Slack_Stripe_Create_Triggered.json",
      "workflow_name": "On new Stripe Invoice Payment update Hubspot and notify the team in Slack",
      "complexity": {
        "node_count": 13,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0109_Slack_Cron_Automate_Scheduled.json",
      "workflow_name": "Googlecalendar Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0124_Slack_Typeform_Create_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0176_Slack_Onfleet_Send_Triggered.json",
      "workflow_name": "Onfleet Driver signup message in Slack",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0423_Slack_Hunter_Send_Webhook.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0552_Slack_Stickynote_Send_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0761_Slack_Comparedatasets_Create_Triggered.json",
      "workflow_name": "Noop Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0940_Slack_Manual_Automation_Scheduled.json",
      "workflow_name": "Orlen",
      "complexity": {
        "node_count": 15,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1063_Slack_Graphql_Automation_Webhook.json",
      "workflow_name": "Slack-GitHub User Info",
      "complexity": {
        "node_count": 4,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1082_Slack_Readbinaryfile_Create.json",
      "workflow_name": "Emailreadimap Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1176470588235294,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1172_Slack_HubSpot_Send_Triggered.json",
      "workflow_name": "Check for valid Hubspot contact email",
      "complexity": {
        "node_count": 5,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1191_Slack_Typeform_Automate_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1194_Slack_Emailreadimap_Create.json",
      "workflow_name": "New invoice email notification",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1318_Slack_Stickynote_Automation_Triggered.json",
      "workflow_name": "Ask a human",
      "complexity": {
        "node_count": 22,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1396_Slack_Stickynote_Automate_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1592_Slack_Stickynote_Automate_Webhook.json",
      "workflow_name": "My workflow 6",
      "complexity": {
        "node_count": 24,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1643_Slack_Manual_Automate_Webhook.json",
      "workflow_name": "Slack AI Chatbot with RAG for company staff",
      "complexity": {
        "node_count": 44,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0416666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1663_Slack_Stickynote_Automate_Webhook.json",
      "workflow_name": "My workflow 6",
      "complexity": {
        "node_count": 24,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0070_Splitinbatches_Notion_Export_Scheduled.json",
      "workflow_name": "Archive empty pages in Notion Database",
      "complexity": {
        "node_count": 16,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0318_Splitout_Limit_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0434782608695652,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0322_Splitout_Code_Send_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0339_Splitout_Code_Update_Webhook.json",
      "workflow_name": "Printify Automation - Update Title and Description - AlexK1919",
      "complexity": {
        "node_count": 59,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 0.9787234042553191,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 28,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0386_Splitout_Filter_Update_Scheduled.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0418_Splitout_Filter_Export_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0421_Splitout_Schedule_Import_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 45,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0428_Splitout_GoogleCalendar_Send_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0429_Splitout_GoogleCalendar_Send_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.03125,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0433_Splitout_Webhook_Update_Webhook.json",
      "workflow_name": "Respondtowebhook Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0434_Splitout_Webhook_Automation_Webhook.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0435_Splitout_Filter_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 44,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.03125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0442_Splitout_Schedule_Send_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0445_Splitout_Code_Import_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.2222222222222223,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0449_Splitout_Webhook_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0452_Splitout_Webhook_Create_Webhook.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0457_Splitout_Webhook_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 64,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0227272727272727,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0459_Splitout_Webhook_Update_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0468_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 57,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0357142857142858,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0500_Splitout_Schedule_Send_Scheduled.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0503_Splitout_Code_Create_Scheduled.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 10,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 79.0
    },
    {
      "filename": "0512_Splitout_Code_Update_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0520_Splitout_Filter_Create_Webhook.json",
      "workflow_name": "Toolworkflow Workflow",
      "complexity": {
        "node_count": 56,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.0294117647058822,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0528_Splitout_GoogleCalendar_Create_Scheduled.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 49,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0530_Splitout_GoogleCalendar_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 51,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0532_Splitout_Elasticsearch_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 46,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0554_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Embeddingsopenai Workflow",
      "complexity": {
        "node_count": 72,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0555_Splitout_Code_Export_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0556_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 62,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0560_Splitout_Filter_Import_Webhook.json",
      "workflow_name": "Spotify Workflow",
      "complexity": {
        "node_count": 67,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 13,
        "node_type_diversity": 11,
        "complexity_score": 70
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 79.4
    },
    {
      "filename": "0562_Splitout_Filter_Create_Webhook.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0570_Splitout_Datetime_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 106,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.010752688172043,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 12,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 72,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 12 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 72.0
    },
    {
      "filename": "0579_Splitout_Editimage_Update_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0587_Splitout_Filter_Send_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0607_Splitout_Aggregate_Automate_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0608_Splitout_Code_Import_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0613_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 53,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0740740740740742,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0614_Splitout_Manual_Import_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0618_Splitout_Code_Create_Scheduled.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 52,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.2058823529411764,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0625_Splitout_Code_Create_Triggered.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 36,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0634_Splitout_Manual_Export_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0638_Splitout_Redis_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 58,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0643_Splitout_Snowflake_Import_Scheduled.json",
      "workflow_name": "Import Productboard Notes, Companies and Features into Snowflake",
      "complexity": {
        "node_count": 59,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 3,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 83.0
    },
    {
      "filename": "0645_Splitout_Code_Sync_Webhook.json",
      "workflow_name": "Linear Project Status and End Date to Productboard feature Sync",
      "complexity": {
        "node_count": 41,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.121212121212121,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0649_Splitout_GoogleCalendar_Create_Webhook.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 77,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 1.0384615384615385,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 19,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0650_Splitout_Webhook_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 83,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 49,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0652_Splitout_Schedule_Create_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 0.9411764705882353,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0654_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Airtable Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0657_Splitout_Schedule_Update_Webhook.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 44,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0659_Splitout_Schedule_Create_Scheduled.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0663_Splitout_Schedule_Update_Scheduled.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0664_Splitout_Limit_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 47,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0344827586206897,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0680_Splitout_HTTP_Send_Webhook.json",
      "workflow_name": "Lmchatgooglegemini Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0698_Splitout_Code_Automation_Triggered.json",
      "workflow_name": "Googledrivetrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0699_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 102,
        "connection_count": 42,
        "max_depth": 1,
        "branching_factor": 0.9761904761904762,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 7,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 52,
        "caching_opportunities": 0,
        "performance_score": 86
      },
      "optimization_opportunities": [
        "Consider parallelizing 7 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.8
    },
    {
      "filename": "0712_Splitout_Code_Update_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 46,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.025,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0714_Splitout_Zendesk_Update_Triggered.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 0.8947368421052632,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0724_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Notiontrigger Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0526315789473684,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0725_Splitout_Code_Update_Triggered.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.3,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0730_Splitout_Noop_Send_Triggered.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0731_Splitout_Limit_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 46,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9696969696969697,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0740_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "YogiAI",
      "complexity": {
        "node_count": 53,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 0.9666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0759_Splitout_Comparedatasets_Create_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.2380952380952381,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0760_Splitout_Code_Send_Webhook.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.103448275862069,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0772_Splitout_Filter_Process_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 86,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.028169014084507,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 53,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "0774_Splitout_Code_Automate_Webhook.json",
      "workflow_name": "My workflow 2",
      "complexity": {
        "node_count": 81,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.044776119402985,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 48,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 73.2
    },
    {
      "filename": "0780_Splitout_Filter_Process_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 92,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "0790_Splitout_Schedule_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.037037037037037,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 6,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0792_Splitout_Code_Monitor_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0793_Splitout_Code_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0797_Splitout_Code_Monitor_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.95,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0798_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0799_Splitout_Executecommand_Automate_Scheduled.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0810_Splitout_Schedule_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 0.9523809523809523,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0816_Splitout_Code_Automation_Scheduled.json",
      "workflow_name": "Textclassifier Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 0.90625,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0819_Splitout_Schedule_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 45,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 0.9629629629629629,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0832_Splitout_Limit_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 81,
        "connection_count": 36,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "0833_Splitout_Schedule_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 45,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.03125,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 17,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0840_Splitout_HTTP_Send_Webhook.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0846_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0854_Splitout_Filter_Create_Scheduled.json",
      "workflow_name": "Filter Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0859_Splitout_Code_Create_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0860_Splitout_Limit_Send_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0877_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 93,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 7,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 44,
        "caching_opportunities": 0,
        "performance_score": 86
      },
      "optimization_opportunities": [
        "Consider parallelizing 7 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 81.8
    },
    {
      "filename": "0883_Splitout_Code_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0434782608695652,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0894_Splitout_Redis_Create_Triggered.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 52,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0895_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 58,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0899_Splitout_GoogleCalendar_Update_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0902_Splitout_Code_Create_Scheduled.json",
      "workflow_name": "Googlesheetstrigger Workflow",
      "complexity": {
        "node_count": 64,
        "connection_count": 36,
        "max_depth": 1,
        "branching_factor": 1.0196078431372548,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0913_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Lmchatopenrouter Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9411764705882353,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0915_Splitout_Code_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 79,
        "connection_count": 42,
        "max_depth": 1,
        "branching_factor": 0.9848484848484849,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 15,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 28,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0919_Splitout_Extractfromfile_Create_Webhook.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 53,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0921_Splitout_Code_Send_Scheduled.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 60,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 0.9574468085106383,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0923_Splitout_Code_Send_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0958_Splitout_Webhook_Automation_Webhook.json",
      "workflow_name": "LLM Chaining examples",
      "complexity": {
        "node_count": 61,
        "connection_count": 30,
        "max_depth": 1,
        "branching_factor": 1.0789473684210527,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1058_Splitout_Code_Import_Triggered.json",
      "workflow_name": "Get Comments from Facebook Page",
      "complexity": {
        "node_count": 28,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 2,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1059_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Make OpenAI Citation for File Retrieval RAG",
      "complexity": {
        "node_count": 37,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1143_Splitout_Filter_Automation_Webhook.json",
      "workflow_name": "Read sitemap and filter URLs",
      "complexity": {
        "node_count": 17,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1146_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "LinkedIn Leads Scraping & Enrichment (Main)",
      "complexity": {
        "node_count": 141,
        "connection_count": 83,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 70,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1147_Splitout_GitHub_Automation_Webhook.json",
      "workflow_name": "Restore your credentials from GitHub",
      "complexity": {
        "node_count": 23,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1169_Splitout_Code_Import_Webhook.json",
      "workflow_name": "Workflow Importer",
      "complexity": {
        "node_count": 72,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.065217391304348,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1243_Splitout_Limit_Automation_Webhook.json",
      "workflow_name": "Agent Milvus tool",
      "complexity": {
        "node_count": 41,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1258_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 102,
        "connection_count": 42,
        "max_depth": 1,
        "branching_factor": 0.9761904761904762,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 7,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 52,
        "caching_opportunities": 0,
        "performance_score": 86
      },
      "optimization_opportunities": [
        "Consider parallelizing 7 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.8
    },
    {
      "filename": "1260_Splitout_Manual_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1283_Splitout_Webhook_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 64,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0227272727272727,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1297_Splitout_GoogleCalendar_Automation_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 51,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1306_Splitout_Schedule_Automation_Webhook.json",
      "workflow_name": "Hugging Face to Notion",
      "complexity": {
        "node_count": 30,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1323_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Auto-Tag Blog Posts in WordPress with AI",
      "complexity": {
        "node_count": 57,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 0.9743589743589743,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1325_Splitout_Limit_Automate_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 47,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0344827586206897,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1329_Splitout_Editimage_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1332_Splitout_Zendesk_Send_Triggered.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 0.8947368421052632,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1333_Splitout_GoogleCalendar_Automate_Webhook.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 77,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 1.0384615384615385,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 19,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1343_Splitout_Editimage_Automation_Webhook.json",
      "workflow_name": "Remove Advanced Background from Google Drive Images",
      "complexity": {
        "node_count": 37,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1344_Splitout_Filter_Automation_Webhook.json",
      "workflow_name": "Toolworkflow Workflow",
      "complexity": {
        "node_count": 56,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.0294117647058822,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1352_Splitout_Filter_Automate_Triggered.json",
      "workflow_name": "BambooHR AI-Powered Company Policies and Benefits Chatbot",
      "complexity": {
        "node_count": 63,
        "connection_count": 43,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 24,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1355_Splitout_Webhook_Automate_Webhook.json",
      "workflow_name": "Bitrix24 Open Chanel RAG Chatbot Application Workflow example with Webhook Integration",
      "complexity": {
        "node_count": 106,
        "connection_count": 41,
        "max_depth": 1,
        "branching_factor": 1.032258064516129,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 67,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 73.2
    },
    {
      "filename": "1363_Splitout_GitHub_Create_Webhook.json",
      "workflow_name": "Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI",
      "complexity": {
        "node_count": 59,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0465116279069768,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 20,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1381_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "1381_Splitout_Code_Automation_Webhook",
      "complexity": {
        "node_count": 14,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 64.0
    },
    {
      "filename": "1388_Splitout_Redis_Automation_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 58,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1398_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1403_Splitout_Datetime_Send_Webhook.json",
      "workflow_name": "Send Emails from Obsidian",
      "complexity": {
        "node_count": 43,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1407_Splitout_Schedule_Automation_Scheduled.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1408_Splitout_Code_Monitor_Triggered.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.3,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1412_Splitout_Code_Automation_Scheduled.json",
      "workflow_name": "Scrape Trustpilot Reviews to Google Sheets",
      "complexity": {
        "node_count": 26,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1425_Splitout_Elasticsearch_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 46,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1437_Splitout_Code_Automation_Triggered.json",
      "workflow_name": "AI Logo Sheet Extractor to Airtable",
      "complexity": {
        "node_count": 50,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.1612903225806452,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1443_Splitout_Extractfromfile_Automation_Triggered.json",
      "workflow_name": "Extract spend details (template)",
      "complexity": {
        "node_count": 34,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1451_Splitout_Schedule_Automation_Webhook.json",
      "workflow_name": "Hugging Face  to Notion",
      "complexity": {
        "node_count": 30,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1454_Splitout_Schedule_Import_Webhook.json",
      "workflow_name": "Fetch Squarespace Blog & Event Collections to Google Sheets  ",
      "complexity": {
        "node_count": 19,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1459_Splitout_Converttofile_Create_Webhook.json",
      "workflow_name": "New OpenAI Image Generation",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1463_Splitout_Code_Automate_Webhook.json",
      "workflow_name": "\u26a1\ud83d\udcfd\ufe0f Ultimate AI-Powered Chatbot for YouTube Summarization & Analysis",
      "complexity": {
        "node_count": 42,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1468_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Telegram channel to Readeck & Hoarder",
      "complexity": {
        "node_count": 38,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.96875,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1471_Splitout_Aggregate_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1489_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "HN Who is Hiring Scrape",
      "complexity": {
        "node_count": 44,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1495_Splitout_Limit_Import_Webhook.json",
      "workflow_name": "Insert and retrieve documents",
      "complexity": {
        "node_count": 45,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1499_Splitout_Filter_Monitor_Triggered.json",
      "workflow_name": "n8napi-check-workflow-which-model-is-using",
      "complexity": {
        "node_count": 19,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1531_Splitout_Comparedatasets_Sync_Webhook.json",
      "workflow_name": "Entra User to Zammad User Sync",
      "complexity": {
        "node_count": 34,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1542_Splitout_HTTP_Create_Webhook.json",
      "workflow_name": "Lmchatgooglegemini Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1548_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Make OpenAI Citation for File Retrieval RAG",
      "complexity": {
        "node_count": 37,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1556_Splitout_Code_Monitor_Scheduled.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 52,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.2058823529411764,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1559_Splitout_Code_Automate_Webhook.json",
      "workflow_name": "Automate PDF Image Extraction & Analysis with GPT-4o and Google Drive",
      "complexity": {
        "node_count": 26,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9444444444444444,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1560_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "[n8n] - Shopify Orders to D365 Business Central Sales Orders / Sales Invoices",
      "complexity": {
        "node_count": 110,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 12,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 11,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 66,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 11 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 78.5
    },
    {
      "filename": "1564_Splitout_Manual_Create_Webhook.json",
      "workflow_name": "Search LinkedIn companies and add them to Airtable CRM",
      "complexity": {
        "node_count": 33,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 0.96,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1585_Splitout_Code_Update_Webhook.json",
      "workflow_name": "Printify Automation - Update Title and Description - AlexK1919",
      "complexity": {
        "node_count": 59,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 0.9787234042553191,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 28,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1591_Splitout_Code_Automate_Webhook.json",
      "workflow_name": "n8n Subworkflow Dependency Graph & Auto-Tagging",
      "complexity": {
        "node_count": 81,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0158730158730158,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1603_Splitout_Manual_Automation_Webhook.json",
      "workflow_name": "Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini",
      "complexity": {
        "node_count": 49,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1625_Splitout_Schedule_Monitor_Webhook.json",
      "workflow_name": "n8n Community Topic Tracker by Keyword",
      "complexity": {
        "node_count": 29,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1627_Splitout_Code_Automation_Triggered.json",
      "workflow_name": "RAG:Context-Aware Chunking | Google Drive to Pinecone via OpenRouter & Gemini",
      "complexity": {
        "node_count": 25,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1637_Splitout_Code_Automation_Triggered.json",
      "workflow_name": "Googledrivetrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1642_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Find Top Keywords",
      "complexity": {
        "node_count": 88,
        "connection_count": 36,
        "max_depth": 1,
        "branching_factor": 0.9875,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 48,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "1647_Splitout_Limit_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0454545454545454,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1648_Splitout_Converttofile_Send_Webhook.json",
      "workflow_name": "Scrape Books from URL with Dumpling AI, Clean HTML, Save to Sheets, Email as CSV",
      "complexity": {
        "node_count": 24,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1657_Splitout_Schedule_Monitor_Scheduled.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1658_Splitout_Schedule_Monitor_Scheduled.json",
      "workflow_name": "Splitout Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1660_Splitout_HTTP_Create_Webhook.json",
      "workflow_name": "Generate New Keywords with Search Volumes\u2692\ufe0f\u2692\ufe0f\ud83d\udfe2\ud83d\udfe2",
      "complexity": {
        "node_count": 23,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1678_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Embeddingsopenai Workflow",
      "complexity": {
        "node_count": 72,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1721_Splitout_Manual_Automate_Webhook.json",
      "workflow_name": "Automate Etsy Data Mining with Bright Data Scrape & Google Gemini",
      "complexity": {
        "node_count": 46,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1731_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "[2/3] Set up medoids (2 types) for anomaly detection (crops dataset)",
      "complexity": {
        "node_count": 125,
        "connection_count": 35,
        "max_depth": 1,
        "branching_factor": 1.0315789473684212,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 12,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 72,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 12 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1742_Splitout_Nocodb_Automation_Webhook.json",
      "workflow_name": "Simple LinkedIn profile collector",
      "complexity": {
        "node_count": 36,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1748_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Real Estate Market Scanning",
      "complexity": {
        "node_count": 30,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1753_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Write a WordPress post with AI (starting from a few keywords)",
      "complexity": {
        "node_count": 69,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.025,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1757_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Publish Image Post to Bluesky",
      "complexity": {
        "node_count": 44,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1760_Splitout_GitHub_Automate_Webhook.json",
      "workflow_name": "Restore your workflows from GitHub",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1774_Splitout_Manual_Automation_Webhook.json",
      "workflow_name": "Extract Business Leads from Google Maps with Dumpling AI to Google Sheets",
      "complexity": {
        "node_count": 17,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1780_Splitout_Schedule_Automation_Scheduled.json",
      "workflow_name": "Shopify order UTM to Baserow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1783_Splitout_Postgres_Automation_Triggered.json",
      "workflow_name": "Gmail to Vector Embeddings with PGVector and Ollama",
      "complexity": {
        "node_count": 25,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.875,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1784_Splitout_Filter_Automation_Triggered.json",
      "workflow_name": "Dynamic Form with AI",
      "complexity": {
        "node_count": 25,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 0.9,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1787_Splitout_Code_Automate_Webhook.json",
      "workflow_name": "AI T-Shirt Redesign Workflow from any Mockup Image",
      "complexity": {
        "node_count": 26,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.8888888888888888,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1790_Splitout_Summarize_Automation_Triggered.json",
      "workflow_name": "Easily Compare LLMs Using OpenAI and Google Sheets",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1798_Splitout_GitHub_Create_Webhook.json",
      "workflow_name": "Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI",
      "complexity": {
        "node_count": 59,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0465116279069768,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 20,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1824_Splitout_Schedule_Import_Scheduled.json",
      "workflow_name": "Get all orders in Squarespace to Google Sheets",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1830_Splitout_Filter_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1831_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "\ud83c\udfa6\ud83d\ude80 YouTube Video Comment Analysis Agent",
      "complexity": {
        "node_count": 44,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0357142857142858,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1834_Splitout_Code_Automation_Triggered.json",
      "workflow_name": "AI Logo Sheet Extractor to Airtable",
      "complexity": {
        "node_count": 50,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.1612903225806452,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1840_Splitout_Filter_Automate_Triggered.json",
      "workflow_name": "BambooHR AI-Powered Company Policies and Benefits Chatbot",
      "complexity": {
        "node_count": 63,
        "connection_count": 43,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 24,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1880_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "HN Who is Hiring Scrape",
      "complexity": {
        "node_count": 44,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1888_Splitout_Schedule_Automation_Webhook.json",
      "workflow_name": "Linkedin to Airtable",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1889_Splitout_Comparedatasets_Sync_Webhook.json",
      "workflow_name": "Entra Contacts to Zammad User Sync",
      "complexity": {
        "node_count": 25,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.105263157894737,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1898_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Amazon keywords",
      "complexity": {
        "node_count": 29,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1903_Splitout_Googledocs_Automation_Webhook.json",
      "workflow_name": "\ud83e\udd99\ud83d\udc41\ufe0f\ud83d\udc41\ufe0f Find the Best Local Ollama Vision Models by Comparison",
      "complexity": {
        "node_count": 33,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 0.9545454545454546,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1915_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "[2/3] Set up medoids (2 types) for anomaly detection (crops dataset)",
      "complexity": {
        "node_count": 125,
        "connection_count": 35,
        "max_depth": 1,
        "branching_factor": 1.0315789473684212,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 12,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 72,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 12 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1930_Splitout_Code_Automate_Webhook.json",
      "workflow_name": "AI powered SEO Keyword Research Automation - The vibe Marketer",
      "complexity": {
        "node_count": 50,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.2413793103448276,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1934_Splitout_Schedule_Create_Scheduled.json",
      "workflow_name": "Personalized AI Tech Newsletter Using RSS, OpenAI and Gmail",
      "complexity": {
        "node_count": 32,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1935_Splitout_Extractfromfile_Automation_Triggered.json",
      "workflow_name": "Extract spend details (template)",
      "complexity": {
        "node_count": 34,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1937_Splitout_Limit_Automation_Triggered.json",
      "workflow_name": "LinkedIn Profile Finder via Form using Bright Data & GPT-4o-mini",
      "complexity": {
        "node_count": 33,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0384615384615385,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1943_Splitout_Editimage_Automation_Webhook.json",
      "workflow_name": "Remove Advanced Background from Google Drive Images",
      "complexity": {
        "node_count": 37,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1946_Splitout_Webhook_Import_Webhook.json",
      "workflow_name": "Get all scaleway server info copy",
      "complexity": {
        "node_count": 89,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 60,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1970_Splitout_Manual_Sync_Webhook.json",
      "workflow_name": "Sync Youtube Video Urls with Google Sheets",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1980_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "Auto-Tag Blog Posts in WordPress with AI",
      "complexity": {
        "node_count": 57,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 0.9743589743589743,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1983_Splitout_Converttofile_Automation_Webhook.json",
      "workflow_name": "template-demo-chatgpt-image-1-with-drive-and-sheet copy",
      "complexity": {
        "node_count": 31,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1993_Splitout_Code_Automation_Triggered.json",
      "workflow_name": "Translate",
      "complexity": {
        "node_count": 23,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1998_Splitout_Postgres_Sync_Scheduled.json",
      "workflow_name": "Synchronize your Google Sheets with Postgres",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 3,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "2016_Splitout_Noop_Automation_Webhook.json",
      "workflow_name": "YouTube Comment Sentiment Analyzer",
      "complexity": {
        "node_count": 31,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2025_Splitout_Code_Automate_Webhook.json",
      "workflow_name": "Clone n8n Workflows between Instances using n8n API",
      "complexity": {
        "node_count": 34,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2041_Splitout_Manual_Automation_Webhook.json",
      "workflow_name": "Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini",
      "complexity": {
        "node_count": 49,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1084_Sse_Automation_Triggered.json",
      "workflow_name": "Ssetrigger Workflow",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0281_Stickynote_Notion_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0325_Stickynote_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0332_Stickynote_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0368_Stickynote_Webhook_Automate_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0378_Stickynote_Notion_Automate_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0407_Stickynote_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 12,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0573_Stickynote_Notion_Send_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0574_Stickynote_Notion_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0684_Stickynote_Respondtowebhook_Send_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 39,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0689_Stickynote_Gmail_Create_Triggered.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0727_Stickynote_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0755_Stickynote_Send_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0796_Stickynote_Gmail_Create_Triggered.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0873_Stickynote_Postgrestool_Create_Triggered.json",
      "workflow_name": "Postgrestool Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 0.8,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 5,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 75
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.5
    },
    {
      "filename": "0874_Stickynote_Executeworkflow_Create_Triggered.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 50,
      "overall_score": 72.5
    },
    {
      "filename": "0893_Stickynote_Emailreadimap_Create.json",
      "workflow_name": "Hubspot Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0978_Stickynote_GoogleDrive_Automate_Triggered.json",
      "workflow_name": "Automated Image Metadata Tagging (Community Node)",
      "complexity": {
        "node_count": 16,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1104_Stickynote_Create_Triggered.json",
      "workflow_name": "\ud83d\udca5\ud83d\udee0\ufe0fBuild a Web Search Chatbot with GPT-4o and MCP Brave Search",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1141_Stickynote_GoogleDrive_Automate_Triggered.json",
      "workflow_name": "RAG Workflow For Company Documents stored in Google Drive",
      "complexity": {
        "node_count": 30,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 0.8461538461538461,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1253_Stickynote_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1268_Stickynote_Hackernews_Automate_Triggered.json",
      "workflow_name": "Manualchattrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1269_Stickynote_Automate_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 21,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1353_Stickynote_Gmail_Send_Triggered.json",
      "workflow_name": "Gmailtrigger Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1379_Stickynote_Automation_Triggered.json",
      "workflow_name": "Chat with local LLMs using n8n and Ollama",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1507_Stickynote_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "CoinMarketCap_DEXScan_Agent_Tool",
      "complexity": {
        "node_count": 69,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 49,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "1509_Stickynote_Automation_Webhook.json",
      "workflow_name": "Integrating AI with Open-Meteo API for Enhanced Weather Forecasting",
      "complexity": {
        "node_count": 30,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1534_Stickynote_Googlecalendartool_Automation_Triggered.json",
      "workflow_name": "Personal Assistant MCP server",
      "complexity": {
        "node_count": 33,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1557_Stickynote_Automation_Triggered.json",
      "workflow_name": "\ud83d\udd10\ud83e\udd99\ud83e\udd16 Private & Local Ollama Self-Hosted LLM Router",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1567_Stickynote_Automation_Webhook.json",
      "workflow_name": "Integrating AI with Open-Meteo API for Enhanced Weather Forecasting",
      "complexity": {
        "node_count": 30,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1568_Stickynote_Notion_Automation_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1569_Stickynote_Notion_Automation_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1624_Stickynote_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "CoinMarketCap_Crypto_Agent_Tool",
      "complexity": {
        "node_count": 55,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1626_Stickynote_GoogleDrive_Automate_Triggered.json",
      "workflow_name": "RAG Workflow For Company Documents stored in Google Drive",
      "complexity": {
        "node_count": 30,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 0.8461538461538461,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1682_Stickynote_Notion_Automation_Triggered.json",
      "workflow_name": "Whisper Transkription copy",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1691_Stickynote_Automation_Triggered.json",
      "workflow_name": "\ud83d\udde8\ufe0fOllama Chat",
      "complexity": {
        "node_count": 19,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1698_Stickynote_Notion_Automation_Triggered.json",
      "workflow_name": "Whisper Transkription copy",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1703_Stickynote_Webhook_Automation_Webhook.json",
      "workflow_name": "Travel Planning Agent with Couchbase Vector Search, Gemini 2.0 Flash and OpenAI",
      "complexity": {
        "node_count": 27,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1719_Stickynote_Automation_Triggered.json",
      "workflow_name": "Use any LLM-Model via OpenRouter",
      "complexity": {
        "node_count": 14,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1734_Stickynote_Automation_Triggered.json",
      "workflow_name": "Use any LLM-Model via OpenRouter",
      "complexity": {
        "node_count": 14,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1779_Stickynote_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "OpenSea NFT Agent Tool",
      "complexity": {
        "node_count": 83,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 10,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 61,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 10 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1804_Stickynote_Automation_Triggered.json",
      "workflow_name": "Chat with local LLMs using n8n and Ollama",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1816_Stickynote_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "OpenSea Marketplace Agent Tool",
      "complexity": {
        "node_count": 83,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 10,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 61,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 10 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1846_Stickynote_Executeworkflow_Automate_Triggered.json",
      "workflow_name": "My workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1899_Stickynote_Airtabletool_Create_Triggered.json",
      "workflow_name": "Build an MCP server with Airtable",
      "complexity": {
        "node_count": 19,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1902_Stickynote_Executeworkflow_Update_Webhook.json",
      "workflow_name": "CoinMarketCap_Exchange_and_Community_Agent_Tool",
      "complexity": {
        "node_count": 48,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1907_Stickynote_Converttofile_Automation_Triggered.json",
      "workflow_name": "Business Canvas Generator",
      "complexity": {
        "node_count": 34,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.32,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1926_Stickynote_Splitinbatches_Automation_Triggered.json",
      "workflow_name": "Multi-Agent Conversation",
      "complexity": {
        "node_count": 23,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1927_Stickynote_Automation_Triggered.json",
      "workflow_name": "SearchApi AI Agent",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1947_Stickynote_Supabasetool_Automation_Triggered.json",
      "workflow_name": "MCP_SUPABASE_AGENT",
      "complexity": {
        "node_count": 33,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1986_Stickynote_Jira_Create_Webhook.json",
      "workflow_name": "Create_Unique_Jira_tickets_from_Splunk_alerts",
      "complexity": {
        "node_count": 22,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1987_Stickynote_Airtable_Create_Triggered.json",
      "workflow_name": "Sync New Files From Google Drive with Airtable",
      "complexity": {
        "node_count": 15,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2009_Stickynote_Automate_Webhook.json",
      "workflow_name": "\ud83c\udf10\ud83e\ude9b AI Agent Chatbot with Jina.ai Webpage Scraper",
      "complexity": {
        "node_count": 21,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2015_Stickynote_Automation_Triggered.json",
      "workflow_name": "Discord MCP Chat Agent",
      "complexity": {
        "node_count": 13,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2023_Stickynote_Create_Triggered.json",
      "workflow_name": "Build Custom AI Agent with LangChain & Gemini (Self-Hosted)",
      "complexity": {
        "node_count": 15,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2027_Stickynote_Executeworkflow_Automation_Webhook.json",
      "workflow_name": "OpenSea Analytics Agent Tool",
      "complexity": {
        "node_count": 48,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2039_Stickynote_Webhook_Automation_Webhook.json",
      "workflow_name": "Travel AssistantAgent",
      "complexity": {
        "node_count": 28,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2048_Stickynote_Automation_Triggered.json",
      "workflow_name": "\ud83d\udde8\ufe0fOllama Chat",
      "complexity": {
        "node_count": 19,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0331_Stopanderror_Extractfromfile_Send_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0333_Stopanderror_Webhook_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0392_Stopanderror_GitHub_Automate_Webhook.json",
      "workflow_name": "[n8n] Advanced URL Parsing and Shortening Workflow - Switchy.io Integration",
      "complexity": {
        "node_count": 121,
        "connection_count": 59,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 10,
        "node_type_diversity": 12,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 14,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 62,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 14 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 70.5
    },
    {
      "filename": "0427_Stopanderror_Wait_Monitor_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0592_Stopanderror_Awss3_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0719_Stopanderror_Splitout_Create_Webhook.json",
      "workflow_name": "Outputparserstructured Workflow",
      "complexity": {
        "node_count": 106,
        "connection_count": 67,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 24,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 3,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 83.0
    },
    {
      "filename": "0743_Stopanderror_Wait_Automation_Triggered.json",
      "workflow_name": "Exponential Backoff for Google APIs",
      "complexity": {
        "node_count": 14,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0786_Stopanderror_Stickynote_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0791_Stopanderror_Splitout_Create_Webhook.json",
      "workflow_name": "Youtube Workflow",
      "complexity": {
        "node_count": 33,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9130434782608695,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0925_Stopanderror_Wait_Automate_Triggered.json",
      "workflow_name": "Prevent concurrent workflow runs using Redis",
      "complexity": {
        "node_count": 48,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 0.96,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 90.0
    },
    {
      "filename": "1061_Stopanderror_Telegram_Automation_Triggered.json",
      "workflow_name": "Telegram RAG pdf",
      "complexity": {
        "node_count": 31,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 0.8888888888888888,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1164_Stopanderror_Code_Automation_Triggered.json",
      "workflow_name": "Slack Webhook - Verify Signature",
      "complexity": {
        "node_count": 17,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1295_Stopanderror_Webhook_Automation_Webhook.json",
      "workflow_name": "Auth0 User Login",
      "complexity": {
        "node_count": 46,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1453_Stopanderror_Code_Import_Triggered.json",
      "workflow_name": "Load Prompts from Github Repo and auto populate n8n expressions",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1498_Stopanderror_Limit_Sync_Webhook.json",
      "workflow_name": "Notion to Clockify Sync Template",
      "complexity": {
        "node_count": 88,
        "connection_count": 54,
        "max_depth": 1,
        "branching_factor": 1.0246913580246915,
        "cyclomatic_complexity": 16,
        "node_type_diversity": 13,
        "complexity_score": 65
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 81.5
    },
    {
      "filename": "1504_Stopanderror_Code_Automation_Webhook.json",
      "workflow_name": "2. Refresh Pipedrive tokens",
      "complexity": {
        "node_count": 74,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 41,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1623_Stopanderror_Code_Import_Triggered.json",
      "workflow_name": "Load Prompts from Github Repo and auto populate n8n expressions",
      "complexity": {
        "node_count": 23,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1689_Stopanderror_Telegram_Automation_Triggered.json",
      "workflow_name": "Telegram RAG pdf",
      "complexity": {
        "node_count": 31,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 0.8888888888888888,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1768_Stopanderror_Wait_Automation_Webhook.json",
      "workflow_name": "airflow dag_run",
      "complexity": {
        "node_count": 33,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9666666666666667,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1785_Stopanderror_Clickup_Automation_Webhook.json",
      "workflow_name": "Zoom AI Meeting Assistant",
      "complexity": {
        "node_count": 52,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 0.9761904761904762,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1823_Stopanderror_Wait_Create_Webhook.json",
      "workflow_name": "Generate Leads with Google Maps - AlexK1919",
      "complexity": {
        "node_count": 57,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 0.9803921568627451,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1894_Stopanderror_Clickup_Automation_Webhook.json",
      "workflow_name": "Zoom AI Meeting Assistant",
      "complexity": {
        "node_count": 51,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 0.975,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 22,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1896_Stopanderror_Splitout_Export_Scheduled.json",
      "workflow_name": "Clockify Backup Template",
      "complexity": {
        "node_count": 32,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9565217391304348,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1963_Stopanderror_Wait_Automation_Triggered.json",
      "workflow_name": "Retry on fail except for known error Template",
      "complexity": {
        "node_count": 22,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0183_Strapi_Webhook_Automation_Webhook.json",
      "workflow_name": "0183_Strapi_Webhook_Automation_Webhook",
      "complexity": {
        "node_count": 14,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 2,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0584_Strapi_Splitout_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 57,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 3,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 83.0
    },
    {
      "filename": "1336_Strapi_Webhook_Automate_Webhook.json",
      "workflow_name": "1336_Strapi_Webhook_Automate_Webhook",
      "complexity": {
        "node_count": 14,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.1666666666666667,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 2,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "1434_Strapi_Splitout_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 57,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 1,
        "loops": 3,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 83.0
    },
    {
      "filename": "1582_Summarize_Stickynote_Automation_Triggered.json",
      "workflow_name": "OpenAI Assistant with custom n8n tools",
      "complexity": {
        "node_count": 20,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1706_Summarize_Stickynote_Automation_Triggered.json",
      "workflow_name": "Jira Retrospective",
      "complexity": {
        "node_count": 20,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1829_Summarize_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "Adaptive RAG",
      "complexity": {
        "node_count": 57,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0564_Supabase_Stickynote_Create_Triggered.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1677_Supabase_Stickynote_Automation_Triggered.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1680_Supabase_Stickynote_Automation_Triggered.json",
      "workflow_name": "A/B Split Testing",
      "complexity": {
        "node_count": 22,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1020_Surveymonkey_Automate_Triggered.json",
      "workflow_name": "Surveymonkeytrigger Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1114_Taiga_Update_Triggered.json",
      "workflow_name": "Receive updates when an event occurs in Taiga",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0001_Telegram_Schedule_Automation_Scheduled.json",
      "workflow_name": "#\ufe0f\u20e3Nostr #damus AI Powered Reporting + Gmail + Telegram",
      "complexity": {
        "node_count": 34,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.2666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0140_Telegram_Webhook_Automation_Webhook.json",
      "workflow_name": "0140_Telegram_Webhook_Automation_Webhook",
      "complexity": {
        "node_count": 7,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.6,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0158_Telegram_Functionitem_Create_Scheduled.json",
      "workflow_name": "0158_Telegram_Functionitem_Create_Scheduled",
      "complexity": {
        "node_count": 11,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0170_Telegram_Wait_Automation_Scheduled.json",
      "workflow_name": "0170_Telegram_Wait_Automation_Scheduled",
      "complexity": {
        "node_count": 7,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 45,
      "overall_score": 73.5
    },
    {
      "filename": "0201_Telegram_Executecommand_Process_Webhook.json",
      "workflow_name": "0201_Telegram_Executecommand_Process_Webhook",
      "complexity": {
        "node_count": 21,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 35,
      "overall_score": 66.5
    },
    {
      "filename": "0231_Telegram_Nasa_Send_Scheduled.json",
      "workflow_name": "Send the Astronomy Picture of the day daily to a Telegram channel",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0340_Telegram_Automation_Webhook.json",
      "workflow_name": "Blockchain DEX Screener Insights Agent",
      "complexity": {
        "node_count": 72,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 51,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "0346_Telegram_Cron_Automation_Scheduled.json",
      "workflow_name": "Daily Journal Reminder",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0381_Telegram_Code_Update_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0383_Telegram_Wait_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 79,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 8,
        "node_type_diversity": 14,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 38,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.9
    },
    {
      "filename": "0388_Telegram_Code_Create_Triggered.json",
      "workflow_name": "Noop Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 1,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0398_Telegram_Wait_Send_Webhook.json",
      "workflow_name": "Emailreadimap Workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0419_Telegram_Automate_Triggered.json",
      "workflow_name": "Agent Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0425_Telegram_Hunter_Send_Webhook.json",
      "workflow_name": "Formtrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0462_Telegram_Code_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 61,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.1219512195121952,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0465_Telegram_Filter_Send_Scheduled.json",
      "workflow_name": "Telegram Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0481_Telegram_Code_Automation_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0555555555555556,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0488_Telegram_Stickynote_Update_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0585_Telegram_Splitout_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 50,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0599_Telegram_Gmailtool_Send_Triggered.json",
      "workflow_name": "Googlecalendartool Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0676_Telegram_Splitout_Import_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0679_Telegram_Splitout_Create_Webhook.json",
      "workflow_name": "Chainllm Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0526315789473684,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0690_Telegram_Webhook_Send_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 98,
        "connection_count": 35,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 58,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "0704_Telegram_Automate_Triggered.json",
      "workflow_name": "N8N Espa\u00f1ol - BOT",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.8,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0705_Telegram_Automate_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0735_Telegram_GoogleCalendar_Automation_Webhook.json",
      "workflow_name": "AI Phone Agent with RetellAI",
      "complexity": {
        "node_count": 87,
        "connection_count": 41,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 20,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 46,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0742_Telegram_Splitout_Create_Webhook.json",
      "workflow_name": "YT AI News Playlist Creator/AI News Form Updater",
      "complexity": {
        "node_count": 46,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0333333333333334,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0768_Telegram_Stickynote_Create_Triggered.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0769_Telegram_Webhook_Send_Webhook.json",
      "workflow_name": "Memorybufferwindow Workflow",
      "complexity": {
        "node_count": 71,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 0.9803921568627451,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0782_Telegram_Redis_Create_Webhook.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 46,
        "max_depth": 1,
        "branching_factor": 0.9310344827586207,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 16,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0789_Telegram_Code_Create_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 56,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.1282051282051282,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0807_Telegram_Wait_Send_Triggered.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0815_Telegram_Code_Update_Triggered.json",
      "workflow_name": "Telegram Workflow",
      "complexity": {
        "node_count": 55,
        "connection_count": 36,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0824_Telegram_Rssfeedread_Monitor_Scheduled.json",
      "workflow_name": "n8n_check",
      "complexity": {
        "node_count": 12,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0864_Telegram_Splitout_Create_Triggered.json",
      "workflow_name": "Chattrigger Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0882_Telegram_Googletaskstool_Create_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0884_Telegram_Filter_Export_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0885_Telegram_Mondaycom_Automate_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0916_Telegram_Gmail_Create_Triggered.json",
      "workflow_name": "Outputparserstructured Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0931_Telegram_Splitout_Monitor_Scheduled.json",
      "workflow_name": "N8N Financial Tracker Telegram Invoices to Notion with AI Summaries & Reports",
      "complexity": {
        "node_count": 38,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0944_Telegram_Rssfeedread_Automation_Scheduled.json",
      "workflow_name": "rss-telegram",
      "complexity": {
        "node_count": 23,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "1001_Telegram_Stickynote_Automation_Triggered.json",
      "workflow_name": "MCP Client with Brave and Telegram",
      "complexity": {
        "node_count": 21,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1065_Telegram_Webhook_Automation_Webhook.json",
      "workflow_name": "bash-dash telegram",
      "complexity": {
        "node_count": 3,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 100
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 79.0
    },
    {
      "filename": "1070_Telegram_Wordpress_Create_Webhook.json",
      "workflow_name": "\ud83d\udd0d\ud83d\udee0\ufe0fGenerate SEO-Optimized WordPress Content with Perplexity Research",
      "complexity": {
        "node_count": 58,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 28,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1113_Telegram_Splitout_Automation_Scheduled.json",
      "workflow_name": "\ud83e\udd16\ud83e\uddd1\u200d\ud83d\udcbb AI Agent  for Top n8n Creators Leaderboard Reporting",
      "complexity": {
        "node_count": 72,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1127_Telegram_Wait_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1182_Telegram_Webhook_Automation_Webhook.json",
      "workflow_name": "\ud83e\udd16 Telegram Messaging Agent for Text/Audio/Images",
      "complexity": {
        "node_count": 85,
        "connection_count": 42,
        "max_depth": 1,
        "branching_factor": 1.0151515151515151,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 41,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1185_Telegram_Wait_Automate_Webhook.json",
      "workflow_name": "\ud83e\udd16 AI Powered RAG Chatbot for Your Docs + Google Drive + Gemini + Qdrant",
      "complexity": {
        "node_count": 75,
        "connection_count": 48,
        "max_depth": 1,
        "branching_factor": 1.0454545454545454,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 25,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1244_Telegram_GoogleSheets_Automate_Triggered.json",
      "workflow_name": "Telegram ChatBot with multiple sessions",
      "complexity": {
        "node_count": 62,
        "connection_count": 43,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1288_Telegram_Wait_Automation_Webhook.json",
      "workflow_name": "\ud83d\udca5AI Social Video Generator with GPT-4, Kling & Blotato \u2014Auto-Post to Instagram, Facebook,, TikTok...",
      "complexity": {
        "node_count": 154,
        "connection_count": 56,
        "max_depth": 1,
        "branching_factor": 1.0142857142857142,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 17,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 111,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 17 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1291_Telegram_Code_Automation_Webhook.json",
      "workflow_name": "\u270d\ufe0f\ud83c\udf04 Your First Wordpress Content Creator - Quick Start",
      "complexity": {
        "node_count": 73,
        "connection_count": 35,
        "max_depth": 1,
        "branching_factor": 0.9795918367346939,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 29,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1300_Telegram_Stickynote_Create_Webhook.json",
      "workflow_name": "Agentic Telegram AI bot with LangChain nodes and new tools",
      "complexity": {
        "node_count": 23,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1304_Telegram_Code_Monitor_Webhook.json",
      "workflow_name": "Monitor USDT ERC-20 Wallet Balance with Etherscan and Telegram Notifications",
      "complexity": {
        "node_count": 21,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1305_Telegram_Splitout_Export_Webhook.json",
      "workflow_name": "All-in-One Telegram/Baserow AI Assistant \ud83e\udd16\ud83e\udde0 Voice/Photo/Save Notes/Long Term Mem",
      "complexity": {
        "node_count": 68,
        "connection_count": 34,
        "max_depth": 1,
        "branching_factor": 1.1282051282051282,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1315_Telegram_Gmailtool_Automation_Triggered.json",
      "workflow_name": "Googlecalendartool Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1338_Telegram_Stickynote_Automate_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1341_Telegram_Splitout_Automate_Webhook.json",
      "workflow_name": "Automated Research Report Generation with OpenAI, Wikipedia, Google Search, and Gmail/Telegram",
      "complexity": {
        "node_count": 72,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.018181818181818,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 41,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1347_Telegram_Gmail_Automation_Triggered.json",
      "workflow_name": "Forward Filtered Gmail Notifications to Telegram Chat",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1368_Telegram_Limit_Export_Triggered.json",
      "workflow_name": "\ud83e\udd9c\u2728Use OpenAI to Transcribe Audio + Summarize with AI + Save to Google Drive",
      "complexity": {
        "node_count": 52,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 1.0810810810810811,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1375_Telegram_Automate_Triggered.json",
      "workflow_name": "Telegramtrigger Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1380_Telegram_Code_Automate_Triggered.json",
      "workflow_name": "Telegram-bot AI Da Nang",
      "complexity": {
        "node_count": 32,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 0.9411764705882353,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1384_Telegram_Stickynote_Create_Triggered.json",
      "workflow_name": "Post new Google Calendar events to Telegram",
      "complexity": {
        "node_count": 11,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1392_Telegram_Googleanalytics_Automation_Scheduled.json",
      "workflow_name": "Google Analytics: Weekly Report",
      "complexity": {
        "node_count": 29,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1411_Telegram_Wait_Automation_Triggered.json",
      "workflow_name": "Telegram Chat with Buffering",
      "complexity": {
        "node_count": 30,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1424_Telegram_Code_Automation_Webhook.json",
      "workflow_name": "\ud83d\udcc4\u2728 Easy Wordpress Content Creation from PDF Document + Human In The Loop with Gmail Approval",
      "complexity": {
        "node_count": 61,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0444444444444445,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 29,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1439_Telegram_Code_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 61,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.1219512195121952,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1448_Telegram_Stickynote_Automation_Triggered.json",
      "workflow_name": "Play with Spotify from Telegram",
      "complexity": {
        "node_count": 22,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 90.0
    },
    {
      "filename": "1450_Telegram_Automation_Webhook.json",
      "workflow_name": "Coinmarketcap Price Agent",
      "complexity": {
        "node_count": 22,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1452_Telegram_Stickynote_Automate_Triggered.json",
      "workflow_name": "Speech Support Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1470_Telegram_Code_Create_Webhook.json",
      "workflow_name": "Generate Instagram Content from Top Trends with AI Image Generation",
      "complexity": {
        "node_count": 97,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 0.987012987012987,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 4,
        "loops": 1,
        "error_handling": 48,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1482_Telegram_Code_Create_Webhook.json",
      "workflow_name": "Generate Instagram Content from Top Trends with AI Image Generation",
      "complexity": {
        "node_count": 97,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 0.987012987012987,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 4,
        "loops": 1,
        "error_handling": 48,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1485_Telegram_Stickynote_Automate_Triggered.json",
      "workflow_name": "Telegram AI multi-format chatbot",
      "complexity": {
        "node_count": 28,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1487_Telegram_Extractfromfile_Automate_Webhook.json",
      "workflow_name": "HR & IT Helpdesk Chatbot with Audio Transcription",
      "complexity": {
        "node_count": 48,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 1,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1490_Telegram_Splitout_Create_Webhook.json",
      "workflow_name": "Chainllm Workflow",
      "complexity": {
        "node_count": 27,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0526315789473684,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1496_Telegram_Webhook_Automation_Webhook.json",
      "workflow_name": "\ud83d\udd0d\ud83d\udee0\ufe0fPerplexity Researcher to HTML Web Page",
      "complexity": {
        "node_count": 77,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0188679245283019,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 15,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "1515_Telegram_Stickynote_Send_Triggered.json",
      "workflow_name": "Translate Telegram audio messages with AI (55 supported languages) v1",
      "complexity": {
        "node_count": 25,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1522_Telegram_Schedule_Send_Webhook.json",
      "workflow_name": "Template - SSL Expiry Alert System",
      "complexity": {
        "node_count": 35,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1875,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1533_Telegram_Splitout_Automation_Webhook.json",
      "workflow_name": "Summarize YouTube Videos & Chat About Content with GPT-4o-mini via Telegram",
      "complexity": {
        "node_count": 47,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.03125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1539_Telegram_Splitout_Automation_Triggered.json",
      "workflow_name": "AI Document Assistant via Telegram + Supabase",
      "complexity": {
        "node_count": 44,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 20,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1595_Telegram_Schedule_Update_Webhook.json",
      "workflow_name": "n8n update",
      "complexity": {
        "node_count": 41,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0434782608695652,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1596_Telegram_Code_Automate_Webhook.json",
      "workflow_name": "Parents smart bot",
      "complexity": {
        "node_count": 47,
        "connection_count": 35,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 20,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1606_Telegram_Webhook_Automation_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 98,
        "connection_count": 35,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 58,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "1610_Telegram_Googledocs_Automate_Triggered.json",
      "workflow_name": "\ud83e\udd16\ud83e\udde0 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram",
      "complexity": {
        "node_count": 33,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1679_Telegram_GoogleCalendar_Automation_Scheduled.json",
      "workflow_name": "Google Calendar Event Reminder",
      "complexity": {
        "node_count": 17,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1686_Telegram_Stickynote_Automate_Triggered.json",
      "workflow_name": "Telegram AI multi-format chatbot",
      "complexity": {
        "node_count": 28,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1690_Telegram_Stickynote_Automation_Triggered.json",
      "workflow_name": "Play with Spotify from Telegram",
      "complexity": {
        "node_count": 22,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 90.0
    },
    {
      "filename": "1701_Telegram_Stickynote_Send_Triggered.json",
      "workflow_name": "Translate Telegram audio messages with AI (55 supported languages) v1",
      "complexity": {
        "node_count": 25,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1708_Telegram_Stickynote_Create_Webhook.json",
      "workflow_name": "Agentic Telegram AI bot with LangChain nodes and new tools",
      "complexity": {
        "node_count": 23,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1712_Telegram_Automation_Webhook.json",
      "workflow_name": "Ultimate Personal Assistant",
      "complexity": {
        "node_count": 32,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 11,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1741_Telegram_Gumroad_Create_Webhook.json",
      "workflow_name": "2. Add Beehiiv newsletter subscribers from Gumroad sales",
      "complexity": {
        "node_count": 29,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1775_Telegram_Code_Import_Triggered.json",
      "workflow_name": "AI-Driven WooCommerce Product Importer with SEO",
      "complexity": {
        "node_count": 25,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1797_Telegram_GoogleDrive_Create_Triggered.json",
      "workflow_name": "Save new Files received on Telegram to Google Drive",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1812_Telegram_Code_Automate_Triggered.json",
      "workflow_name": "Telegram-bot AI Da Nang",
      "complexity": {
        "node_count": 32,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 0.9411764705882353,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1841_Telegram_Manual_Automate_Triggered.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1843_Telegram_Code_Automate_Triggered.json",
      "workflow_name": "e-mail Chatbot with both semantic and structured RAG, using Telegram and Pgvector",
      "complexity": {
        "node_count": 28,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1856_Telegram_Stickynote_Automation_Webhook.json",
      "workflow_name": "Agent Access Control Template",
      "complexity": {
        "node_count": 58,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1877_Telegram_Stickynote_Automation_Triggered.json",
      "workflow_name": "Optimize Prompt",
      "complexity": {
        "node_count": 17,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1878_Telegram_Wait_Create_Webhook.json",
      "workflow_name": "Auto-create and publish AI social videos with Telegram, GPT-4 and Blotato",
      "complexity": {
        "node_count": 175,
        "connection_count": 56,
        "max_depth": 1,
        "branching_factor": 1.0509554140127388,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 20,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 128,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 20 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1904_Telegram_Limit_Process_Webhook.json",
      "workflow_name": "\u2728\ud83d\udd2a Advanced AI Powered Document Parsing & Text Extraction with Llama Parse",
      "complexity": {
        "node_count": 90,
        "connection_count": 43,
        "max_depth": 1,
        "branching_factor": 1.0847457627118644,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1905_Telegram_Googleanalytics_Automation_Webhook.json",
      "workflow_name": "Online Marketing Weekly Report",
      "complexity": {
        "node_count": 93,
        "connection_count": 55,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 2,
        "loops": 0,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1916_Telegram_Stickynote_Automation_Triggered.json",
      "workflow_name": "CoinMarketCap_AI_Data_Analyst_Agent",
      "complexity": {
        "node_count": 20,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1919_Telegram_Splitout_Automate_Webhook.json",
      "workflow_name": "\ud83c\udf10 Confluence Page AI Powered Chatbot",
      "complexity": {
        "node_count": 35,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0454545454545454,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1938_Telegram_Schedule_Automation_Scheduled.json",
      "workflow_name": "#\ufe0f\u20e3Nostr #damus AI Powered Reporting + Gmail + Telegram",
      "complexity": {
        "node_count": 34,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.2666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1940_Telegram_Limit_Export_Scheduled.json",
      "workflow_name": "\u2728\ud83d\ude03Automated Workflow Backups to Google Drive",
      "complexity": {
        "node_count": 33,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0526315789473684,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1941_Telegram_Stickynote_Automate_Triggered.json",
      "workflow_name": "Telegram echo-bot",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1945_Telegram_Schedule_Import_Scheduled.json",
      "workflow_name": "FetchGithubIssues",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1950_Telegram_Googledocs_Automate_Triggered.json",
      "workflow_name": "\ud83e\udde0 Give Your AI Agent Chatbot Long Term Memory Tools Router",
      "complexity": {
        "node_count": 52,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1975_Telegram_Googledocs_Automation_Webhook.json",
      "workflow_name": "\ud83d\udc0b\ud83e\udd16 DeepSeek AI Agent + Telegram + LONG TERM Memory \ud83e\udde0",
      "complexity": {
        "node_count": 41,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1982_Telegram_Splitout_Automation_Scheduled.json",
      "workflow_name": "\ud83c\udfa6\ud83d\udc8cAdvanced YouTube RSS Feed Buddy for Your Favorite Channels",
      "complexity": {
        "node_count": 55,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.09375,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2004_Telegram_Stickynote_Automation_Triggered.json",
      "workflow_name": "OpenSea AI-Powered Insights via Telegram",
      "complexity": {
        "node_count": 21,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2005_Telegram_Schedule_Monitor_Webhook.json",
      "workflow_name": "MAIA - Health Check",
      "complexity": {
        "node_count": 20,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "2018_Telegram_Cal_Create_Webhook.json",
      "workflow_name": "Meeting booked - to newsletter and CRM",
      "complexity": {
        "node_count": 22,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2038_Telegram_Extractfromfile_Automate_Webhook.json",
      "workflow_name": "HR & IT Helpdesk Chatbot with Audio Transcription",
      "complexity": {
        "node_count": 48,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 1,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2040_Telegram_Splitout_Automation_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0588235294117647,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "2044_Telegram_Googledocs_Automation_Webhook.json",
      "workflow_name": "\ud83d\udc0b\ud83e\udd16 DeepSeek AI Agent + Telegram + LONG TERM Memory \ud83e\udde0",
      "complexity": {
        "node_count": 41,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9230769230769231,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2051_Telegram_Webhook_Automation_Webhook.json",
      "workflow_name": "\ud83e\udd16 Telegram Messaging Agent for Text/Audio/Images",
      "complexity": {
        "node_count": 85,
        "connection_count": 42,
        "max_depth": 1,
        "branching_factor": 1.0151515151515151,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 41,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2052_Telegram_Splitout_Automation_Scheduled.json",
      "workflow_name": "\ud83e\udd16\ud83e\uddd1\u200d\ud83d\udcbb AI Agent for Top n8n Creators Leaderboard Reporting",
      "complexity": {
        "node_count": 72,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "2053_Telegram_Googledocs_Automate_Triggered.json",
      "workflow_name": "\ud83e\udd16\ud83e\udde0 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram",
      "complexity": {
        "node_count": 33,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "Academic Assistant Chatbot (Telegram + OpenAI).json",
      "workflow_name": "Academic Assistant Chatbot (Telegram + OpenAI)",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1575_Telegramtool_Woocommercetool_Automate_Webhook.json",
      "workflow_name": "WooCommerce AI Chatbot Workflow for Post-Sales Support",
      "complexity": {
        "node_count": 61,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 20,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0205_Thehive_Update_Triggered.json",
      "workflow_name": "Receive updates when an event occurs in TheHive",
      "complexity": {
        "node_count": 6,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "1749_Todoist_Schedule_Send_Scheduled.json",
      "workflow_name": "Email mailbox as Todoist tasks",
      "complexity": {
        "node_count": 36,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.125,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0147_Toggl_Create_Triggered.json",
      "workflow_name": "Get new time entries from Toggl",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0060_Travisci_GitHub_Automate_Triggered.json",
      "workflow_name": "Githubtrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0044_Trello_Googlecloudnaturallanguage_Automate_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0053_Trello_GoogleCalendar_Create_Scheduled.json",
      "workflow_name": "Function Workflow",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.1428571428571428,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0076_Trello_Update_Triggered.json",
      "workflow_name": "Receive updates for changes in the specified list in Trello",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1298_Trello_Googlecloudnaturallanguage_Create_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1302_Trello_Limit_Automate_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0354_Twilio_Typeform_Send_Triggered.json",
      "workflow_name": "Send Typeforms leads via Whatsapp (Twilio)",
      "complexity": {
        "node_count": 9,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0841_Twilio_Stickynote_Send_Triggered.json",
      "workflow_name": "Twiliotrigger Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0842_Twilio_Cron_Send_Scheduled.json",
      "workflow_name": "Monitoring and alerting",
      "complexity": {
        "node_count": 11,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1198_Twilio_Pushcut_Send_Triggered.json",
      "workflow_name": "Send an SMS to a number whenever you go out",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1165_Twitter_Telegram_Create_Triggered.json",
      "workflow_name": "New WooCommerce Product to Twitter and Telegram",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 2.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1211_Twitter_Strava_Create_Triggered.json",
      "workflow_name": "Receive updates when a new activity gets created and tweet about it",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1212_Twitter_Slack_Automation_Scheduled.json",
      "workflow_name": "Scrape Twitter for mentions of company",
      "complexity": {
        "node_count": 12,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1744_Twittertool_Automation_Triggered.json",
      "workflow_name": "Automatizacion X",
      "complexity": {
        "node_count": 11,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0215_Typeform_Clickup_Automation_Triggered.json",
      "workflow_name": "User Request Management",
      "complexity": {
        "node_count": 13,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0262_Typeform_Spreadsheetfile_Automate_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 11,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1018_Typeform_Airtable_Automation_Triggered.json",
      "workflow_name": "CFP Selection 1",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1207_Typeform_Demio_Automate_Triggered.json",
      "workflow_name": "Typeformtrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0050_Uptimerobot_Automate.json",
      "workflow_name": "Uptimerobot Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0090_Wait_Lemlist_Create_Scheduled.json",
      "workflow_name": "Create Email Campaign From LinkedIn Post Interactions",
      "complexity": {
        "node_count": 22,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0091_Wait_Splitout_Process_Webhook.json",
      "workflow_name": "\u2194\ufe0f Airtable Batch Processing",
      "complexity": {
        "node_count": 58,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0192307692307692,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0092_Wait_Datetime_Automate_Triggered.json",
      "workflow_name": "Calendlytrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0101_Wait_Manual_Automation_Webhook.json",
      "workflow_name": "0101_Wait_Manual_Automation_Webhook",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0290_Wait_Code_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0330_Wait_Webhook_Send_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 71,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0385_Wait_Code_Send_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0466_Wait_Filter_Send_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0498_Wait_Splitout_Process_Scheduled.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 30,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0523_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Lmopenai Workflow",
      "complexity": {
        "node_count": 51,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0285714285714285,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0533_Wait_Code_Export_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 62,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0512820512820513,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0538_Wait_Splitout_Send_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 34,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0542_Wait_Redis_Create_Triggered.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0547_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 113,
        "connection_count": 44,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 11,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 69,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 11 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "0567_Wait_Code_Export_Webhook.json",
      "workflow_name": "Backup n8n Workflows to Bitbucket",
      "complexity": {
        "node_count": 27,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 0.9565217391304348,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0578_Wait_Schedule_Create_Webhook.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0384615384615385,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0582_Wait_Dropbox_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 55,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0583_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 63,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "0596_Wait_Code_Import_Webhook.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0602_Wait_Splitout_Send_Webhook.json",
      "workflow_name": "Whatsapptrigger Workflow",
      "complexity": {
        "node_count": 73,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0603_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0609_Wait_Limit_Import_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0620_Wait_Slack_Automate_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 49,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.1176470588235294,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0621_Wait_Slack_Monitor_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 52,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0627_Wait_Splitout_Create_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0629_Wait_Code_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0639_Wait_Splitout_Send_Webhook.json",
      "workflow_name": "Google Maps Email Scraper Template",
      "complexity": {
        "node_count": 38,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.9655172413793104,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 3,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0640_Wait_Splitout_Create_Scheduled.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 4,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0668_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 126,
        "connection_count": 98,
        "max_depth": 1,
        "branching_factor": 0.9830508474576272,
        "cyclomatic_complexity": 10,
        "node_type_diversity": 26,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 6,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 81.5
    },
    {
      "filename": "0715_Wait_Schedule_Create_Scheduled.json",
      "workflow_name": "Spotify Workflow",
      "complexity": {
        "node_count": 61,
        "connection_count": 40,
        "max_depth": 1,
        "branching_factor": 1.04,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 15,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 76.5
    },
    {
      "filename": "0716_Wait_Webhook_Process_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 28,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "0763_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 48,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 1.0263157894736843,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0764_Wait_Splitout_Create_Triggered.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.105263157894737,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0765_Wait_Splitout_Create_Triggered.json",
      "workflow_name": "Executeworkflowtrigger Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0714285714285714,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 80.5
    },
    {
      "filename": "0766_Wait_Limit_Update_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0740740740740742,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0820_Wait_Code_Send_Webhook.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 0.9428571428571428,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 17,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0826_Wait_Splitout_Automation_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 62,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0476190476190477,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0831_Wait_Code_Monitor_Webhook.json",
      "workflow_name": "Noop Workflow",
      "complexity": {
        "node_count": 29,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0836_Wait_Code_Create_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.88,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 3,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 88.5
    },
    {
      "filename": "0858_Wait_Schedule_Update_Scheduled.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 47,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.9722222222222222,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0862_Wait_Code_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 39,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0866_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0867_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0868_Wait_Filter_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0869_Wait_Datetime_Send_Scheduled.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 34,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 17,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 5,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 85
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 79.0
    },
    {
      "filename": "0871_Wait_HTTP_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0888_Wait_Code_Send_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 23,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0903_Wait_Redis_Automate_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 26,
        "max_depth": 1,
        "branching_factor": 1.1481481481481481,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0904_Wait_Code_Create_Webhook.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0905_Wait_Schedule_Create_Webhook.json",
      "workflow_name": "Scheduletrigger Workflow",
      "complexity": {
        "node_count": 54,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 2,
        "loops": 0,
        "error_handling": 23,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1135_Wait_Code_Create_Webhook.json",
      "workflow_name": "Create Threads on Bluesky",
      "complexity": {
        "node_count": 55,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 0.9777777777777777,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1145_Wait_Splitout_Automation_Webhook.json",
      "workflow_name": "Google Site Index - sitemap.xml example",
      "complexity": {
        "node_count": 50,
        "connection_count": 20,
        "max_depth": 1,
        "branching_factor": 0.9767441860465116,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1282_Wait_Code_Import_Webhook.json",
      "workflow_name": "AI-Powered Short-Form Video Generator with OpenAI, Flux, Kling, and ElevenLabs and upload to all ...",
      "complexity": {
        "node_count": 148,
        "connection_count": 65,
        "max_depth": 1,
        "branching_factor": 1.0451127819548873,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 13,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 92,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 13 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 80.0
    },
    {
      "filename": "1293_Wait_Splitout_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 126,
        "connection_count": 98,
        "max_depth": 1,
        "branching_factor": 0.9830508474576272,
        "cyclomatic_complexity": 10,
        "node_type_diversity": 26,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 6,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 81.5
    },
    {
      "filename": "1312_Wait_Schedule_Create_Webhook.json",
      "workflow_name": "Analyze_Crowdstrike_Detections__search_for_IOCs_in_VirusTotal__create_a_ticket_in_Jira_and_post_a...",
      "complexity": {
        "node_count": 48,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1359_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 34,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 22,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1362_Wait_Webhook_Create_Webhook.json",
      "workflow_name": "Build a Phone Agent to qualify outbound leads and inbound calls with RetellAI -vide",
      "complexity": {
        "node_count": 51,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 28,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1366_Wait_Code_Automation_Webhook.json",
      "workflow_name": "OpenAI Assistant for Hubspot Chat",
      "complexity": {
        "node_count": 112,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 10,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 11,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 73,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 11 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 78.5
    },
    {
      "filename": "1389_Wait_Limit_Import_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 28,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1395_Wait_Code_Create_Webhook.json",
      "workflow_name": "Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API",
      "complexity": {
        "node_count": 110,
        "connection_count": 58,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 13,
        "node_type_diversity": 9,
        "complexity_score": 70
      },
      "performance": {
        "http_requests": 14,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 56,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 14 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 69.0
    },
    {
      "filename": "1400_Wait_Code_Automation_Webhook.json",
      "workflow_name": "AutoQoutesV2_template",
      "complexity": {
        "node_count": 90,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 0.9873417721518988,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 57,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "1405_Wait_Splitout_Automation_Webhook.json",
      "workflow_name": "Gmail Workflow",
      "complexity": {
        "node_count": 63,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1431_Wait_Redis_Send_Triggered.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1456_Wait_HTTP_Automation_Webhook.json",
      "workflow_name": "Flux Dev Image Generation Fal.ai",
      "complexity": {
        "node_count": 42,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1465_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "Search LinkedIn companies, Score with AI and add them to Google Sheet CRM",
      "complexity": {
        "node_count": 38,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.9666666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1469_Wait_Splitout_Automation_Webhook.json",
      "workflow_name": "Content to 9:16 Aspect Image Generator v1",
      "complexity": {
        "node_count": 81,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1484_Wait_Code_Create_Webhook.json",
      "workflow_name": "Motion-illustration Workflow Generated with Midjourney and Kling API",
      "complexity": {
        "node_count": 32,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1508_Wait_Manual_Automation_Webhook.json",
      "workflow_name": "Indeed Company Data Scraper & Summarization with Airtable, Bright Data and Google Gemini",
      "complexity": {
        "node_count": 45,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 21,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1512_Wait_Splitout_Process_Webhook.json",
      "workflow_name": "Lmopenai Workflow",
      "complexity": {
        "node_count": 51,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0285714285714285,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1513_Wait_Splitout_Process_Webhook.json",
      "workflow_name": "Lmopenai Workflow",
      "complexity": {
        "node_count": 51,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0285714285714285,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1549_Wait_Dropbox_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 55,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1563_Wait_Schedule_Monitor_Scheduled.json",
      "workflow_name": "PG&E Daily Cost Tracker",
      "complexity": {
        "node_count": 20,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1566_Wait_Splitout_Automation_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1572_Wait_Schedule_Automate_Scheduled.json",
      "workflow_name": "WhatsApp business bot",
      "complexity": {
        "node_count": 24,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1579_Wait_Manual_Automation_Webhook.json",
      "workflow_name": "Structured Bulk Data Extract with Bright Data Web Scraper",
      "complexity": {
        "node_count": 46,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.027027027027027,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1589_Wait_Webhook_Automation_Webhook.json",
      "workflow_name": "FLUX-fill standalone",
      "complexity": {
        "node_count": 59,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0208333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1600_Wait_Code_Automation_Scheduled.json",
      "workflow_name": "Phishing_analysis__URLScan_io_and_Virustotal_",
      "complexity": {
        "node_count": 41,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.032258064516129,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1609_Wait_Schedule_Automation_Scheduled.json",
      "workflow_name": "Keep discord clean",
      "complexity": {
        "node_count": 20,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9333333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 3,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1638_Wait_Splitout_Send_Webhook.json",
      "workflow_name": "Whatsapptrigger Workflow",
      "complexity": {
        "node_count": 73,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1639_Wait_Webhook_Automation_Webhook.json",
      "workflow_name": "Resume Screening & Behavioral Interviews with Gemini, Elevenlabs, & Notion ATS copy",
      "complexity": {
        "node_count": 90,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 20,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1696_Wait_Code_Automate_Webhook.json",
      "workflow_name": "Automated Content SEO Audit Report",
      "complexity": {
        "node_count": 57,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1705_Wait_Manual_Automate_Webhook.json",
      "workflow_name": "Fully automated Video Captions generation with json2video",
      "complexity": {
        "node_count": 29,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1717_Wait_Code_Automation_Webhook.json",
      "workflow_name": "TopSourcer - Finds LinkedIn Profiles using natural language",
      "complexity": {
        "node_count": 33,
        "connection_count": 17,
        "max_depth": 1,
        "branching_factor": 0.9565217391304348,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1727_Wait_Splitout_Create_Webhook.json",
      "workflow_name": "address validation",
      "complexity": {
        "node_count": 62,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 28,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 74.4
    },
    {
      "filename": "1736_Wait_Schedule_Automation_Webhook.json",
      "workflow_name": "Googledrive Workflow",
      "complexity": {
        "node_count": 69,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0384615384615385,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1743_Wait_Code_Sync_Scheduled.json",
      "workflow_name": "Shopify to Google Sheets Product Sync Automation",
      "complexity": {
        "node_count": 34,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.05,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 4,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1745_Wait_Code_Automation_Webhook.json",
      "workflow_name": "High-Level Service Page SEO Blueprint Report",
      "complexity": {
        "node_count": 51,
        "connection_count": 39,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1746_Wait_Code_Monitor_Webhook.json",
      "workflow_name": "Live link checker",
      "complexity": {
        "node_count": 32,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 0.9583333333333334,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1763_Wait_Schedule_Automation_Webhook.json",
      "workflow_name": "Image-to-3D",
      "complexity": {
        "node_count": 49,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 0.9743589743589743,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 27,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1771_Wait_Code_Automate_Webhook.json",
      "workflow_name": "Automated Content Generation & Publishing - Wordpress",
      "complexity": {
        "node_count": 30,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1801_Wait_Code_Automation_Webhook.json",
      "workflow_name": "spy tool",
      "complexity": {
        "node_count": 38,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1805_Wait_Code_Automate_Webhook.json",
      "workflow_name": "AI Automated TikTok/Youtube Shorts/Reels Generator",
      "complexity": {
        "node_count": 104,
        "connection_count": 51,
        "max_depth": 1,
        "branching_factor": 1.0212765957446808,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 8,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 58,
        "caching_opportunities": 0,
        "performance_score": 84
      },
      "optimization_opportunities": [
        "Consider parallelizing 8 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.2
    },
    {
      "filename": "1879_Wait_Slack_Monitor_Triggered.json",
      "workflow_name": "N_01_Simple_Lead_Tracker_Automation_v4",
      "complexity": {
        "node_count": 21,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.5,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1917_Wait_Code_Create_Webhook.json",
      "workflow_name": "Generate Graphic Wallpaper with Midjourney, GPT-4o-mini and Canvas APIs",
      "complexity": {
        "node_count": 33,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1931_Wait_HTTP_Automation_Webhook.json",
      "workflow_name": "Flux Dev Image Generation Fal.ai",
      "complexity": {
        "node_count": 42,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1954_Wait_Code_Automation_Webhook.json",
      "workflow_name": "Namesilo Bulk Domain Availability [Template]",
      "complexity": {
        "node_count": 18,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1955_Wait_Splitout_Automation_Scheduled.json",
      "workflow_name": "HDW Lead Gel\u00e4ndewagen",
      "complexity": {
        "node_count": 123,
        "connection_count": 97,
        "max_depth": 1,
        "branching_factor": 0.9702970297029703,
        "cyclomatic_complexity": 9,
        "node_type_diversity": 22,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 10,
        "error_handling": 26,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 81.5
    },
    {
      "filename": "1977_Wait_Splitout_Automation_Webhook.json",
      "workflow_name": "Test Webhooks in n8n Without Changing WEBHOOK_URL (PostBin & BambooHR Example)",
      "complexity": {
        "node_count": 102,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.03125,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 20,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 39,
        "caching_opportunities": 0,
        "performance_score": 88
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 82.4
    },
    {
      "filename": "1990_Wait_Code_Automation_Webhook.json",
      "workflow_name": "OpenAI Assistant for Hubspot Chat",
      "complexity": {
        "node_count": 112,
        "connection_count": 38,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 10,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 11,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 73,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 11 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 78.5
    },
    {
      "filename": "1992_Wait_Code_Automation_Webhook.json",
      "workflow_name": "General 3D Presentation",
      "complexity": {
        "node_count": 50,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2000_Wait_Code_Automate_Webhook.json",
      "workflow_name": "Youtube_Automation",
      "complexity": {
        "node_count": 47,
        "connection_count": 29,
        "max_depth": 1,
        "branching_factor": 0.9459459459459459,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 15,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 3,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 88.5
    },
    {
      "filename": "2010_Wait_Limit_Automation_Webhook.json",
      "workflow_name": "\ud83d\udca1\ud83c\udf10 Essential Multipage Website Scraper with Jina.ai",
      "complexity": {
        "node_count": 34,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2029_Wait_Code_Automation_Triggered.json",
      "workflow_name": "Merge multiple runs into one",
      "complexity": {
        "node_count": 12,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 0.875,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "2042_Wait_Webhook_Automation_Webhook.json",
      "workflow_name": "FLUX-fill standalone",
      "complexity": {
        "node_count": 59,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0208333333333333,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0953_Webflow_Update_Triggered.json",
      "workflow_name": "Receive updates when a form submission occurs in your Webflow website",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0066_Webhook_Cron_Automate_Scheduled.json",
      "workflow_name": "Standup Bot - Worker",
      "complexity": {
        "node_count": 29,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 7,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 76
      },
      "optimization_opportunities": [
        "Consider parallelizing 7 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 66.3
    },
    {
      "filename": "0099_Webhook_Airtable_Automate_Webhook.json",
      "workflow_name": "0099_Webhook_Airtable_Automate_Webhook",
      "complexity": {
        "node_count": 11,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0165_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "0165_Webhook_Respondtowebhook_Create_Webhook",
      "complexity": {
        "node_count": 16,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 45,
      "overall_score": 72.0
    },
    {
      "filename": "0260_Webhook_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0270_Webhook_Discord_Automate_Webhook.json",
      "workflow_name": "Discord AI bot",
      "complexity": {
        "node_count": 25,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0295_Webhook_Dropcontact_Create_Webhook.json",
      "workflow_name": "Lemlist Workflow",
      "complexity": {
        "node_count": 32,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.1304347826086956,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 90.0
    },
    {
      "filename": "0375_Webhook_Code_Send_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 25,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0376_Webhook_Code_Create_Webhook.json",
      "workflow_name": "Mysql Workflow",
      "complexity": {
        "node_count": 22,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0410_Webhook_Filter_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 19,
        "max_depth": 1,
        "branching_factor": 1.032258064516129,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0414_Webhook_Filter_Create_Webhook.json",
      "workflow_name": "Filter Workflow",
      "complexity": {
        "node_count": 24,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0453_Webhook_Code_Create_Webhook.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 91,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0945945945945945,
        "cyclomatic_complexity": 7,
        "node_type_diversity": 13,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 7,
        "database_operations": 2,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 52,
        "caching_opportunities": 0,
        "performance_score": 86
      },
      "optimization_opportunities": [
        "Consider parallelizing 7 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 80.3
    },
    {
      "filename": "0467_Webhook_Respondtowebhook_Send_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0483_Webhook_Extractfromfile_Update_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 37,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0499_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "N8Ntrainingcustomerdatastore Workflow",
      "complexity": {
        "node_count": 20,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0565_Webhook_Slack_Automation_Webhook.json",
      "workflow_name": "Respondtowebhook Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0581_Webhook_Slack_Create_Webhook.json",
      "workflow_name": "Venafitlsprotectcloud Workflow",
      "complexity": {
        "node_count": 83,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0307692307692307,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 40,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0591_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Httprequest Workflow",
      "complexity": {
        "node_count": 58,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 42,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0615_Webhook_Filemaker_Create_Webhook.json",
      "workflow_name": "Crypto Workflow",
      "complexity": {
        "node_count": 36,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0619_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 64,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0632_Webhook_Manual_Create_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 50,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0644_Webhook_Slack_Create_Webhook.json",
      "workflow_name": "Thehiveprojecttrigger Workflow",
      "complexity": {
        "node_count": 155,
        "connection_count": 56,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 12,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 87,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0672_Webhook_Schedule_Update_Webhook.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 78,
        "connection_count": 31,
        "max_depth": 1,
        "branching_factor": 1.0169491525423728,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 20,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 39,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0683_Webhook_Telegram_Create_Webhook.json",
      "workflow_name": "Code Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0692_Webhook_Code_Update_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 77,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0702_Webhook_GoogleCalendar_Create_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 119,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 81,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0722_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Automate Drive-To-Store Lead Generation System (with coupon) on SuiteCRM",
      "complexity": {
        "node_count": 54,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 0.975609756097561,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0802_Webhook_Nocodb_Create_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 43,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0666666666666667,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0813_Webhook_Respondtowebhook_Process_Webhook.json",
      "workflow_name": "Html2Pdf Workflow",
      "complexity": {
        "node_count": 23,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0829_Webhook_Code_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 152,
        "connection_count": 64,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 10,
        "complexity_score": 75
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 57,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 84.5
    },
    {
      "filename": "0834_Webhook_Slack_Create_Webhook.json",
      "workflow_name": "Lmchatopenai Workflow",
      "complexity": {
        "node_count": 35,
        "connection_count": 13,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 14,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0845_Webhook_Filter_Export_Webhook.json",
      "workflow_name": "Webhook Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 7,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0892_Webhook_Code_Create_Webhook.json",
      "workflow_name": "Openai Workflow",
      "complexity": {
        "node_count": 40,
        "connection_count": 21,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0914_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 18,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0833333333333333,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 9,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0942_Webhook_Signl4_Automation_Webhook.json",
      "workflow_name": "TheHive",
      "complexity": {
        "node_count": 7,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 55,
      "overall_score": 77.5
    },
    {
      "filename": "0979_Webhook_Filter_Automation_Webhook.json",
      "workflow_name": "comentarios automaticos",
      "complexity": {
        "node_count": 49,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1132_Webhook_Extractfromfile_Process_Webhook.json",
      "workflow_name": "Convert Squarespace Profiles to Shopify Customers in Google Sheets",
      "complexity": {
        "node_count": 23,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1252_Webhook_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "AI Agent to chat with you Search Console Data, using OpenAI and Postgres",
      "complexity": {
        "node_count": 60,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1255_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Stock Q&A Workflow",
      "complexity": {
        "node_count": 38,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 14,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1263_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Voice RAG Chatbot with ElevenLabs and OpenAI",
      "complexity": {
        "node_count": 58,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0277777777777777,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1274_Webhook_Code_Automate_Webhook.json",
      "workflow_name": "Stickynote Workflow",
      "complexity": {
        "node_count": 77,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 33,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1385_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Business WhatsApp AI RAG Chatbot",
      "complexity": {
        "node_count": 63,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0232558139534884,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 16,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 34,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1410_Webhook_Discord_Automate_Webhook.json",
      "workflow_name": "Discord AI bot",
      "complexity": {
        "node_count": 25,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 10,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1415_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "complexity": {
        "node_count": 31,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1416_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "complexity": {
        "node_count": 31,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1417_Webhook_Respondtowebhook_Create_Webhook.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "complexity": {
        "node_count": 31,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1432_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 64,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1433_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 64,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1477_Webhook_Slack_Update_Webhook.json",
      "workflow_name": "Get event triggered notifications / updates on preferred messaging channels with TwentyCRM",
      "complexity": {
        "node_count": 20,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0909090909090908,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1502_Webhook_Slack_Automate_Webhook.json",
      "workflow_name": "Respondtowebhook Workflow",
      "complexity": {
        "node_count": 41,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 16,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1525_Webhook_Telegram_Create_Webhook.json",
      "workflow_name": "Send Telegram Alerts for New WooCommerce Orders",
      "complexity": {
        "node_count": 14,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 5,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "1541_Webhook_Code_Create_Webhook.json",
      "workflow_name": "Notify_user_in_Slack_of_quarantined_email_and_create_Jira_ticket_if_opened",
      "complexity": {
        "node_count": 37,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.037037037037037,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 19,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1561_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Business WhatsApp AI RAG Chatbot",
      "complexity": {
        "node_count": 69,
        "connection_count": 28,
        "max_depth": 1,
        "branching_factor": 1.0222222222222221,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 17,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 36,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1578_Webhook_Code_Automation_Webhook.json",
      "workflow_name": "Obsidian Notes Read Aloud: Available as a Podcast Feed",
      "complexity": {
        "node_count": 62,
        "connection_count": 22,
        "max_depth": 1,
        "branching_factor": 1.0212765957446808,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 34,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1601_Webhook_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "AI Agent to chat with you Search Console Data, using OpenAI and Postgres",
      "complexity": {
        "node_count": 60,
        "connection_count": 18,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 13,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1612_Webhook_Code_Automate_Webhook.json",
      "workflow_name": "LINE BOT - Google Sheets Record Receipt",
      "complexity": {
        "node_count": 37,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 20,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1694_Webhook_HTTP_Automation_Webhook.json",
      "workflow_name": "Enrich Company Data from Google Sheet with OpenAI Agent and Scraper Tool",
      "complexity": {
        "node_count": 33,
        "connection_count": 15,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 13,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 15,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1722_Webhook_Code_Automation_Webhook.json",
      "workflow_name": "Basic PDF Digital Sign Service",
      "complexity": {
        "node_count": 74,
        "connection_count": 37,
        "max_depth": 1,
        "branching_factor": 0.9850746268656716,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 7,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 37,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 60,
      "overall_score": 78.0
    },
    {
      "filename": "1733_Webhook_Slack_Automate_Webhook.json",
      "workflow_name": "Venafitlsprotectcloud Workflow",
      "complexity": {
        "node_count": 83,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 1.0307692307692307,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 14,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 40,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1740_Webhook_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "Validate Seatable Webhooks with HMAC SHA256 Authentication",
      "complexity": {
        "node_count": 22,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0625,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "1770_Webhook_Extractfromfile_Automation_Webhook.json",
      "workflow_name": "Image-Based Data Extraction API using Gemini AI",
      "complexity": {
        "node_count": 39,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 25,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1855_Webhook_Respondtowebhook_Automation_Webhook.json",
      "workflow_name": "Unique QRcode coupon assignment and validation for Lead Generation system",
      "complexity": {
        "node_count": 98,
        "connection_count": 32,
        "max_depth": 1,
        "branching_factor": 0.9880952380952381,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 5,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 64,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 5 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1881_Webhook_Code_Automate_Webhook.json",
      "workflow_name": "Personal Portfolio Resume CV Chatbot",
      "complexity": {
        "node_count": 71,
        "connection_count": 33,
        "max_depth": 1,
        "branching_factor": 0.9545454545454546,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 19,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 31,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1887_Webhook_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Voice RAG Chatbot with ElevenLabs and OpenAI",
      "complexity": {
        "node_count": 58,
        "connection_count": 25,
        "max_depth": 1,
        "branching_factor": 1.0277777777777777,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 15,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 30,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "1897_Webhook_Filter_Sync_Webhook.json",
      "workflow_name": "Realtime Notion Todoist 2-way Sync Template",
      "complexity": {
        "node_count": 341,
        "connection_count": 169,
        "max_depth": 1,
        "branching_factor": 1.0590405904059041,
        "cyclomatic_complexity": 22,
        "node_type_diversity": 29,
        "complexity_score": 65
      },
      "performance": {
        "http_requests": 12,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 2,
        "error_handling": 93,
        "caching_opportunities": 0,
        "performance_score": 80
      },
      "optimization_opportunities": [
        "Consider parallelizing 12 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 80,
      "overall_score": 75.5
    },
    {
      "filename": "2007_Webhook_Graphql_Automate_Webhook.json",
      "workflow_name": "Noop Workflow",
      "complexity": {
        "node_count": 26,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 12,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1521_Whatsapp_Stickynote_Automation_Webhook.json",
      "workflow_name": "AI Customer-Support Assistant \u00b7 WhatsApp Ready \u00b7 Works for Any Business",
      "complexity": {
        "node_count": 30,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 10,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 1,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "2030_Whatsapp_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "WhatsApp starter workflow",
      "complexity": {
        "node_count": 31,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 18,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1229_Wise_Automate.json",
      "workflow_name": "Wise Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1230_Wise_Airtable_Automate_Triggered.json",
      "workflow_name": "Wisetrigger Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1148_Woocommerce_Slack_Create_Triggered.json",
      "workflow_name": "New WooCommerce product to Slack",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1151_Woocommerce_Slack_Create_Triggered.json",
      "workflow_name": "New WooCommerce order to Slack",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1155_Woocommerce_Slack_Create_Triggered.json",
      "workflow_name": "New WooCommerce refund to Slack",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 0.6666666666666666,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1599_Woocommercetool_Manual_Automation_Webhook.json",
      "workflow_name": "OpenAI Personal Shopper with RAG and WooCommerce",
      "complexity": {
        "node_count": 43,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1857_Woocommercetool_Manual_Automation_Webhook.json",
      "workflow_name": "OpenAI Personal Shopper with RAG and WooCommerce",
      "complexity": {
        "node_count": 43,
        "connection_count": 27,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 18,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 13,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0502_Wordpress_Filter_Update_Scheduled.json",
      "workflow_name": "Wordpress Workflow",
      "complexity": {
        "node_count": 42,
        "connection_count": 14,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 4,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 4 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 70,
      "overall_score": 83.5
    },
    {
      "filename": "0721_Wordpress_Converttofile_Process_Triggered.json",
      "workflow_name": "Manualtrigger Workflow",
      "complexity": {
        "node_count": 14,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "1327_Wordpress_Manual_Automate_Webhook.json",
      "workflow_name": "Automate Content Generator for WordPress with DeepSeek R1",
      "complexity": {
        "node_count": 39,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1550_Wordpress_Manual_Automation_Webhook.json",
      "workflow_name": "The Ultimate Guide to Optimize WordPress Blog Posts with AI",
      "complexity": {
        "node_count": 50,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 11,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 3,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 24,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 3 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "1949_Wordpress_Manual_Automate_Webhook.json",
      "workflow_name": "Automate Content Generator for WordPress with DeepSeek R1",
      "complexity": {
        "node_count": 39,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 8,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 17,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 90,
      "overall_score": 91.5
    },
    {
      "filename": "0010_Writebinaryfile_Create.json",
      "workflow_name": "Writebinaryfile Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 1,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 60,
      "overall_score": 79.5
    },
    {
      "filename": "0747_Writebinaryfile_Spreadsheetfile_Automate.json",
      "workflow_name": "Postgres Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 1,
        "file_operations": 2,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "1129_Wufoo_Update_Triggered.json",
      "workflow_name": "Receive updates when a form is submitted in Wufoo",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0081_Xml_Respondtowebhook_Automate_Webhook.json",
      "workflow_name": "Xml Workflow",
      "complexity": {
        "node_count": 16,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 8,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 89.0
    },
    {
      "filename": "0197_Youtube_Telegram_Send_Scheduled.json",
      "workflow_name": "Set Workflow",
      "complexity": {
        "node_count": 10,
        "connection_count": 4,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0274_Zendesk_Asana_Create_Webhook.json",
      "workflow_name": "Zendesk Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0279_Zendesk_GitHub_Create_Webhook.json",
      "workflow_name": "Zendesk Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0280_Zendesk_Jira_Create_Webhook.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 6,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 100,
      "overall_score": 97.0
    },
    {
      "filename": "0285_Zendesk_HubSpot_Create_Scheduled.json",
      "workflow_name": "Merge Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 8,
        "max_depth": 1,
        "branching_factor": 1.1111111111111112,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 7,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0286_Zendesk_HubSpot_Create_Scheduled.json",
      "workflow_name": "If Workflow",
      "complexity": {
        "node_count": 19,
        "connection_count": 12,
        "max_depth": 1,
        "branching_factor": 1.0769230769230769,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    },
    {
      "filename": "0823_Zendesk_Update_Triggered.json",
      "workflow_name": "Receive updates for support in Zendesk",
      "complexity": {
        "node_count": 7,
        "connection_count": 0,
        "max_depth": 1,
        "branching_factor": 0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 2,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 87.5
    },
    {
      "filename": "0086_Zohocrm_Trello_Create_Triggered.json",
      "workflow_name": "Zohocrm Workflow",
      "complexity": {
        "node_count": 15,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.3333333333333333,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 9,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 80,
      "overall_score": 86.0
    }
  ],
  "summary_statistics": {
    "average_score": 87.8,
    "median_score": 87.5,
    "min_score": 58.9,
    "max_score": 98.5,
    "score_distribution": {
      "excellent (90-100)": 945,
      "good (80-89)": 829,
      "fair (70-79)": 250,
      "poor (<70)": 33
    }
  },
  "top_performers": [
    {
      "filename": "0126_Error_Slack_Automate_Triggered.json",
      "workflow_name": "Slack Workflow",
      "complexity": {
        "node_count": 7,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0456_Error_Gmail_Send_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0545_Error_N8N_Import_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1036_Error_Twilio_Send_Triggered.json",
      "workflow_name": "Send an SMS when a workflow fails",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1099_Error_Gmail_Send_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1179_Error_Mailgun_Automate_Triggered.json",
      "workflow_name": "Errortrigger Workflow",
      "complexity": {
        "node_count": 8,
        "connection_count": 1,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 3,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1948_Error_Telegram_Send_Triggered.json",
      "workflow_name": "Error Handler send Telegram",
      "complexity": {
        "node_count": 10,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 2,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "1833_GoogleSheets_Gmail_Create_Triggered.json",
      "workflow_name": "Add new incoming emails to a Google Sheets spreadsheet as a new row.",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "2031_Googletasks_Gmail_Create_Triggered.json",
      "workflow_name": "\ud83d\udce6 New Email \u2794 Create Google Task",
      "complexity": {
        "node_count": 10,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    },
    {
      "filename": "0865_Mattermost_Twilio_Automate_Triggered.json",
      "workflow_name": "Twilio Workflow",
      "complexity": {
        "node_count": 9,
        "connection_count": 2,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 4,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 0,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 1,
        "caching_opportunities": 0,
        "performance_score": 100
      },
      "optimization_opportunities": [],
      "best_practices_score": 100,
      "overall_score": 98.5
    }
  ],
  "optimization_candidates": [
    {
      "filename": "0083_Noop_HTTP_Automation_Webhook.json",
      "workflow_name": "Plex Automatic Throttler",
      "complexity": {
        "node_count": 21,
        "connection_count": 16,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 5,
        "node_type_diversity": 6,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 6,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 78
      },
      "optimization_opportunities": [
        "Consider parallelizing 6 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows"
      ],
      "best_practices_score": 25,
      "overall_score": 58.9
    },
    {
      "filename": "1107_HTTP_GitHub_Automation_Webhook.json",
      "workflow_name": "Dashboard",
      "complexity": {
        "node_count": 24,
        "connection_count": 10,
        "max_depth": 1,
        "branching_factor": 2.3,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 17,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 70
      },
      "optimization_opportunities": [
        "Consider parallelizing 17 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 63.0
    },
    {
      "filename": "0159_Datetime_Functionitem_Create_Webhook.json",
      "workflow_name": "0159_Datetime_Functionitem_Create_Webhook",
      "complexity": {
        "node_count": 12,
        "connection_count": 11,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 10,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 25,
      "overall_score": 64.0
    },
    {
      "filename": "1381_Splitout_Code_Automation_Webhook.json",
      "workflow_name": "1381_Splitout_Code_Automation_Webhook",
      "complexity": {
        "node_count": 14,
        "connection_count": 9,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 3,
        "node_type_diversity": 8,
        "complexity_score": 90
      },
      "performance": {
        "http_requests": 2,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Consider parallelizing 2 HTTP requests",
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 64.0
    },
    {
      "filename": "1157_Functionitem_Executecommand_Update_Webhook.json",
      "workflow_name": "1157_Functionitem_Executecommand_Update_Webhook",
      "complexity": {
        "node_count": 25,
        "connection_count": 24,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 6,
        "node_type_diversity": 10,
        "complexity_score": 80
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 3,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 35,
      "overall_score": 65.0
    },
    {
      "filename": "0494_HTTP_Htmlextract_Send_Webhook.json",
      "workflow_name": "0494_HTTP_Htmlextract_Send_Webhook",
      "complexity": {
        "node_count": 7,
        "connection_count": 6,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0074_Manual_HTTP_Monitor_Webhook.json",
      "workflow_name": "0074_Manual_HTTP_Monitor_Webhook",
      "complexity": {
        "node_count": 8,
        "connection_count": 7,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 2,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0206_Manual_Stickynote_Automation_Webhook.json",
      "workflow_name": "0206_Manual_Stickynote_Automation_Webhook",
      "complexity": {
        "node_count": 6,
        "connection_count": 3,
        "max_depth": 1,
        "branching_factor": 1.0,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 5,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0101_Wait_Manual_Automation_Webhook.json",
      "workflow_name": "0101_Wait_Manual_Automation_Webhook",
      "complexity": {
        "node_count": 6,
        "connection_count": 5,
        "max_depth": 1,
        "branching_factor": 1.2,
        "cyclomatic_complexity": 1,
        "node_type_diversity": 6,
        "complexity_score": 95
      },
      "performance": {
        "http_requests": 1,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 1,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 90
      },
      "optimization_opportunities": [
        "Add error handling for better reliability"
      ],
      "best_practices_score": 25,
      "overall_score": 65.5
    },
    {
      "filename": "0066_Webhook_Cron_Automate_Scheduled.json",
      "workflow_name": "Standup Bot - Worker",
      "complexity": {
        "node_count": 29,
        "connection_count": 23,
        "max_depth": 1,
        "branching_factor": 0.9615384615384616,
        "cyclomatic_complexity": 4,
        "node_type_diversity": 9,
        "complexity_score": 85
      },
      "performance": {
        "http_requests": 7,
        "database_operations": 0,
        "file_operations": 0,
        "api_calls": 0,
        "loops": 0,
        "error_handling": 0,
        "caching_opportunities": 0,
        "performance_score": 76
      },
      "optimization_opportunities": [
        "Consider parallelizing 7 HTTP requests",
        "Add error handling for better reliability",
        "Consider splitting complex workflow into smaller, focused workflows",
        "Consolidate data transformation operations"
      ],
      "best_practices_score": 45,
      "overall_score": 66.3
    }
  ],
  "recommendations": []
}